main.svelte-19axu57{background-color:white;box-sizing:border-box}
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
h1.svelte-1acdip2.svelte-1acdip2,p.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:0 auto}.hero.svelte-1acdip2.svelte-1acdip2{background-color:#3e4b59;padding-left:80px;padding-top:30vh;width:100%;height:60vh}.hero.svelte-1acdip2 p.svelte-1acdip2{margin:1em auto;color:white}h1.svelte-1acdip2.svelte-1acdip2{font-size:2.8em;text-align:left;text-transform:uppercase;font-weight:700;margin:0 0 0.5em 0;color:white;letter-spacing:25%}h2.svelte-1acdip2.svelte-1acdip2{text-align:left;margin:auto;text-transform:uppercase}h3.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:auto}.bigImg.svelte-1acdip2.svelte-1acdip2{max-width:1400px;background-color:grey}button.svelte-1acdip2.svelte-1acdip2{background:#7AAF54;text-transform:uppercase;padding:10px 20px 10px 20px;font-size:30px;line-height:38px;border:none;border-radius:10px;color:white;box-shadow:0px 4px 4px rgba(0, 0, 0, 0.25)}img.svelte-1acdip2.svelte-1acdip2{width:100%;max-width:400px;margin:0 0 1em 0}.about.svelte-1acdip2.svelte-1acdip2{padding:1.5em}p.svelte-1acdip2.svelte-1acdip2{color:black;text-align:left}ul.svelte-1acdip2.svelte-1acdip2{display:flex;flex-direction:row;list-style:none;margin-block-start:0px;margin-block-end:0px;padding-inline-start:0px}li.svelte-1acdip2.svelte-1acdip2{justify-content:space-around;margin:auto}.why.svelte-1acdip2.svelte-1acdip2{padding-left:80px;margin:1em auto}a.svelte-1acdip2.svelte-1acdip2{text-decoration:none;padding:4px 30px}@media(min-width: 480px){h1.svelte-1acdip2.svelte-1acdip2{font-size:4em}}
main.svelte-2y5a9m{display:flex;flex-flow:row wrap;margin-left:50px;margin-top:25px}#main-content.svelte-2y5a9m{margin-top:-50px;margin-left:21vw;margin-right:50px;padding-right:15px}
a.svelte-earzo7{text-decoration:none}#agree.svelte-earzo7{float:right}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
aside.svelte-n0ypaq{display:block;top:50px;left:0;width:27.77vw;height:100vh;padding-left:50px}section.svelte-n0ypaq{padding:10px 10px 20px 10px}
.num.svelte-m0bqhn{padding-right:100px}div.svelte-m0bqhn{color:black}.active.svelte-m0bqhn{display:block}
.button-holder.svelte-1sss75x{width:27vw;display:flex;flex-flow:column nowrap}.video-holder.svelte-1sss75x{width:100%}button.svelte-1sss75x{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}#alert.svelte-1sss75x{color:red;font-weight:700;font-size:24px}#not-covered.svelte-1sss75x{color:red;background:#FFEEEE;border-radius:6px;border:none}
.quiz-holder.svelte-c95n2i{display:block;width:65vw;left:20vw;height:100vh;padding:20px 50px}#warning.svelte-c95n2i{color:red;font-size:24px}.step.svelte-c95n2i{margin-bottom:55px}#progress.svelte-c95n2i{margin-top:50px}ul.svelte-c95n2i{padding-inline-start:15px}li.svelte-c95n2i{margin:30px 0px}.incomplete.svelte-c95n2i{color:#a0a0a0;list-style-type:circle}.complete.svelte-c95n2i{list-style-type:disc}.Side-headline.svelte-c95n2i{font-size:24px;font-weight:700}.btn-dark.svelte-c95n2i{color:white;background:#0F2033;border-radius:6px;width:30%;text-align:center;padding:5px 10px}button.svelte-c95n2i{border:none;padding:5px 10px}form.svelte-c95n2i{display:flex;flex-flow:column}label.svelte-c95n2i{padding:10px}
nav.svelte-juo55k{display:flex;flex-flow:row nowrap;height:50px;justify-content:space-between;align-items:center;background-color:#3e4b59;font-weight:300;padding:0 1em}ul.svelte-juo55k{display:flex;list-style:none;justify-content:flex-end;margin:0;padding:0;color:#c7c7c7}img.svelte-juo55k{display:flex;justify-content:flex-start;height:30px}li.svelte-juo55k{display:flex;margin:0px 20px 0px 20px;text-transform:uppercase}[aria-current].svelte-juo55k{position:relative;display:inline-block}[aria-current].svelte-juo55k::after{position:absolute;content:'';width:calc(100% - 1em);height:2px;background-color:#e74e45;display:block}a.svelte-juo55k{display:flex;padding:1em 0.5em;text-decoration:none;margin:2em, 0em}
#timer.svelte-99wito{display:flex;flex-direction:column;width:20vw;height:135px}#remaining.svelte-99wito{font-size:20px;padding:5px 0px 20px 0px}#minutes.svelte-99wito{color:white;background:#0F2033;border-radius:6px;width:9.7vw;height:6.7vh;text-align:center;font-size:30px}.done.svelte-99wito{display:flex;flex-flow:row nowrap;align-items:center;margin-bottom:55px;margin-right:40px;height:40px}.lock.svelte-99wito{width:32px;margin:10px}.ellipse.svelte-99wito{width:6px;height:6px;margin:3px}.active.svelte-99wito{}.inactive.svelte-99wito{}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.quiz-holder.svelte-dkh3bo{display:block;width:65vw;left:20vw;height:100vh;padding:20px 50px}.step.svelte-dkh3bo{margin-bottom:55px}#progress.svelte-dkh3bo{margin-top:50px}ul.svelte-dkh3bo{padding-inline-start:15px}li.svelte-dkh3bo{margin:30px 0px}.incomplete.svelte-dkh3bo{color:#a0a0a0;list-style-type:circle}.complete.svelte-dkh3bo{list-style-type:disc}.Side-headline.svelte-dkh3bo{font-size:24px;font-weight:700}#videoElement.svelte-dkh3bo{}.btn-dark.svelte-dkh3bo{color:white;background:#0F2033;border-radius:6px;width:30%;text-align:center;padding:5px 10px}button.svelte-dkh3bo{border:none;padding:5px 10px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */