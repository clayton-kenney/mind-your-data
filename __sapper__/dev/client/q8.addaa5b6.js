import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, p as globals, t as text, a as space, h as claim_text, c as claim_space, l as insert_dev, K as set_data_dev, n as noop, b as detach_dev, o as createEventDispatcher, N as onMount, M as afterUpdate, T as empty, q as query_selector_all, x as transition_out, y as check_outros, z as transition_in, B as group_outros, e as element, r as create_component, f as claim_element, g as children, u as claim_component, k as add_location, j as attr_dev, m as append_dev, w as mount_component, P as listen_dev, A as destroy_component, U as run_all } from './client.1ece20b9.js';

/* src/components/Detect.svelte generated by Svelte v3.23.2 */

const { console: console_1 } = globals;

function create_fragment(ctx) {
	let t0;
	let t1;
	let t2;

	const block = {
		c: function create() {
			t0 = text(/*output*/ ctx[0]);
			t1 = space();
			t2 = text(/*browser*/ ctx[1]);
		},
		l: function claim(nodes) {
			t0 = claim_text(nodes, /*output*/ ctx[0]);
			t1 = claim_space(nodes);
			t2 = claim_text(nodes, /*browser*/ ctx[1]);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, t2, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*output*/ 1) set_data_dev(t0, /*output*/ ctx[0]);
			if (dirty & /*browser*/ 2) set_data_dev(t2, /*browser*/ ctx[1]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(t2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	var isOpera = !!window.opr && !!opr.addons || !!window.opera || navigator.userAgent.indexOf(" OPR/") >= 0;

	// Firefox 1.0+
	var isFirefox = typeof InstallTrigger !== "undefined";

	// Safari 3.0+ "[object HTMLElementConstructor]" 
	var isSafari = (/constructor/i).test(window.HTMLElement) || (function (p) {
		return p.toString() === "[object SafariRemoteNotification]";
	})(!window["safari"] || typeof safari !== "undefined" && safari.pushNotification);

	// Internet Explorer 6-11
	var isIE = /*@cc_on!@*/
	 !!document.documentMode;

	// Edge 20+
	var isEdge = !isIE && !!window.StyleMedia;

	// Chrome 1 - 79
	var isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);

	// Edge (based on chromium) detection
	var isEdgeChromium = isChrome && navigator.userAgent.indexOf("Edg") != -1;

	// Blink engine detection
	var isBlink = (isChrome || isOpera) && !!window.CSS;

	let output = "Your browser is:";
	let browser;

	if (isOpera) {
		output += " Opera";
		browser = "opera";
	} else if (isFirefox) {
		output += " Firefox";
		browser = "firefox";
	} else if (isSafari) {
		output += " Safari";
		browser = "safari";
	} else if (isIE) {
		output += " Internet Explorer";
		browser = "ie";
	} else if (isEdge) {
		output += " Edge";
		browser = "edge";
	} else if (isChrome) {
		output += " Chrome";
		browser = "chrome";
	} else if (isEdgeChromium) {
		output += " Edge Chromium";
		browser = "edgechromium";
	} else {
		output += " Blink";
		browser = "blink";
	}

	console.log(browser);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Detect> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Detect", $$slots, []);

	$$self.$capture_state = () => ({
		isOpera,
		isFirefox,
		isSafari,
		isIE,
		isEdge,
		isChrome,
		isEdgeChromium,
		isBlink,
		output,
		browser
	});

	$$self.$inject_state = $$props => {
		if ("isOpera" in $$props) isOpera = $$props.isOpera;
		if ("isFirefox" in $$props) isFirefox = $$props.isFirefox;
		if ("isSafari" in $$props) isSafari = $$props.isSafari;
		if ("isIE" in $$props) isIE = $$props.isIE;
		if ("isEdge" in $$props) isEdge = $$props.isEdge;
		if ("isChrome" in $$props) isChrome = $$props.isChrome;
		if ("isEdgeChromium" in $$props) isEdgeChromium = $$props.isEdgeChromium;
		if ("isBlink" in $$props) isBlink = $$props.isBlink;
		if ("output" in $$props) $$invalidate(0, output = $$props.output);
		if ("browser" in $$props) $$invalidate(1, browser = $$props.browser);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [output, browser];
}

class Detect extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Detect",
			options,
			id: create_fragment.name
		});
	}
}

/* src/routes/quiz/q8.svelte generated by Svelte v3.23.2 */

const { console: console_1$1 } = globals;
const file = "src/routes/quiz/q8.svelte";

// (50:14) 
function create_if_block_1(ctx) {
	let section;
	let p0;
	let t0;
	let t1;
	let detect;
	let t2;
	let p1;
	let t3;
	let t4;
	let div;
	let h3;
	let t5;
	let t6;
	let button0;
	let t7;
	let t8;
	let button1;
	let t9;
	let current;
	let mounted;
	let dispose;
	detect = new Detect({ $$inline: true });

	const block = {
		c: function create() {
			section = element("section");
			p0 = element("p");
			t0 = text("Give 3rd party cookies the boot");
			t1 = space();
			create_component(detect.$$.fragment);
			t2 = space();
			p1 = element("p");
			t3 = text("instructions to change browser settings autodetect");
			t4 = space();
			div = element("div");
			h3 = element("h3");
			t5 = text("Did disable tracking cookies?");
			t6 = space();
			button0 = element("button");
			t7 = text("Yup");
			t8 = space();
			button1 = element("button");
			t9 = text("No I then following me");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", {});
			var section_nodes = children(section);
			p0 = claim_element(section_nodes, "P", {});
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, "Give 3rd party cookies the boot");
			p0_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			claim_component(detect.$$.fragment, section_nodes);
			t2 = claim_space(section_nodes);
			p1 = claim_element(section_nodes, "P", {});
			var p1_nodes = children(p1);
			t3 = claim_text(p1_nodes, "instructions to change browser settings autodetect");
			p1_nodes.forEach(detach_dev);
			t4 = claim_space(section_nodes);
			div = claim_element(section_nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h3 = claim_element(div_nodes, "H3", {});
			var h3_nodes = children(h3);
			t5 = claim_text(h3_nodes, "Did disable tracking cookies?");
			h3_nodes.forEach(detach_dev);
			t6 = claim_space(div_nodes);
			button0 = claim_element(div_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t7 = claim_text(button0_nodes, "Yup");
			button0_nodes.forEach(detach_dev);
			t8 = claim_space(div_nodes);
			button1 = claim_element(div_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);
			t9 = claim_text(button1_nodes, "No I then following me");
			button1_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p0, file, 51, 1, 1345);
			add_location(p1, file, 53, 1, 1397);
			add_location(h3, file, 55, 2, 1486);
			attr_dev(button0, "class", "svelte-9jf7df");
			add_location(button0, file, 56, 2, 1527);
			attr_dev(button1, "class", "svelte-9jf7df");
			add_location(button1, file, 57, 2, 1570);
			attr_dev(div, "class", "button-holder svelte-9jf7df");
			add_location(div, file, 54, 1, 1456);
			add_location(section, file, 50, 0, 1334);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, p0);
			append_dev(p0, t0);
			append_dev(section, t1);
			mount_component(detect, section, null);
			append_dev(section, t2);
			append_dev(section, p1);
			append_dev(p1, t3);
			append_dev(section, t4);
			append_dev(section, div);
			append_dev(div, h3);
			append_dev(h3, t5);
			append_dev(div, t6);
			append_dev(div, button0);
			append_dev(button0, t7);
			append_dev(div, t8);
			append_dev(div, button1);
			append_dev(button1, t9);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*complete*/ ctx[1], false, false, false),
					listen_dev(button1, "click", /*incomplete*/ ctx[2], false, false, false)
				];

				mounted = true;
			}
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(detect.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(detect.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_component(detect);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(50:14) ",
		ctx
	});

	return block;
}

// (41:0) {#if q==0}
function create_if_block(ctx) {
	let section;
	let h2;
	let t0;
	let t1;
	let p0;
	let t2;
	let t3;
	let p1;
	let t4;
	let t5;
	let div;
	let button;
	let t6;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			section = element("section");
			h2 = element("h2");
			t0 = text("Privacy settings: Want a cookie?");
			t1 = space();
			p0 = element("p");
			t2 = text("Well, not that kind of cookie. Many websites allow third party cookies which are designed to hold data specific to a particular user and website.");
			t3 = space();
			p1 = element("p");
			t4 = text("Youâ€™re just supposed to trust the willingness and ability of any organization to put your privacy over their need to meet their goals, which usually entail profits. Yeah. Sure.");
			t5 = space();
			div = element("div");
			button = element("button");
			t6 = text("Continue");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", {});
			var section_nodes = children(section);
			h2 = claim_element(section_nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "Privacy settings: Want a cookie?");
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			p0 = claim_element(section_nodes, "P", {});
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, "Well, not that kind of cookie. Many websites allow third party cookies which are designed to hold data specific to a particular user and website.");
			p0_nodes.forEach(detach_dev);
			t3 = claim_space(section_nodes);
			p1 = claim_element(section_nodes, "P", {});
			var p1_nodes = children(p1);
			t4 = claim_text(p1_nodes, "Youâ€™re just supposed to trust the willingness and ability of any organization to put your privacy over their need to meet their goals, which usually entail profits. Yeah. Sure.");
			p1_nodes.forEach(detach_dev);
			t5 = claim_space(section_nodes);
			div = claim_element(section_nodes, "DIV", { class: true });
			var div_nodes = children(div);
			button = claim_element(div_nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t6 = claim_text(button_nodes, "Continue");
			button_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file, 42, 1, 841);
			add_location(p0, file, 43, 1, 885);
			add_location(p1, file, 44, 1, 1040);
			attr_dev(button, "class", "svelte-9jf7df");
			add_location(button, file, 46, 2, 1255);
			attr_dev(div, "class", "button-holder svelte-9jf7df");
			add_location(div, file, 45, 1, 1225);
			add_location(section, file, 41, 0, 830);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, h2);
			append_dev(h2, t0);
			append_dev(section, t1);
			append_dev(section, p0);
			append_dev(p0, t2);
			append_dev(section, t3);
			append_dev(section, p1);
			append_dev(p1, t4);
			append_dev(section, t5);
			append_dev(section, div);
			append_dev(div, button);
			append_dev(button, t6);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*advance*/ ctx[3], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(41:0) {#if q==0}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let t;
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_if_block_1];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*q*/ ctx[0] == 0) return 0;
		if (/*q*/ ctx[0] = 1) return 1;
		return -1;
	}

	if (~(current_block_type_index = select_block_type(ctx))) {
		if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
	}

	const block = {
		c: function create() {
			t = space();
			if (if_block) if_block.c();
			if_block_anchor = empty();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1g6utuz\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
			this.h();
		},
		h: function hydrate() {
			document.title = "Question 4: Privacy Settings";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);

			if (~current_block_type_index) {
				if_blocks[current_block_type_index].m(target, anchor);
			}

			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if (~current_block_type_index) {
					if_blocks[current_block_type_index].p(ctx, dirty);
				}
			} else {
				if (if_block) {
					group_outros();

					transition_out(if_blocks[previous_block_index], 1, 1, () => {
						if_blocks[previous_block_index] = null;
					});

					check_outros();
				}

				if (~current_block_type_index) {
					if_block = if_blocks[current_block_type_index];

					if (!if_block) {
						if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
						if_block.c();
					}

					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				} else {
					if_block = null;
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);

			if (~current_block_type_index) {
				if_blocks[current_block_type_index].d(detaching);
			}

			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	const dispatch = createEventDispatcher();

	//confirm comletion of quiz to master quiz component
	function complete() {
		dispatch("message", {
			question: 2, //Q-1 becaue of array
			complete: "true"
		});
	}

	function incomplete() {
		dispatch("message", {
			question: 2, //Q-1 becaue of array
			complete: "false"
		});
	}

	let q = 0;

	function advance() {
		$$invalidate(0, q++, q);
		console.log(q);
	}

	function advanceTwo() {
		$$invalidate(0, q += 2);
		console.log(q);
	}

	let browserType;

	onMount(async () => {
		browserType = navigator.appCodeName;

		if (browserType == "Mozilla") {
			$$invalidate(0, q = 1);
		}
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1$1.warn(`<Q8> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Q8", $$slots, []);

	$$self.$capture_state = () => ({
		createEventDispatcher,
		dispatch,
		onMount,
		afterUpdate,
		Detect,
		complete,
		incomplete,
		q,
		advance,
		advanceTwo,
		browserType
	});

	$$self.$inject_state = $$props => {
		if ("q" in $$props) $$invalidate(0, q = $$props.q);
		if ("browserType" in $$props) browserType = $$props.browserType;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [q, complete, incomplete, advance];
}

class Q8 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Q8",
			options,
			id: create_fragment$1.name
		});
	}
}

export default Q8;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
