import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, R as validate_store, T as component_subscribe, v as validate_slots, B as space, f as element, D as query_selector_all, j as detach_dev, E as claim_space, g as claim_element, h as children, k as attr_dev, l as add_location, n as insert_dev, b as transition_out, x as check_outros, t as transition_in, q as add_render_callback, r as create_in_transition, u as create_out_transition, C as text, F as claim_text, p as append_dev, $ as create_bidirectional_transition, w as group_outros, Z as svg_element, Q as toggle_class, W as listen_dev, Y as set_data_dev, _ as run_all, G as noop } from './client.56ee6d24.js';
import { c as slide, b as blur, f as fade, a as fly, d as quintOut, h as expoOut, s as sineInOut } from './index.1c3641c2.js';
import { T as TransHelp } from './TransHelp.acc41ba8.js';
import { q as quizSteps } from './store.484e12ed.js';

/* src/routes/quiz.svelte generated by Svelte v3.23.2 */
const file = "src/routes/quiz.svelte";

// (21:25) 
function create_if_block_1(ctx) {
	let section;
	let p0;
	let t0;
	let t1;
	let div1;
	let div0;
	let p1;
	let t2_value = /*$quizSteps*/ ctx[2][0].name + "";
	let t2;
	let t3;
	let svg0;
	let path0;
	let div0_transition;
	let t4;
	let t5;
	let hr0;
	let t6;
	let div3;
	let div2;
	let p2;
	let t7_value = /*$quizSteps*/ ctx[2][1].name + "";
	let t7;
	let t8;
	let svg1;
	let path1;
	let div2_transition;
	let t9;
	let t10;
	let hr1;
	let t11;
	let div5;
	let div4;
	let p3;
	let t12_value = /*$quizSteps*/ ctx[2][3].name + "";
	let t12;
	let t13;
	let svg2;
	let path2;
	let t14;
	let div5_transition;
	let t15;
	let hr2;
	let t16;
	let div7;
	let div6;
	let p4;
	let t17_value = /*$quizSteps*/ ctx[2][4].name + "";
	let t17;
	let t18;
	let svg3;
	let path3;
	let t19;
	let div7_transition;
	let t20;
	let hr3;
	let t21;
	let div9;
	let div8;
	let p5;
	let t22_value = /*$quizSteps*/ ctx[2][5].name + "";
	let t22;
	let t23;
	let svg4;
	let path4;
	let t24;
	let div9_transition;
	let t25;
	let hr4;
	let t26;
	let div11;
	let div10;
	let p6;
	let t27_value = /*$quizSteps*/ ctx[2][6].name + "";
	let t27;
	let t28;
	let svg5;
	let path5;
	let t29;
	let div11_transition;
	let t30;
	let hr5;
	let t31;
	let div13;
	let div12;
	let p7;
	let t32_value = /*$quizSteps*/ ctx[2][8].name + "";
	let t32;
	let t33;
	let svg6;
	let path6;
	let t34;
	let div13_transition;
	let t35;
	let hr6;
	let t36;
	let div15;
	let div14;
	let p8;
	let t37_value = /*$quizSteps*/ ctx[2][9].name + "";
	let t37;
	let t38;
	let svg7;
	let path7;
	let t39;
	let div15_transition;
	let t40;
	let button;
	let a;
	let t41;
	let section_intro;
	let section_outro;
	let current;
	let mounted;
	let dispose;
	let if_block0 = /*current*/ ctx[1] === "webcam" && create_if_block_9(ctx);
	let if_block1 = /*current*/ ctx[1] === "https" && create_if_block_8(ctx);
	let if_block2 = /*current*/ ctx[1] === "search" && create_if_block_7(ctx);
	let if_block3 = /*current*/ ctx[1] === "privacy" && create_if_block_6(ctx);
	let if_block4 = /*current*/ ctx[1] === "tracker" && create_if_block_5(ctx);
	let if_block5 = /*current*/ ctx[1] === "dns" && create_if_block_4(ctx);
	let if_block6 = /*current*/ ctx[1] === "location" && create_if_block_3(ctx);
	let if_block7 = /*current*/ ctx[1] === "iot" && create_if_block_2(ctx);

	const block = {
		c: function create() {
			section = element("section");
			p0 = element("p");
			t0 = text("This test contains 8 unique privacy tests that will take no more than 30 minutes to complete. Each test will give you some background infomation and then suggestions on how to better protect your data and privacy. All suggestins are optional, but if you want access to awsome swag, you need to complete 90% of the test.");
			t1 = space();
			div1 = element("div");
			div0 = element("div");
			p1 = element("p");
			t2 = text(t2_value);
			t3 = space();
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t4 = space();
			if (if_block0) if_block0.c();
			t5 = space();
			hr0 = element("hr");
			t6 = space();
			div3 = element("div");
			div2 = element("div");
			p2 = element("p");
			t7 = text(t7_value);
			t8 = space();
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t9 = space();
			if (if_block1) if_block1.c();
			t10 = space();
			hr1 = element("hr");
			t11 = space();
			div5 = element("div");
			div4 = element("div");
			p3 = element("p");
			t12 = text(t12_value);
			t13 = space();
			svg2 = svg_element("svg");
			path2 = svg_element("path");
			t14 = space();
			if (if_block2) if_block2.c();
			t15 = space();
			hr2 = element("hr");
			t16 = space();
			div7 = element("div");
			div6 = element("div");
			p4 = element("p");
			t17 = text(t17_value);
			t18 = space();
			svg3 = svg_element("svg");
			path3 = svg_element("path");
			t19 = space();
			if (if_block3) if_block3.c();
			t20 = space();
			hr3 = element("hr");
			t21 = space();
			div9 = element("div");
			div8 = element("div");
			p5 = element("p");
			t22 = text(t22_value);
			t23 = space();
			svg4 = svg_element("svg");
			path4 = svg_element("path");
			t24 = space();
			if (if_block4) if_block4.c();
			t25 = space();
			hr4 = element("hr");
			t26 = space();
			div11 = element("div");
			div10 = element("div");
			p6 = element("p");
			t27 = text(t27_value);
			t28 = space();
			svg5 = svg_element("svg");
			path5 = svg_element("path");
			t29 = space();
			if (if_block5) if_block5.c();
			t30 = space();
			hr5 = element("hr");
			t31 = space();
			div13 = element("div");
			div12 = element("div");
			p7 = element("p");
			t32 = text(t32_value);
			t33 = space();
			svg6 = svg_element("svg");
			path6 = svg_element("path");
			t34 = space();
			if (if_block6) if_block6.c();
			t35 = space();
			hr6 = element("hr");
			t36 = space();
			div15 = element("div");
			div14 = element("div");
			p8 = element("p");
			t37 = text(t37_value);
			t38 = space();
			svg7 = svg_element("svg");
			path7 = svg_element("path");
			t39 = space();
			if (if_block7) if_block7.c();
			t40 = space();
			button = element("button");
			a = element("a");
			t41 = text("Start Challenge");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			p0 = claim_element(section_nodes, "P", { id: true, class: true });
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, "This test contains 8 unique privacy tests that will take no more than 30 minutes to complete. Each test will give you some background infomation and then suggestions on how to better protect your data and privacy. All suggestins are optional, but if you want access to awsome swag, you need to complete 90% of the test.");
			p0_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			div1 = claim_element(section_nodes, "DIV", {});
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			p1 = claim_element(div0_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t2 = claim_text(p1_nodes, t2_value);
			p1_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);

			svg0 = claim_element(
				div0_nodes,
				"svg",
				{
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					xmlns: true
				},
				1
			);

			var svg0_nodes = children(svg0);
			path0 = claim_element(svg0_nodes, "path", { d: true, fill: true }, 1);
			children(path0).forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t4 = claim_space(div1_nodes);
			if (if_block0) if_block0.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			t5 = claim_space(section_nodes);
			hr0 = claim_element(section_nodes, "HR", {});
			t6 = claim_space(section_nodes);
			div3 = claim_element(section_nodes, "DIV", {});
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			p2 = claim_element(div2_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t7 = claim_text(p2_nodes, t7_value);
			p2_nodes.forEach(detach_dev);
			t8 = claim_space(div2_nodes);

			svg1 = claim_element(
				div2_nodes,
				"svg",
				{
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					xmlns: true
				},
				1
			);

			var svg1_nodes = children(svg1);
			path1 = claim_element(svg1_nodes, "path", { d: true, fill: true }, 1);
			children(path1).forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t9 = claim_space(div3_nodes);
			if (if_block1) if_block1.l(div3_nodes);
			div3_nodes.forEach(detach_dev);
			t10 = claim_space(section_nodes);
			hr1 = claim_element(section_nodes, "HR", {});
			t11 = claim_space(section_nodes);
			div5 = claim_element(section_nodes, "DIV", {});
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			p3 = claim_element(div4_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t12 = claim_text(p3_nodes, t12_value);
			p3_nodes.forEach(detach_dev);
			t13 = claim_space(div4_nodes);

			svg2 = claim_element(
				div4_nodes,
				"svg",
				{
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					xmlns: true
				},
				1
			);

			var svg2_nodes = children(svg2);
			path2 = claim_element(svg2_nodes, "path", { d: true, fill: true }, 1);
			children(path2).forEach(detach_dev);
			svg2_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t14 = claim_space(div5_nodes);
			if (if_block2) if_block2.l(div5_nodes);
			div5_nodes.forEach(detach_dev);
			t15 = claim_space(section_nodes);
			hr2 = claim_element(section_nodes, "HR", {});
			t16 = claim_space(section_nodes);
			div7 = claim_element(section_nodes, "DIV", {});
			var div7_nodes = children(div7);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			p4 = claim_element(div6_nodes, "P", { class: true });
			var p4_nodes = children(p4);
			t17 = claim_text(p4_nodes, t17_value);
			p4_nodes.forEach(detach_dev);
			t18 = claim_space(div6_nodes);

			svg3 = claim_element(
				div6_nodes,
				"svg",
				{
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					xmlns: true
				},
				1
			);

			var svg3_nodes = children(svg3);
			path3 = claim_element(svg3_nodes, "path", { d: true, fill: true }, 1);
			children(path3).forEach(detach_dev);
			svg3_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t19 = claim_space(div7_nodes);
			if (if_block3) if_block3.l(div7_nodes);
			div7_nodes.forEach(detach_dev);
			t20 = claim_space(section_nodes);
			hr3 = claim_element(section_nodes, "HR", {});
			t21 = claim_space(section_nodes);
			div9 = claim_element(section_nodes, "DIV", {});
			var div9_nodes = children(div9);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			p5 = claim_element(div8_nodes, "P", { class: true });
			var p5_nodes = children(p5);
			t22 = claim_text(p5_nodes, t22_value);
			p5_nodes.forEach(detach_dev);
			t23 = claim_space(div8_nodes);

			svg4 = claim_element(
				div8_nodes,
				"svg",
				{
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					xmlns: true
				},
				1
			);

			var svg4_nodes = children(svg4);
			path4 = claim_element(svg4_nodes, "path", { d: true, fill: true }, 1);
			children(path4).forEach(detach_dev);
			svg4_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t24 = claim_space(div9_nodes);
			if (if_block4) if_block4.l(div9_nodes);
			div9_nodes.forEach(detach_dev);
			t25 = claim_space(section_nodes);
			hr4 = claim_element(section_nodes, "HR", {});
			t26 = claim_space(section_nodes);
			div11 = claim_element(section_nodes, "DIV", {});
			var div11_nodes = children(div11);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			p6 = claim_element(div10_nodes, "P", { class: true });
			var p6_nodes = children(p6);
			t27 = claim_text(p6_nodes, t27_value);
			p6_nodes.forEach(detach_dev);
			t28 = claim_space(div10_nodes);

			svg5 = claim_element(
				div10_nodes,
				"svg",
				{
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					xmlns: true
				},
				1
			);

			var svg5_nodes = children(svg5);
			path5 = claim_element(svg5_nodes, "path", { d: true, fill: true }, 1);
			children(path5).forEach(detach_dev);
			svg5_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			t29 = claim_space(div11_nodes);
			if (if_block5) if_block5.l(div11_nodes);
			div11_nodes.forEach(detach_dev);
			t30 = claim_space(section_nodes);
			hr5 = claim_element(section_nodes, "HR", {});
			t31 = claim_space(section_nodes);
			div13 = claim_element(section_nodes, "DIV", {});
			var div13_nodes = children(div13);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			p7 = claim_element(div12_nodes, "P", { class: true });
			var p7_nodes = children(p7);
			t32 = claim_text(p7_nodes, t32_value);
			p7_nodes.forEach(detach_dev);
			t33 = claim_space(div12_nodes);

			svg6 = claim_element(
				div12_nodes,
				"svg",
				{
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					xmlns: true
				},
				1
			);

			var svg6_nodes = children(svg6);
			path6 = claim_element(svg6_nodes, "path", { d: true, fill: true }, 1);
			children(path6).forEach(detach_dev);
			svg6_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			t34 = claim_space(div13_nodes);
			if (if_block6) if_block6.l(div13_nodes);
			div13_nodes.forEach(detach_dev);
			t35 = claim_space(section_nodes);
			hr6 = claim_element(section_nodes, "HR", {});
			t36 = claim_space(section_nodes);
			div15 = claim_element(section_nodes, "DIV", {});
			var div15_nodes = children(div15);
			div14 = claim_element(div15_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			p8 = claim_element(div14_nodes, "P", { class: true });
			var p8_nodes = children(p8);
			t37 = claim_text(p8_nodes, t37_value);
			p8_nodes.forEach(detach_dev);
			t38 = claim_space(div14_nodes);

			svg7 = claim_element(
				div14_nodes,
				"svg",
				{
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					xmlns: true
				},
				1
			);

			var svg7_nodes = children(svg7);
			path7 = claim_element(svg7_nodes, "path", { d: true, fill: true }, 1);
			children(path7).forEach(detach_dev);
			svg7_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			t39 = claim_space(div15_nodes);
			if (if_block7) if_block7.l(div15_nodes);
			div15_nodes.forEach(detach_dev);
			t40 = claim_space(section_nodes);
			button = claim_element(section_nodes, "BUTTON", { id: true, class: true });
			var button_nodes = children(button);
			a = claim_element(button_nodes, "A", { rel: true, href: true, class: true });
			var a_nodes = children(a);
			t41 = claim_text(a_nodes, "Start Challenge");
			a_nodes.forEach(detach_dev);
			button_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p0, "id", "headline");
			attr_dev(p0, "class", "svelte-xsvjge");
			add_location(p0, file, 22, 8, 1400);
			attr_dev(p1, "class", "svelte-xsvjge");
			add_location(p1, file, 25, 16, 1948);
			attr_dev(path0, "d", "M18.885 7L12 13.7989L5.115 7L3 9.09312L12 18L21 9.09312L18.885 7Z");
			attr_dev(path0, "fill", "white");
			add_location(path0, file, 27, 20, 2108);
			attr_dev(svg0, "width", "24");
			attr_dev(svg0, "height", "24");
			attr_dev(svg0, "viewBox", "0 0 24 24");
			attr_dev(svg0, "fill", "none");
			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg0, file, 26, 16, 1992);
			attr_dev(div0, "class", "caret svelte-xsvjge");
			add_location(div0, file, 24, 12, 1845);
			toggle_class(div1, "active", /*current*/ ctx[1] === "webcam");
			add_location(div1, file, 23, 8, 1750);
			add_location(hr0, file, 34, 16, 2504);
			attr_dev(p2, "class", "svelte-xsvjge");
			add_location(p2, file, 38, 12, 2713);
			attr_dev(path1, "d", "M18.885 7L12 13.7989L5.115 7L3 9.09312L12 18L21 9.09312L18.885 7Z");
			attr_dev(path1, "fill", "white");
			add_location(path1, file, 40, 16, 2865);
			attr_dev(svg1, "width", "24");
			attr_dev(svg1, "height", "24");
			attr_dev(svg1, "viewBox", "0 0 24 24");
			attr_dev(svg1, "fill", "none");
			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg1, file, 39, 12, 2753);
			attr_dev(div2, "class", "caret svelte-xsvjge");
			add_location(div2, file, 37, 8, 2614);
			toggle_class(div3, "active", /*current*/ ctx[1] === "https");
			add_location(div3, file, 35, 8, 2517);
			add_location(hr1, file, 47, 8, 3243);
			attr_dev(p3, "class", "svelte-xsvjge");
			add_location(p3, file, 51, 12, 3453);
			attr_dev(path2, "d", "M18.885 7L12 13.7989L5.115 7L3 9.09312L12 18L21 9.09312L18.885 7Z");
			attr_dev(path2, "fill", "white");
			add_location(path2, file, 53, 16, 3605);
			attr_dev(svg2, "width", "24");
			attr_dev(svg2, "height", "24");
			attr_dev(svg2, "viewBox", "0 0 24 24");
			attr_dev(svg2, "fill", "none");
			attr_dev(svg2, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg2, file, 52, 12, 3493);
			attr_dev(div4, "class", "caret svelte-xsvjge");
			add_location(div4, file, 50, 8, 3421);
			toggle_class(div5, "active", /*current*/ ctx[1] === "search");
			add_location(div5, file, 48, 8, 3256);
			add_location(hr2, file, 60, 8, 4033);
			attr_dev(p4, "class", "svelte-xsvjge");
			add_location(p4, file, 64, 12, 4245);
			attr_dev(path3, "d", "M18.885 7L12 13.7989L5.115 7L3 9.09312L12 18L21 9.09312L18.885 7Z");
			attr_dev(path3, "fill", "white");
			add_location(path3, file, 66, 16, 4397);
			attr_dev(svg3, "width", "24");
			attr_dev(svg3, "height", "24");
			attr_dev(svg3, "viewBox", "0 0 24 24");
			attr_dev(svg3, "fill", "none");
			attr_dev(svg3, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg3, file, 65, 12, 4285);
			attr_dev(div6, "class", "caret svelte-xsvjge");
			add_location(div6, file, 63, 8, 4213);
			toggle_class(div7, "active", /*current*/ ctx[1] === "privacy");
			add_location(div7, file, 61, 8, 4046);
			add_location(hr3, file, 73, 8, 4802);
			attr_dev(p5, "class", "svelte-xsvjge");
			add_location(p5, file, 77, 12, 5015);
			attr_dev(path4, "d", "M18.885 7L12 13.7989L5.115 7L3 9.09312L12 18L21 9.09312L18.885 7Z");
			attr_dev(path4, "fill", "white");
			add_location(path4, file, 79, 16, 5167);
			attr_dev(svg4, "width", "24");
			attr_dev(svg4, "height", "24");
			attr_dev(svg4, "viewBox", "0 0 24 24");
			attr_dev(svg4, "fill", "none");
			attr_dev(svg4, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg4, file, 78, 12, 5055);
			attr_dev(div8, "class", "caret svelte-xsvjge");
			add_location(div8, file, 76, 8, 4983);
			toggle_class(div9, "active", /*current*/ ctx[1] === "tracker");
			add_location(div9, file, 74, 8, 4815);
			add_location(hr4, file, 86, 8, 5611);
			attr_dev(p6, "class", "svelte-xsvjge");
			add_location(p6, file, 90, 12, 5815);
			attr_dev(path5, "d", "M18.885 7L12 13.7989L5.115 7L3 9.09312L12 18L21 9.09312L18.885 7Z");
			attr_dev(path5, "fill", "white");
			add_location(path5, file, 92, 16, 5967);
			attr_dev(svg5, "width", "24");
			attr_dev(svg5, "height", "24");
			attr_dev(svg5, "viewBox", "0 0 24 24");
			attr_dev(svg5, "fill", "none");
			attr_dev(svg5, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg5, file, 91, 12, 5855);
			attr_dev(div10, "class", "caret svelte-xsvjge");
			add_location(div10, file, 89, 8, 5783);
			toggle_class(div11, "active", /*current*/ ctx[1] === "dns");
			add_location(div11, file, 87, 8, 5624);
			add_location(hr5, file, 99, 8, 6371);
			attr_dev(p7, "class", "svelte-xsvjge");
			add_location(p7, file, 103, 12, 6585);
			attr_dev(path6, "d", "M18.885 7L12 13.7989L5.115 7L3 9.09312L12 18L21 9.09312L18.885 7Z");
			attr_dev(path6, "fill", "white");
			add_location(path6, file, 105, 16, 6737);
			attr_dev(svg6, "width", "24");
			attr_dev(svg6, "height", "24");
			attr_dev(svg6, "viewBox", "0 0 24 24");
			attr_dev(svg6, "fill", "none");
			attr_dev(svg6, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg6, file, 104, 12, 6625);
			attr_dev(div12, "class", "caret svelte-xsvjge");
			add_location(div12, file, 102, 8, 6553);
			toggle_class(div13, "active", /*current*/ ctx[1] === "location");
			add_location(div13, file, 100, 8, 6384);
			add_location(hr6, file, 112, 8, 7174);
			attr_dev(p8, "class", "svelte-xsvjge");
			add_location(p8, file, 116, 12, 7378);
			attr_dev(path7, "d", "M18.885 7L12 13.7989L5.115 7L3 9.09312L12 18L21 9.09312L18.885 7Z");
			attr_dev(path7, "fill", "white");
			add_location(path7, file, 118, 16, 7530);
			attr_dev(svg7, "width", "24");
			attr_dev(svg7, "height", "24");
			attr_dev(svg7, "viewBox", "0 0 24 24");
			attr_dev(svg7, "fill", "none");
			attr_dev(svg7, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg7, file, 117, 12, 7418);
			attr_dev(div14, "class", "caret svelte-xsvjge");
			add_location(div14, file, 115, 8, 7346);
			toggle_class(div15, "active", /*current*/ ctx[1] === "iot");
			add_location(div15, file, 113, 8, 7187);
			attr_dev(a, "rel", "prefetch");
			attr_dev(a, "href", "quizmain");
			attr_dev(a, "class", "svelte-xsvjge");
			add_location(a, file, 126, 27, 8070);
			attr_dev(button, "id", "start");
			attr_dev(button, "class", "svelte-xsvjge");
			add_location(button, file, 126, 8, 8051);
			attr_dev(section, "class", "svelte-xsvjge");
			add_location(section, file, 21, 4, 1244);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, p0);
			append_dev(p0, t0);
			append_dev(section, t1);
			append_dev(section, div1);
			append_dev(div1, div0);
			append_dev(div0, p1);
			append_dev(p1, t2);
			append_dev(div0, t3);
			append_dev(div0, svg0);
			append_dev(svg0, path0);
			append_dev(div1, t4);
			if (if_block0) if_block0.m(div1, null);
			append_dev(section, t5);
			append_dev(section, hr0);
			append_dev(section, t6);
			append_dev(section, div3);
			append_dev(div3, div2);
			append_dev(div2, p2);
			append_dev(p2, t7);
			append_dev(div2, t8);
			append_dev(div2, svg1);
			append_dev(svg1, path1);
			append_dev(div3, t9);
			if (if_block1) if_block1.m(div3, null);
			append_dev(section, t10);
			append_dev(section, hr1);
			append_dev(section, t11);
			append_dev(section, div5);
			append_dev(div5, div4);
			append_dev(div4, p3);
			append_dev(p3, t12);
			append_dev(div4, t13);
			append_dev(div4, svg2);
			append_dev(svg2, path2);
			append_dev(div5, t14);
			if (if_block2) if_block2.m(div5, null);
			append_dev(section, t15);
			append_dev(section, hr2);
			append_dev(section, t16);
			append_dev(section, div7);
			append_dev(div7, div6);
			append_dev(div6, p4);
			append_dev(p4, t17);
			append_dev(div6, t18);
			append_dev(div6, svg3);
			append_dev(svg3, path3);
			append_dev(div7, t19);
			if (if_block3) if_block3.m(div7, null);
			append_dev(section, t20);
			append_dev(section, hr3);
			append_dev(section, t21);
			append_dev(section, div9);
			append_dev(div9, div8);
			append_dev(div8, p5);
			append_dev(p5, t22);
			append_dev(div8, t23);
			append_dev(div8, svg4);
			append_dev(svg4, path4);
			append_dev(div9, t24);
			if (if_block4) if_block4.m(div9, null);
			append_dev(section, t25);
			append_dev(section, hr4);
			append_dev(section, t26);
			append_dev(section, div11);
			append_dev(div11, div10);
			append_dev(div10, p6);
			append_dev(p6, t27);
			append_dev(div10, t28);
			append_dev(div10, svg5);
			append_dev(svg5, path5);
			append_dev(div11, t29);
			if (if_block5) if_block5.m(div11, null);
			append_dev(section, t30);
			append_dev(section, hr5);
			append_dev(section, t31);
			append_dev(section, div13);
			append_dev(div13, div12);
			append_dev(div12, p7);
			append_dev(p7, t32);
			append_dev(div12, t33);
			append_dev(div12, svg6);
			append_dev(svg6, path6);
			append_dev(div13, t34);
			if (if_block6) if_block6.m(div13, null);
			append_dev(section, t35);
			append_dev(section, hr6);
			append_dev(section, t36);
			append_dev(section, div15);
			append_dev(div15, div14);
			append_dev(div14, p8);
			append_dev(p8, t37);
			append_dev(div14, t38);
			append_dev(div14, svg7);
			append_dev(svg7, path7);
			append_dev(div15, t39);
			if (if_block7) if_block7.m(div15, null);
			append_dev(section, t40);
			append_dev(section, button);
			append_dev(button, a);
			append_dev(a, t41);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(div1, "click", /*click_handler_1*/ ctx[4], false, false, false),
					listen_dev(div3, "click", /*click_handler_2*/ ctx[5], false, false, false),
					listen_dev(div5, "click", /*click_handler_3*/ ctx[6], false, false, false),
					listen_dev(div7, "click", /*click_handler_4*/ ctx[7], false, false, false),
					listen_dev(div9, "click", /*click_handler_5*/ ctx[8], false, false, false),
					listen_dev(div11, "click", /*click_handler_6*/ ctx[9], false, false, false),
					listen_dev(div13, "click", /*click_handler_7*/ ctx[10], false, false, false),
					listen_dev(div15, "click", /*click_handler_8*/ ctx[11], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if ((!current || dirty & /*$quizSteps*/ 4) && t2_value !== (t2_value = /*$quizSteps*/ ctx[2][0].name + "")) set_data_dev(t2, t2_value);

			if (/*current*/ ctx[1] === "webcam") {
				if (if_block0) {
					if (dirty & /*current*/ 2) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_9(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(div1, null);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div1, "active", /*current*/ ctx[1] === "webcam");
			}

			if ((!current || dirty & /*$quizSteps*/ 4) && t7_value !== (t7_value = /*$quizSteps*/ ctx[2][1].name + "")) set_data_dev(t7, t7_value);

			if (/*current*/ ctx[1] === "https") {
				if (if_block1) {
					if (dirty & /*current*/ 2) {
						transition_in(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_8(ctx);
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(div3, null);
				}
			} else if (if_block1) {
				group_outros();

				transition_out(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				check_outros();
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div3, "active", /*current*/ ctx[1] === "https");
			}

			if ((!current || dirty & /*$quizSteps*/ 4) && t12_value !== (t12_value = /*$quizSteps*/ ctx[2][3].name + "")) set_data_dev(t12, t12_value);

			if (/*current*/ ctx[1] === "search") {
				if (if_block2) {
					if (dirty & /*current*/ 2) {
						transition_in(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block_7(ctx);
					if_block2.c();
					transition_in(if_block2, 1);
					if_block2.m(div5, null);
				}
			} else if (if_block2) {
				group_outros();

				transition_out(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				check_outros();
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div5, "active", /*current*/ ctx[1] === "search");
			}

			if ((!current || dirty & /*$quizSteps*/ 4) && t17_value !== (t17_value = /*$quizSteps*/ ctx[2][4].name + "")) set_data_dev(t17, t17_value);

			if (/*current*/ ctx[1] === "privacy") {
				if (if_block3) {
					if (dirty & /*current*/ 2) {
						transition_in(if_block3, 1);
					}
				} else {
					if_block3 = create_if_block_6(ctx);
					if_block3.c();
					transition_in(if_block3, 1);
					if_block3.m(div7, null);
				}
			} else if (if_block3) {
				group_outros();

				transition_out(if_block3, 1, 1, () => {
					if_block3 = null;
				});

				check_outros();
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div7, "active", /*current*/ ctx[1] === "privacy");
			}

			if ((!current || dirty & /*$quizSteps*/ 4) && t22_value !== (t22_value = /*$quizSteps*/ ctx[2][5].name + "")) set_data_dev(t22, t22_value);

			if (/*current*/ ctx[1] === "tracker") {
				if (if_block4) {
					if (dirty & /*current*/ 2) {
						transition_in(if_block4, 1);
					}
				} else {
					if_block4 = create_if_block_5(ctx);
					if_block4.c();
					transition_in(if_block4, 1);
					if_block4.m(div9, null);
				}
			} else if (if_block4) {
				group_outros();

				transition_out(if_block4, 1, 1, () => {
					if_block4 = null;
				});

				check_outros();
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div9, "active", /*current*/ ctx[1] === "tracker");
			}

			if ((!current || dirty & /*$quizSteps*/ 4) && t27_value !== (t27_value = /*$quizSteps*/ ctx[2][6].name + "")) set_data_dev(t27, t27_value);

			if (/*current*/ ctx[1] === "dns") {
				if (if_block5) {
					if (dirty & /*current*/ 2) {
						transition_in(if_block5, 1);
					}
				} else {
					if_block5 = create_if_block_4(ctx);
					if_block5.c();
					transition_in(if_block5, 1);
					if_block5.m(div11, null);
				}
			} else if (if_block5) {
				group_outros();

				transition_out(if_block5, 1, 1, () => {
					if_block5 = null;
				});

				check_outros();
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div11, "active", /*current*/ ctx[1] === "dns");
			}

			if ((!current || dirty & /*$quizSteps*/ 4) && t32_value !== (t32_value = /*$quizSteps*/ ctx[2][8].name + "")) set_data_dev(t32, t32_value);

			if (/*current*/ ctx[1] === "location") {
				if (if_block6) {
					if (dirty & /*current*/ 2) {
						transition_in(if_block6, 1);
					}
				} else {
					if_block6 = create_if_block_3(ctx);
					if_block6.c();
					transition_in(if_block6, 1);
					if_block6.m(div13, null);
				}
			} else if (if_block6) {
				group_outros();

				transition_out(if_block6, 1, 1, () => {
					if_block6 = null;
				});

				check_outros();
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div13, "active", /*current*/ ctx[1] === "location");
			}

			if ((!current || dirty & /*$quizSteps*/ 4) && t37_value !== (t37_value = /*$quizSteps*/ ctx[2][9].name + "")) set_data_dev(t37, t37_value);

			if (/*current*/ ctx[1] === "iot") {
				if (if_block7) {
					if (dirty & /*current*/ 2) {
						transition_in(if_block7, 1);
					}
				} else {
					if_block7 = create_if_block_2(ctx);
					if_block7.c();
					transition_in(if_block7, 1);
					if_block7.m(div15, null);
				}
			} else if (if_block7) {
				group_outros();

				transition_out(if_block7, 1, 1, () => {
					if_block7 = null;
				});

				check_outros();
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div15, "active", /*current*/ ctx[1] === "iot");
			}
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!div0_transition) div0_transition = create_bidirectional_transition(
					div0,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				div0_transition.run(1);
			});

			transition_in(if_block0);

			add_render_callback(() => {
				if (!div2_transition) div2_transition = create_bidirectional_transition(
					div2,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				div2_transition.run(1);
			});

			transition_in(if_block1);
			transition_in(if_block2);

			add_render_callback(() => {
				if (!div5_transition) div5_transition = create_bidirectional_transition(
					div5,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				div5_transition.run(1);
			});

			transition_in(if_block3);

			add_render_callback(() => {
				if (!div7_transition) div7_transition = create_bidirectional_transition(
					div7,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				div7_transition.run(1);
			});

			transition_in(if_block4);

			add_render_callback(() => {
				if (!div9_transition) div9_transition = create_bidirectional_transition(
					div9,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				div9_transition.run(1);
			});

			transition_in(if_block5);

			add_render_callback(() => {
				if (!div11_transition) div11_transition = create_bidirectional_transition(
					div11,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				div11_transition.run(1);
			});

			transition_in(if_block6);

			add_render_callback(() => {
				if (!div13_transition) div13_transition = create_bidirectional_transition(
					div13,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				div13_transition.run(1);
			});

			transition_in(if_block7);

			add_render_callback(() => {
				if (!div15_transition) div15_transition = create_bidirectional_transition(
					div15,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				div15_transition.run(1);
			});

			add_render_callback(() => {
				if (section_outro) section_outro.end(1);

				if (!section_intro) section_intro = create_in_transition(section, fly, {
					delay: 50,
					duration: 500,
					y: 800,
					opacity: 0,
					easing: sineInOut
				});

				section_intro.start();
			});

			current = true;
		},
		o: function outro(local) {
			if (!div0_transition) div0_transition = create_bidirectional_transition(
				div0,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			div0_transition.run(0);
			transition_out(if_block0);

			if (!div2_transition) div2_transition = create_bidirectional_transition(
				div2,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			div2_transition.run(0);
			transition_out(if_block1);
			transition_out(if_block2);

			if (!div5_transition) div5_transition = create_bidirectional_transition(
				div5,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			div5_transition.run(0);
			transition_out(if_block3);

			if (!div7_transition) div7_transition = create_bidirectional_transition(
				div7,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			div7_transition.run(0);
			transition_out(if_block4);

			if (!div9_transition) div9_transition = create_bidirectional_transition(
				div9,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			div9_transition.run(0);
			transition_out(if_block5);

			if (!div11_transition) div11_transition = create_bidirectional_transition(
				div11,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			div11_transition.run(0);
			transition_out(if_block6);

			if (!div13_transition) div13_transition = create_bidirectional_transition(
				div13,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			div13_transition.run(0);
			transition_out(if_block7);

			if (!div15_transition) div15_transition = create_bidirectional_transition(
				div15,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			div15_transition.run(0);
			if (section_intro) section_intro.invalidate();

			section_outro = create_out_transition(section, blur, {
				amount: 15,
				easing: expoOut,
				duration: 1000
			});

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			if (detaching && div0_transition) div0_transition.end();
			if (if_block0) if_block0.d();
			if (detaching && div2_transition) div2_transition.end();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
			if (detaching && div5_transition) div5_transition.end();
			if (if_block3) if_block3.d();
			if (detaching && div7_transition) div7_transition.end();
			if (if_block4) if_block4.d();
			if (detaching && div9_transition) div9_transition.end();
			if (if_block5) if_block5.d();
			if (detaching && div11_transition) div11_transition.end();
			if (if_block6) if_block6.d();
			if (detaching && div13_transition) div13_transition.end();
			if (if_block7) if_block7.d();
			if (detaching && div15_transition) div15_transition.end();
			if (detaching && section_outro) section_outro.end();
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(21:25) ",
		ctx
	});

	return block;
}

// (14:4) {#if part === 0}
function create_if_block(ctx) {
	let section;
	let h1;
	let t0;
	let t1;
	let p0;
	let t2;
	let t3;
	let p1;
	let t4;
	let t5;
	let button;
	let t6;
	let section_intro;
	let section_outro;
	let current;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			section = element("section");
			h1 = element("h1");
			t0 = text("Welcome to the Mind Your Data Challenge");
			t1 = space();
			p0 = element("p");
			t2 = text("This module is designed to educate visitors about the implications of surveillance capitalism, empower them to take control over their own data, and equip them with tools to make change and opt use.");
			t3 = space();
			p1 = element("p");
			t4 = text("Use of this site is at your own risk. If you don't know what something means, or does, skip it.");
			t5 = space();
			button = element("button");
			t6 = text("Start Challenge");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			h1 = claim_element(section_nodes, "H1", { id: true, class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Welcome to the Mind Your Data Challenge");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			p0 = claim_element(section_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, "This module is designed to educate visitors about the implications of surveillance capitalism, empower them to take control over their own data, and equip them with tools to make change and opt use.");
			p0_nodes.forEach(detach_dev);
			t3 = claim_space(section_nodes);
			p1 = claim_element(section_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t4 = claim_text(p1_nodes, "Use of this site is at your own risk. If you don't know what something means, or does, skip it.");
			p1_nodes.forEach(detach_dev);
			t5 = claim_space(section_nodes);
			button = claim_element(section_nodes, "BUTTON", { id: true, class: true });
			var button_nodes = children(button);
			t6 = claim_text(button_nodes, "Start Challenge");
			button_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "id", "welcome");
			attr_dev(h1, "class", "svelte-xsvjge");
			add_location(h1, file, 15, 8, 679);
			attr_dev(p0, "class", "welcome-text svelte-xsvjge");
			add_location(p0, file, 16, 8, 749);
			attr_dev(p1, "class", "welcome-text svelte-xsvjge");
			add_location(p1, file, 17, 8, 985);
			attr_dev(button, "id", "start-challenge");
			attr_dev(button, "class", "svelte-xsvjge");
			add_location(button, file, 18, 8, 1117);
			attr_dev(section, "class", "svelte-xsvjge");
			add_location(section, file, 14, 4, 512);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, h1);
			append_dev(h1, t0);
			append_dev(section, t1);
			append_dev(section, p0);
			append_dev(p0, t2);
			append_dev(section, t3);
			append_dev(section, p1);
			append_dev(p1, t4);
			append_dev(section, t5);
			append_dev(section, button);
			append_dev(button, t6);
			current = true;

			if (!mounted) {
				dispose = listen_dev(button, "click", /*click_handler*/ ctx[3], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (section_outro) section_outro.end(1);

				if (!section_intro) section_intro = create_in_transition(section, fly, {
					delay: 1000,
					duration: 800,
					y: 1000,
					opacity: 0,
					easing: sineInOut
				});

				section_intro.start();
			});

			current = true;
		},
		o: function outro(local) {
			if (section_intro) section_intro.invalidate();

			section_outro = create_out_transition(section, fly, {
				delay: 50,
				duration: 600,
				y: -800,
				easing: sineInOut
			});

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			if (detaching && section_outro) section_outro.end();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(14:4) {#if part === 0}",
		ctx
	});

	return block;
}

// (31:16) {#if current === 'webcam'}
function create_if_block_9(ctx) {
	let p;
	let t;
	let p_transition;
	let current;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Learn why it's important to cover your webcam when not in use...");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Learn why it's important to cover your webcam when not in use...");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-xsvjge");
			add_location(p, file, 31, 16, 2304);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
			current = true;
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!p_transition) p_transition = create_bidirectional_transition(
					p,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				p_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!p_transition) p_transition = create_bidirectional_transition(
				p,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			p_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			if (detaching && p_transition) p_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_9.name,
		type: "if",
		source: "(31:16) {#if current === 'webcam'}",
		ctx
	});

	return block;
}

// (44:12) {#if current === 'https'}
function create_if_block_8(ctx) {
	let p;
	let t;
	let p_transition;
	let current;

	const block = {
		c: function create() {
			p = element("p");
			t = text("See why using a handy browser extension can easily prevent unwanted snooping...");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "See why using a handy browser extension can easily prevent unwanted snooping...");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-xsvjge");
			add_location(p, file, 44, 12, 3048);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
			current = true;
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!p_transition) p_transition = create_bidirectional_transition(
					p,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				p_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!p_transition) p_transition = create_bidirectional_transition(
				p,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			p_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			if (detaching && p_transition) p_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_8.name,
		type: "if",
		source: "(44:12) {#if current === 'https'}",
		ctx
	});

	return block;
}

// (57:12) {#if current === 'search'}
function create_if_block_7(ctx) {
	let p;
	let t;
	let p_transition;
	let current;

	const block = {
		c: function create() {
			p = element("p");
			t = text("All of the urls you visit are converted from text to numbers before being sent across the internet. Who converts this matters...");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "All of the urls you visit are converted from text to numbers before being sent across the internet. Who converts this matters...");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-xsvjge");
			add_location(p, file, 57, 12, 3789);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
			current = true;
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!p_transition) p_transition = create_bidirectional_transition(
					p,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				p_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!p_transition) p_transition = create_bidirectional_transition(
				p,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			p_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			if (detaching && p_transition) p_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_7.name,
		type: "if",
		source: "(57:12) {#if current === 'search'}",
		ctx
	});

	return block;
}

// (70:12) {#if current === 'privacy'}
function create_if_block_6(ctx) {
	let p;
	let t;
	let p_transition;
	let current;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Your search enginee is spying on you and making money off of it. However, some are better than others...");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Your search enginee is spying on you and making money off of it. However, some are better than others...");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-xsvjge");
			add_location(p, file, 70, 12, 4582);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
			current = true;
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!p_transition) p_transition = create_bidirectional_transition(
					p,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				p_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!p_transition) p_transition = create_bidirectional_transition(
				p,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			p_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			if (detaching && p_transition) p_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_6.name,
		type: "if",
		source: "(70:12) {#if current === 'privacy'}",
		ctx
	});

	return block;
}

// (83:12) {#if current === 'tracker'}
function create_if_block_5(ctx) {
	let p;
	let t;
	let p_transition;
	let current;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Much of the surveillance of your internet browsing is done through cookies, by changing some simple setting you can better protect your data...");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Much of the surveillance of your internet browsing is done through cookies, by changing some simple setting you can better protect your data...");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-xsvjge");
			add_location(p, file, 83, 12, 5352);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
			current = true;
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!p_transition) p_transition = create_bidirectional_transition(
					p,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				p_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!p_transition) p_transition = create_bidirectional_transition(
				p,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			p_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			if (detaching && p_transition) p_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_5.name,
		type: "if",
		source: "(83:12) {#if current === 'tracker'}",
		ctx
	});

	return block;
}

// (96:12) {#if current === 'dns'}
function create_if_block_4(ctx) {
	let p;
	let t;
	let p_transition;
	let current;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Go a step further and block all the trackers with a nifty browser add-on, and keep your data to yourself...");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Go a step further and block all the trackers with a nifty browser add-on, and keep your data to yourself...");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-xsvjge");
			add_location(p, file, 96, 12, 6148);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
			current = true;
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!p_transition) p_transition = create_bidirectional_transition(
					p,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				p_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!p_transition) p_transition = create_bidirectional_transition(
				p,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			p_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			if (detaching && p_transition) p_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(96:12) {#if current === 'dns'}",
		ctx
	});

	return block;
}

// (109:12) {#if current === 'location'}
function create_if_block_3(ctx) {
	let p;
	let t;
	let p_transition;
	let current;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Your phone tracks just about everywhere you go, and this data commonly sold. Learn how to disable location for a little more privacy...");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Your phone tracks just about everywhere you go, and this data commonly sold. Learn how to disable location for a little more privacy...");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-xsvjge");
			add_location(p, file, 109, 12, 6923);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
			current = true;
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!p_transition) p_transition = create_bidirectional_transition(
					p,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				p_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!p_transition) p_transition = create_bidirectional_transition(
				p,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			p_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			if (detaching && p_transition) p_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(109:12) {#if current === 'location'}",
		ctx
	});

	return block;
}

// (122:12) {#if current === 'iot'}
function create_if_block_2(ctx) {
	let p;
	let t;
	let p_transition;
	let current;

	const block = {
		c: function create() {
			p = element("p");
			t = text("Smart vacums, intelligents lights, internet connect theromstats, and voice assistants are part of everyday life, but also collect and sell a lot of personal data. Learn how to gain more privacy from these devices...");
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, "Smart vacums, intelligents lights, internet connect theromstats, and voice assistants are part of everyday life, but also collect and sell a lot of personal data. Learn how to gain more privacy from these devices...");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-xsvjge");
			add_location(p, file, 122, 12, 7711);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
			current = true;
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!p_transition) p_transition = create_bidirectional_transition(
					p,
					slide,
					{
						delay: 25,
						duration: 500,
						easing: quintOut
					},
					true
				);

				p_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!p_transition) p_transition = create_bidirectional_transition(
				p,
				slide,
				{
					delay: 25,
					duration: 500,
					easing: quintOut
				},
				false
			);

			p_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			if (detaching && p_transition) p_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(122:12) {#if current === 'iot'}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t;
	let main;
	let current_block_type_index;
	let if_block;
	let main_intro;
	let main_outro;
	let current;
	const if_block_creators = [create_if_block, create_if_block_1];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*part*/ ctx[0] === 0) return 0;
		if (/*part*/ ctx[0] === 1) return 1;
		return -1;
	}

	if (~(current_block_type_index = select_block_type(ctx))) {
		if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
	}

	const block = {
		c: function create() {
			t = space();
			main = element("main");
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1tak1mj\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			if (if_block) if_block.l(main_nodes);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Data privacy quiz";
			attr_dev(main, "class", "svelte-xsvjge");
			add_location(main, file, 12, 0, 348);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			insert_dev(target, main, anchor);

			if (~current_block_type_index) {
				if_blocks[current_block_type_index].m(main, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if (~current_block_type_index) {
					if_blocks[current_block_type_index].p(ctx, dirty);
				}
			} else {
				if (if_block) {
					group_outros();

					transition_out(if_blocks[previous_block_index], 1, 1, () => {
						if_blocks[previous_block_index] = null;
					});

					check_outros();
				}

				if (~current_block_type_index) {
					if_block = if_blocks[current_block_type_index];

					if (!if_block) {
						if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
						if_block.c();
					}

					transition_in(if_block, 1);
					if_block.m(main, null);
				} else {
					if_block = null;
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);

			add_render_callback(() => {
				if (main_outro) main_outro.end(1);

				if (!main_intro) main_intro = create_in_transition(main, fly, {
					delay: 0,
					duration: 1500,
					y: 1000,
					easing: sineInOut
				});

				main_intro.start();
			});

			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			if (main_intro) main_intro.invalidate();

			main_outro = create_out_transition(main, fly, {
				delay: 0,
				duration: 500,
				easing: sineInOut,
				y: -800
			});

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			if (detaching) detach_dev(main);

			if (~current_block_type_index) {
				if_blocks[current_block_type_index].d();
			}

			if (detaching && main_outro) main_outro.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $quizSteps;
	validate_store(quizSteps, "quizSteps");
	component_subscribe($$self, quizSteps, $$value => $$invalidate(2, $quizSteps = $$value));
	let part = 0;
	let current = "initial";
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Quiz> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Quiz", $$slots, []);
	const click_handler = () => $$invalidate(0, part = 1);
	const click_handler_1 = () => $$invalidate(1, current = "webcam");
	const click_handler_2 = () => $$invalidate(1, current = "https");
	const click_handler_3 = () => $$invalidate(1, current = "search");
	const click_handler_4 = () => $$invalidate(1, current = "privacy");
	const click_handler_5 = () => $$invalidate(1, current = "tracker");
	const click_handler_6 = () => $$invalidate(1, current = "dns");
	const click_handler_7 = () => $$invalidate(1, current = "location");
	const click_handler_8 = () => $$invalidate(1, current = "iot");

	$$self.$capture_state = () => ({
		Trans: TransHelp,
		slide,
		blur,
		fade,
		fly,
		quintOut,
		expoOut,
		sineInOut,
		part,
		current,
		quizSteps,
		$quizSteps
	});

	$$self.$inject_state = $$props => {
		if ("part" in $$props) $$invalidate(0, part = $$props.part);
		if ("current" in $$props) $$invalidate(1, current = $$props.current);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		part,
		current,
		$quizSteps,
		click_handler,
		click_handler_1,
		click_handler_2,
		click_handler_3,
		click_handler_4,
		click_handler_5,
		click_handler_6,
		click_handler_7,
		click_handler_8
	];
}

class Quiz extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Quiz",
			options,
			id: create_fragment.name
		});
	}
}

export default Quiz;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
