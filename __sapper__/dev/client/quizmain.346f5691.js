import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, o as createEventDispatcher, p as globals, a as space, e as element, r as create_component, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, g as children, u as claim_component, j as attr_dev, k as add_location, l as insert_dev, w as mount_component, m as append_dev, x as transition_out, y as check_outros, z as transition_in, A as add_render_callback, B as create_bidirectional_transition, C as destroy_component, D as group_outros } from './client.f69dd5fe.js';
import { s as slide, q as quintOut, a as quintIn } from './index.0c0fb0ea.js';
import Q0 from './q0.ac8910b0.js';
import Q1 from './q1.86a3a369.js';
import Q2 from './q2.2576007b.js';
import Q3 from './q3.083f17d2.js';
import Q4 from './q4.f741f3a3.js';
import Q5 from './q5.d7be0e09.js';
import Q6 from './q6.972dc053.js';
import Q7 from './q7.5965bc92.js';
import Q8 from './q8.921de836.js';
import Q9 from './q9.4933a368.js';
import { C as Completion } from './Completion.94c559bf.js';

/* src/routes/quizmain.svelte generated by Svelte v3.23.2 */

const { Object: Object_1, console: console_1 } = globals;
const file = "src/routes/quizmain.svelte";

function create_fragment(ctx) {
	let t0;
	let main;
	let completion;
	let t1;
	let section;
	let switch_instance;
	let main_transition;
	let current;
	completion = new Completion({ props: { class: "step" }, $$inline: true });
	var switch_value = /*quizSteps*/ ctx[0][/*quizNum*/ ctx[1]].component;

	function switch_props(ctx) {
		return { $$inline: true };
	}

	if (switch_value) {
		switch_instance = new switch_value(switch_props());
		switch_instance.$on("message", /*handleMessage*/ ctx[2]);
	}

	const block = {
		c: function create() {
			t0 = space();
			main = element("main");
			create_component(completion.$$.fragment);
			t1 = space();
			section = element("section");
			if (switch_instance) create_component(switch_instance.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-7q3d4x\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			claim_component(completion.$$.fragment, main_nodes);
			t1 = claim_space(main_nodes);
			section = claim_element(main_nodes, "SECTION", { id: true, class: true });
			var section_nodes = children(section);
			if (switch_instance) claim_component(switch_instance.$$.fragment, section_nodes);
			section_nodes.forEach(detach_dev);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Test your knowledge";
			attr_dev(section, "id", "main-content");
			attr_dev(section, "class", "svelte-2y5a9m");
			add_location(section, file, 50, 7, 2114);
			attr_dev(main, "class", "svelte-2y5a9m");
			add_location(main, file, 48, 0, 1999);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, main, anchor);
			mount_component(completion, main, null);
			append_dev(main, t1);
			append_dev(main, section);

			if (switch_instance) {
				mount_component(switch_instance, section, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (switch_value !== (switch_value = /*quizSteps*/ ctx[0][/*quizNum*/ ctx[1]].component)) {
				if (switch_instance) {
					group_outros();
					const old_component = switch_instance;

					transition_out(old_component.$$.fragment, 1, 0, () => {
						destroy_component(old_component, 1);
					});

					check_outros();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props());
					switch_instance.$on("message", /*handleMessage*/ ctx[2]);
					create_component(switch_instance.$$.fragment);
					transition_in(switch_instance.$$.fragment, 1);
					mount_component(switch_instance, section, null);
				} else {
					switch_instance = null;
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(completion.$$.fragment, local);
			if (switch_instance) transition_in(switch_instance.$$.fragment, local);

			add_render_callback(() => {
				if (!main_transition) main_transition = create_bidirectional_transition(
					main,
					slide,
					{
						delay: 100,
						duration: 400,
						easing: quintOut
					},
					true
				);

				main_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			transition_out(completion.$$.fragment, local);
			if (switch_instance) transition_out(switch_instance.$$.fragment, local);

			if (!main_transition) main_transition = create_bidirectional_transition(
				main,
				slide,
				{
					delay: 100,
					duration: 400,
					easing: quintOut
				},
				false
			);

			main_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(main);
			destroy_component(completion);
			if (switch_instance) destroy_component(switch_instance);
			if (detaching && main_transition) main_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const quizSteps = [
		{
			id: "1",
			component: Q0,
			name: "Webcam Challenge",
			complete: false
		},
		{
			id: "8",
			component: Checkpoint1,
			name: "Security vs Privacy",
			complete: false
		},
		{
			id: "2",
			component: Q1,
			name: "Browser Choice",
			complete: false
		},
		{
			id: "4",
			component: Q2,
			name: "Privacy Setting",
			complete: false
		},
		{
			id: "5",
			component: Q3,
			name: "Location Tracking",
			complete: false
		},
		{
			id: "8",
			component: Q5,
			name: "Tracker blocker",
			complete: false
		},
		{
			id: "6",
			component: Q4,
			name: "DNS",
			complete: false
		},
		{
			id: "8",
			component: Checkpoint2,
			name: "Surveillance Capitalism",
			complete: false
		},
		{
			id: "9",
			component: Q6,
			name: "iOT",
			complete: false
		},
		{
			id: "10",
			component: Q7,
			name: "Privacy Settings",
			complete: false
		},
		{
			id: "11",
			component: Q8,
			name: "How to Make change",
			complete: false
		}
	];

	function handleMessage(event) {
		$$invalidate(1, quizNum++, quizNum);

		//quizSteps[Object.values(event.detail[0])].complete = object.values(event.detail[1])
		let status = Object.values(event.detail);

		console.log(status);
		let location = status[0];
		$$invalidate(0, quizSteps[location].complete = status[1], quizSteps);
		console.log(quizSteps[location]);
	}

	const writable_props = [];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Quizmain> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Quizmain", $$slots, []);

	$$self.$capture_state = () => ({
		Quiz1: Q0,
		Quiz2: Q1,
		Quiz3: Q2,
		Quiz4: Q3,
		Quiz5: Q4,
		Quiz6: Q5,
		Quiz7: Q6,
		Quiz8: Q7,
		Quiz9: Q8,
		Quiz10: Q9,
		Completion,
		createEventDispatcher,
		slide,
		quintOut,
		quintIn,
		quizSteps,
		handleMessage,
		quizNum
	});

	$$self.$inject_state = $$props => {
		if ("quizNum" in $$props) $$invalidate(1, quizNum = $$props.quizNum);
	};

	let quizNum;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	 $$invalidate(1, quizNum = 1);
	return [quizSteps, quizNum, handleMessage];
}

class Quizmain extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Quizmain",
			options,
			id: create_fragment.name
		});
	}
}

export default Quizmain;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpem1haW4uMzQ2ZjU2OTEuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvcXVpem1haW4uc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gaW1wb3J0IFF1aXoxIGZyb20gJy4vcXVpei9xMC5zdmVsdGUnXG4gaW1wb3J0IFF1aXoyIGZyb20gJy4vcXVpei9xMS5zdmVsdGUnXG4gaW1wb3J0IFF1aXozIGZyb20gJy4vcXVpei9xMi5zdmVsdGUnXG4gaW1wb3J0IFF1aXo0IGZyb20gJy4vcXVpei9xMy5zdmVsdGUnXG4gaW1wb3J0IFF1aXo1IGZyb20gJy4vcXVpei9xNC5zdmVsdGUnXG4gaW1wb3J0IFF1aXo2IGZyb20gJy4vcXVpei9xNS5zdmVsdGUnXG4gaW1wb3J0IFF1aXo3IGZyb20gJy4vcXVpei9xNi5zdmVsdGUnXG4gaW1wb3J0IFF1aXo4IGZyb20gJy4vcXVpei9xNy5zdmVsdGUnXG4gaW1wb3J0IFF1aXo5IGZyb20gJy4vcXVpei9xOC5zdmVsdGUnXG4gaW1wb3J0IFF1aXoxMCBmcm9tICcuL3F1aXovcTkuc3ZlbHRlJ1xuIGltcG9ydCBDb21wbGV0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvQ29tcGxldGlvbi5zdmVsdGUnXG4gaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcbiAgaW1wb3J0IHsgc2xpZGUgfSBmcm9tICdzdmVsdGUvdHJhbnNpdGlvbic7XG5pbXBvcnQgeyBxdWludE91dCwgcXVpbnRJbiB9IGZyb20gJ3N2ZWx0ZS9lYXNpbmcnO1xuXG5cblxuXG4gY29uc3QgcXVpelN0ZXBzID0gIFtcbiAgICAgICAgeyBpZDonMScsIGNvbXBvbmVudDogUXVpejEsIG5hbWU6ICdXZWJjYW0gQ2hhbGxlbmdlJywgY29tcGxldGU6ZmFsc2V9LFxuICAgICAgICB7IGlkOiAnOCcsIGNvbXBvbmVudDogQ2hlY2twb2ludDEsIG5hbWU6ICdTZWN1cml0eSB2cyBQcml2YWN5JywgY29tcGxldGU6ZmFsc2V9LFxuICAgICAgICB7IGlkOiAnMicsIGNvbXBvbmVudDogUXVpejIsIG5hbWU6ICdCcm93c2VyIENob2ljZScsIGNvbXBsZXRlOmZhbHNlfSxcbiAgICAgICAgeyBpZDogJzQnLCBjb21wb25lbnQ6IFF1aXozLCBuYW1lOiAnUHJpdmFjeSBTZXR0aW5nJywgY29tcGxldGU6ZmFsc2V9LFxuICAgICAgICB7IGlkOiAnNScsIGNvbXBvbmVudDogUXVpejQsIG5hbWU6ICdMb2NhdGlvbiBUcmFja2luZycsIGNvbXBsZXRlOmZhbHNlfSxcblxuICAgICAgICB7IGlkOiAnOCcsIGNvbXBvbmVudDogUXVpejYsIG5hbWU6ICdUcmFja2VyIGJsb2NrZXInLCBjb21wbGV0ZTpmYWxzZX0sXG4gICAgICAgIHsgaWQ6ICc2JywgY29tcG9uZW50OiBRdWl6NSwgbmFtZTogJ0ROUycsIGNvbXBsZXRlOmZhbHNlfSxcbiAgICAgICAgeyBpZDogJzgnLCBjb21wb25lbnQ6IENoZWNrcG9pbnQyLCBuYW1lOiAnU3VydmVpbGxhbmNlIENhcGl0YWxpc20nLCBjb21wbGV0ZTpmYWxzZX0sXG4gICAgICAgIHsgaWQ6ICc5JywgY29tcG9uZW50OiBRdWl6NywgbmFtZTogJ2lPVCcsIGNvbXBsZXRlOmZhbHNlfSxcbiAgICAgICAgeyBpZDogJzEwJywgY29tcG9uZW50OiBRdWl6OCwgbmFtZTogJ1ByaXZhY3kgU2V0dGluZ3MnLCBjb21wbGV0ZTpmYWxzZX0sXG4gICAgICAgIHsgaWQ6ICcxMScsIGNvbXBvbmVudDogUXVpejksIG5hbWU6ICdIb3cgdG8gTWFrZSBjaGFuZ2UnLCBjb21wbGV0ZTpmYWxzZX0sXG5dXG4kOiBxdWl6TnVtID0gMTtcbmZ1bmN0aW9uIGhhbmRsZU1lc3NhZ2UoZXZlbnQpIHtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIHF1aXpOdW0rKztcbiAgICAgICAgICAgICAgLy9xdWl6U3RlcHNbT2JqZWN0LnZhbHVlcyhldmVudC5kZXRhaWxbMF0pXS5jb21wbGV0ZSA9IG9iamVjdC52YWx1ZXMoZXZlbnQuZGV0YWlsWzFdKVxuICAgICAgICAgICAgICBsZXQgc3RhdHVzID0gT2JqZWN0LnZhbHVlcyhldmVudC5kZXRhaWwpO1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzdGF0dXMpO1xuICAgICAgICAgICAgICBsZXQgbG9jYXRpb24gPSBzdGF0dXNbMF07XG4gICAgICAgICAgICAgIHF1aXpTdGVwc1tsb2NhdGlvbl0uY29tcGxldGUgPSBzdGF0dXNbMV07XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKHF1aXpTdGVwc1tsb2NhdGlvbl0pO1xuXHR9XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPlRlc3QgeW91ciBrbm93bGVkZ2U8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxtYWluIHRyYW5zaXRpb246c2xpZGU9XCJ7e2RlbGF5OiAxMDAsIGR1cmF0aW9uOiA0MDAsIGVhc2luZzogcXVpbnRPdXR9fVwiPlxuICAgICAgIDxDb21wbGV0aW9uIGNsYXNzPSdzdGVwJy8+XG4gICAgICAgPHNlY3Rpb24gaWQ9XCJtYWluLWNvbnRlbnRcIj5cbiAgICAgICAgPHN2ZWx0ZTpjb21wb25lbnQgdGhpcz17cXVpelN0ZXBzW3F1aXpOdW1dLmNvbXBvbmVudH0gb246bWVzc2FnZT17aGFuZGxlTWVzc2FnZX0gLz5cbiAgICAgICA8IS0tPFF1aXoyIG9uOm1lc3NhZ2U9e2hhbmRsZU1lc3NhZ2V9Lz4gLS0+XG48IS0tPHNlbGVjdCBiaW5kOnZhbHVlPXtzZWxlY3RlZH0+XG4gICAgICAgIHsjZWFjaCBxdWl6U3RlcHMgYXMgcX1cblx0XHQ8b3B0aW9uIHZhbHVlPXtxfT5RdWVzdGlvbiB7cS5pZH08L29wdGlvbj5cblx0ey9lYWNofVxuPC9zZWxlY3Q+LS0+XG48IS0tPGJ1dHRvbiBvbjpjbGljaz17aGFuZGxlQ2xpY2t9PkNsaWNrIG1lPC9idXR0b24+LS0+XG48IS0tPFByb2dyZXNzIHBhc3Q9e3Bhc3QubmFtZX0gY3VycmVudD17c2VsZWN0ZWQubmFtZX0gbmV4dD17bmV4dC5uYW1lfS8+LS0+XG4gICAgICAgPC9zZWN0aW9uPlxuPC9tYWluPlxuPHN0eWxlPlxuICAgICAgIG1haW4ge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDo1MHB4O1xuICAgICAgICAgICAgICBtYXJnaW4tdG9wOjI1cHg7XG5cbiAgICAgICB9XG4gICAgICAgLnN0ZXB7XG5cdFx0bWFyZ2luLWJvdHRvbTogNTVweDtcbiAgICAgICB9XG4gICAgICAgI21haW4tY29udGVudHtcbiAgICAgICAgICAgICAgbWFyZ2luLXRvcDogLTUwcHg7XG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyMXZ3O1xuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDUwcHg7XG4gICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gICAgICAgfVxuPC9zdHlsZT4iXSwibmFtZXMiOlsiUXVpejEiLCJRdWl6MiIsIlF1aXozIiwiUXVpejQiLCJRdWl6NiIsIlF1aXo1IiwiUXVpejciLCJRdWl6OCIsIlF1aXo5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQ0FtRGdDLEdBQVMsZ0JBQUMsR0FBTyxLQUFFLFNBQVM7Ozs7Ozs7O21EQUFjLEdBQWE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NEQUF2RCxHQUFTLGdCQUFDLEdBQU8sS0FBRSxTQUFTOzs7Ozs7Ozs7Ozs7OztzREFBYyxHQUFhOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BSDdELEtBQUssRUFBRSxHQUFHO01BQUUsUUFBUSxFQUFFLEdBQUc7TUFBRSxNQUFNLEVBQUUsUUFBUTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBQTNDLEtBQUssRUFBRSxHQUFHO0tBQUUsUUFBUSxFQUFFLEdBQUc7S0FBRSxNQUFNLEVBQUUsUUFBUTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0E3QjlELFNBQVM7O0dBQ04sRUFBRSxFQUFDLEdBQUc7R0FBRSxTQUFTLEVBQUVBLEVBQUs7R0FBRSxJQUFJLEVBQUUsa0JBQWtCO0dBQUUsUUFBUSxFQUFDLEtBQUs7OztHQUNsRSxFQUFFLEVBQUUsR0FBRztHQUFFLFNBQVMsRUFBRSxXQUFXO0dBQUUsSUFBSSxFQUFFLHFCQUFxQjtHQUFFLFFBQVEsRUFBQyxLQUFLOzs7R0FDNUUsRUFBRSxFQUFFLEdBQUc7R0FBRSxTQUFTLEVBQUVDLEVBQUs7R0FBRSxJQUFJLEVBQUUsZ0JBQWdCO0dBQUUsUUFBUSxFQUFDLEtBQUs7OztHQUNqRSxFQUFFLEVBQUUsR0FBRztHQUFFLFNBQVMsRUFBRUMsRUFBSztHQUFFLElBQUksRUFBRSxpQkFBaUI7R0FBRSxRQUFRLEVBQUMsS0FBSzs7O0dBQ2xFLEVBQUUsRUFBRSxHQUFHO0dBQUUsU0FBUyxFQUFFQyxFQUFLO0dBQUUsSUFBSSxFQUFFLG1CQUFtQjtHQUFFLFFBQVEsRUFBQyxLQUFLOzs7R0FFcEUsRUFBRSxFQUFFLEdBQUc7R0FBRSxTQUFTLEVBQUVDLEVBQUs7R0FBRSxJQUFJLEVBQUUsaUJBQWlCO0dBQUUsUUFBUSxFQUFDLEtBQUs7OztHQUNsRSxFQUFFLEVBQUUsR0FBRztHQUFFLFNBQVMsRUFBRUMsRUFBSztHQUFFLElBQUksRUFBRSxLQUFLO0dBQUUsUUFBUSxFQUFDLEtBQUs7OztHQUN0RCxFQUFFLEVBQUUsR0FBRztHQUFFLFNBQVMsRUFBRSxXQUFXO0dBQUUsSUFBSSxFQUFFLHlCQUF5QjtHQUFFLFFBQVEsRUFBQyxLQUFLOzs7R0FDaEYsRUFBRSxFQUFFLEdBQUc7R0FBRSxTQUFTLEVBQUVDLEVBQUs7R0FBRSxJQUFJLEVBQUUsS0FBSztHQUFFLFFBQVEsRUFBQyxLQUFLOzs7R0FDdEQsRUFBRSxFQUFFLElBQUk7R0FBRSxTQUFTLEVBQUVDLEVBQUs7R0FBRSxJQUFJLEVBQUUsa0JBQWtCO0dBQUUsUUFBUSxFQUFDLEtBQUs7OztHQUNwRSxFQUFFLEVBQUUsSUFBSTtHQUFFLFNBQVMsRUFBRUMsRUFBSztHQUFFLElBQUksRUFBRSxvQkFBb0I7R0FBRSxRQUFRLEVBQUMsS0FBSzs7OztVQUd2RSxhQUFhLENBQUMsS0FBSztrQkFFZCxPQUFPOzs7TUFFSCxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTTs7RUFDdkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNO01BQ2QsUUFBUSxHQUFHLE1BQU0sQ0FBQyxDQUFDO2tCQUN2QixTQUFTLENBQUMsUUFBUSxFQUFFLFFBQVEsR0FBRyxNQUFNLENBQUMsQ0FBQztFQUN2QyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxRQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tCQVR6QyxPQUFPLEdBQUcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
