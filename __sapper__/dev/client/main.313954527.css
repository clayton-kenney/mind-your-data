main.svelte-19axu57{background-color:white;box-sizing:border-box}
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
body.svelte-p2wxfl{display:flex;flex-flow:column nowrap;align-items:center}img.svelte-p2wxfl{width:800px}
main.svelte-11n97pp{display:flex;flex-flow:row}#main-content.svelte-11n97pp{background:#38424D;border-radius:15px;border:0px;margin:12px 22px 40px 20px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF;width:100%}
main.svelte-jkugtb{display:flex;flex-flow:row;justify-content:center;margin-top:15px}section.svelte-jkugtb{background:#38424D;width:65vw;min-height:75vh;border-radius:15px;border:0px;margin:0px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF;text-align:center}#chapter1.svelte-jkugtb{width:85vw;background-image:url('../bg-vector.png');background-blend-mode:darken}p.svelte-jkugtb{text-align:left}#headline.svelte-jkugtb{font-weight:600;margin-bottom:25px}#chapter.svelte-jkugtb{color:#73ef7b}button.svelte-jkugtb{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px;text-decoration:none}#start.svelte-jkugtb{background-color:#73ef7b}a.svelte-jkugtb{text-decoration:none}.active.svelte-jkugtb{background-color:pink}#permission.svelte-jkugtb{width:70%;margin:auto}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.quiz-holder.svelte-dkh3bo{display:block;width:65vw;left:20vw;height:100vh;padding:20px 50px}.step.svelte-dkh3bo{margin-bottom:55px}#progress.svelte-dkh3bo{margin-top:50px}ul.svelte-dkh3bo{padding-inline-start:15px}li.svelte-dkh3bo{margin:30px 0px}.incomplete.svelte-dkh3bo{color:#a0a0a0;list-style-type:circle}.complete.svelte-dkh3bo{list-style-type:disc}.Side-headline.svelte-dkh3bo{font-size:24px;font-weight:700}#videoElement.svelte-dkh3bo{}.btn-dark.svelte-dkh3bo{color:white;background:#0F2033;border-radius:6px;width:30%;text-align:center;padding:5px 10px}button.svelte-dkh3bo{border:none;padding:5px 10px}
aside.svelte-n0ypaq{display:block;top:50px;left:0;width:27.77vw;height:100vh;padding-left:50px}section.svelte-n0ypaq{padding:10px 10px 20px 10px}
.button-holder.svelte-1l4iai8{width:27vw;display:flex;flex-flow:column nowrap}strong.svelte-1l4iai8{font-weight:700;font-size:22px}
.button-holder.svelte-ebsw60{width:27vw;display:flex;flex-flow:column nowrap}strong.svelte-ebsw60{font-weight:700;font-size:22px}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.button-holder.svelte-1sss75x{width:27vw;display:flex;flex-flow:column nowrap}.video-holder.svelte-1sss75x{width:100%}button.svelte-1sss75x{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}#alert.svelte-1sss75x{color:red;font-weight:700;font-size:24px}#not-covered.svelte-1sss75x{color:red;background:#FFEEEE;border-radius:6px;border:none}
.num.svelte-m0bqhn{padding-right:100px}div.svelte-m0bqhn{color:black}.active.svelte-m0bqhn{display:block}
.button-holder.svelte-1ei4p{width:27vw;display:flex;flex-flow:column nowrap}.video-holder.svelte-1ei4p{width:100%}#alert.svelte-1ei4p{color:red;font-weight:700;font-size:24px}#not-covered.svelte-1ei4p{color:red;background:#FFEEEE;border-radius:6px;border:none}
.button-holder.svelte-18094jg{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-18094jg{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}a.svelte-18094jg{text-decoration:none}
.button-holder.svelte-1lzlbpb{width:27vw;display:flex;flex-flow:column nowrap}
.button-holder.svelte-15owt46{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-15owt46{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}a.svelte-15owt46{text-decoration:none}
.button-holder.svelte-1omauo6{width:27vw;display:flex;flex-flow:column nowrap}#cookie-buttons.svelte-1omauo6{margin:40px 0px 0px 0px}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}
.button-holder.svelte-338bov{width:27vw;display:flex;flex-flow:column nowrap}
section.svelte-1y4us4j{width:100%}.button-holder.svelte-1y4us4j{width:27vw;display:flex;flex-flow:column nowrap}
nav.svelte-1fqlyd7{display:flex;flex-flow:row nowrap;height:50px;justify-content:space-between;align-items:center;background-color:#303538;font-weight:300;padding:0 1em;position:sticky;top:0px;left:0px;z-index:1}ul.svelte-1fqlyd7{display:flex;list-style:none;justify-content:flex-end;margin:0;padding:0;color:#c7c7c7}img.svelte-1fqlyd7{display:flex;justify-content:flex-start;height:30px;margin-left:25px}li.svelte-1fqlyd7{display:flex;margin:0px 20px 0px 20px;text-transform:uppercase}[aria-current].svelte-1fqlyd7{position:relative;display:inline-block}[aria-current].svelte-1fqlyd7::after{position:absolute;content:'';width:calc(100% - 1em);height:2px;background-color:#e74e45;display:block}a.svelte-1fqlyd7{display:flex;padding:1em 0.5em;text-decoration:none;margin:2em, 0em}
aside.svelte-f5a52t{display:flex;flex-direction:column;justify-content:space-between;align-items:center;width:33.75vw;height:86vh;background-color:#38424D;border-radius:15px;border:0px;margin:12px 0px 40px 20px;min-width:33vw;position:sticky;top:50px}#timer.svelte-f5a52t{display:flex;flex-flow:row wrap;margin-block-start:30px;align-items:center;justify-content:center}#minutes.svelte-f5a52t{color:white;background:#0F2033;border-radius:6px;max-width:150px;height:60px;text-align:center;font-size:24px;margin:8px 20px;display:grid;align-content:center;padding:2px 30px}.done.svelte-f5a52t{display:flex;flex-flow:row nowrap;align-items:center;width:95%;margin-bottom:20px
    }progress.svelte-f5a52t{-webkit-appearance:none;border:none;display:block;width:86%;position:relative;bottom:4.7vh;height:6px;z-index:-1;margin-left:31px}progress.svelte-f5a52t::-webkit-progress-bar{background:#303538}progress.bg1.svelte-f5a52t::-webkit-progress-value{background:#74ef7b}progress.bg2.svelte-f5a52t::-webkit-progress-value{background:#F1C330}progress.bg3.svelte-f5a52t::-webkit-progress-value{background:#E94040}.bg1.svelte-f5a52t{background-image:url('../bg-group1.png');background-blend-mode:normal;background-size:cover;background-position:top;color:#74ef7b;font-size:20px}.bg2.svelte-f5a52t{background-image:url('../bg-group2.png');background-blend-mode:normal;background-size:cover;background-position:top;color:#F1C330;font-size:20px}.bg3.svelte-f5a52t{background-image:url('../bg-group3.png');background-blend-mode:normal;background-size:cover;background-position:top;color:#E94040;font-size:20px}#progress-holder.svelte-f5a52t{width:80%}#challenge-name.svelte-f5a52t{font-size:40px;color:white}
button.svelte-17baps{padding:10px 20px;margin:80px 10px 10px 10px;border:black solid 0px;border-radius:8px}
button.svelte-1tjbwri{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
button.svelte-7cbo9q{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.lock.svelte-n4s916{margin:auto}
.review.svelte-1o5adci{width:100%}.complete.svelte-1o5adci{background-color:#38424D}p.svelte-1o5adci{background-color:gray}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}
strong.svelte-1ql3rsv{font-weight:600;font-size:22px}
section.svelte-1y4us4j{width:100%}.button-holder.svelte-1y4us4j{width:27vw;display:flex;flex-flow:column nowrap}
.review.svelte-1cd6hq{width:50vw;background-color:#38424d;display:flex;flex-flow:column;margin:auto;color:#ffffff;padding:65px 100px 65px 65px}.complete.svelte-1cd6hq{background-color:#38424D;color:#ffffff}p.svelte-1cd6hq{background-color:#ffffff;color:#e94040;border-radius:6px;border:none;padding:15px 20px 15px 20px;font-weight:500;margin:5px}button.svelte-1cd6hq{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
h1.svelte-1acdip2.svelte-1acdip2,p.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:0 auto}.hero.svelte-1acdip2.svelte-1acdip2{background-color:#3e4b59;padding-left:80px;padding-top:30vh;width:100%;height:60vh}.hero.svelte-1acdip2 p.svelte-1acdip2{margin:1em auto;color:white}h1.svelte-1acdip2.svelte-1acdip2{font-size:2.8em;text-align:left;text-transform:uppercase;font-weight:700;margin:0 0 0.5em 0;color:white;letter-spacing:25%}h2.svelte-1acdip2.svelte-1acdip2{text-align:left;margin:auto;text-transform:uppercase}h3.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:auto}.bigImg.svelte-1acdip2.svelte-1acdip2{max-width:1400px;background-color:grey}button.svelte-1acdip2.svelte-1acdip2{background:#7AAF54;text-transform:uppercase;padding:10px 20px 10px 20px;font-size:30px;line-height:38px;border:none;border-radius:10px;color:white;box-shadow:0px 4px 4px rgba(0, 0, 0, 0.25)}img.svelte-1acdip2.svelte-1acdip2{width:100%;max-width:400px;margin:0 0 1em 0}.about.svelte-1acdip2.svelte-1acdip2{padding:1.5em}p.svelte-1acdip2.svelte-1acdip2{color:black;text-align:left}ul.svelte-1acdip2.svelte-1acdip2{display:flex;flex-direction:row;list-style:none;margin-block-start:0px;margin-block-end:0px;padding-inline-start:0px}li.svelte-1acdip2.svelte-1acdip2{justify-content:space-around;margin:auto}.why.svelte-1acdip2.svelte-1acdip2{padding-left:80px;margin:1em auto}a.svelte-1acdip2.svelte-1acdip2{text-decoration:none;padding:4px 30px}@media(min-width: 480px){h1.svelte-1acdip2.svelte-1acdip2{font-size:4em}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4zMTM5NTQ1MjcuY3NzIiwic291cmNlcyI6WyIuLi8uLi8uLi9fbGF5b3V0LnN2ZWx0ZSIsIi4uLy4uLy4uL19lcnJvci5zdmVsdGUiLCIuLi8uLi8uLi9pbmRleC5zdmVsdGUiLCIuLi8uLi8uLi9xdWl6bWFpbi5zdmVsdGUiLCIuLi8uLi8uLi9xdWl6LnN2ZWx0ZSIsIi4uLy4uLy4uL2luZGV4LnN2ZWx0ZSIsIi4uLy4uLy4uL3ExYXJjaGl2ZS5zdmVsdGUiLCIuLi8uLi8uLi9Qcm9ncmVzcy5zdmVsdGUiLCIuLi8uLi8uLi9jaGVjazEuc3ZlbHRlIiwiLi4vLi4vLi4vY2hlY2syLnN2ZWx0ZSIsIi4uLy4uLy4uL1tzbHVnXS5zdmVsdGUiLCIuLi8uLi8uLi9jaGVjazMuc3ZlbHRlIiwiLi4vLi4vLi4vcTFkdXAuc3ZlbHRlIiwiLi4vLi4vLi4vcTAuc3ZlbHRlIiwiLi4vLi4vLi4vcTEuc3ZlbHRlIiwiLi4vLi4vLi4vcTIuc3ZlbHRlIiwiLi4vLi4vLi4vcTMuc3ZlbHRlIiwiLi4vLi4vLi4vcTUuc3ZlbHRlIiwiLi4vLi4vLi4vcTQuc3ZlbHRlIiwiLi4vLi4vLi4vcTYuc3ZlbHRlIiwiLi4vLi4vLi4vcTcuc3ZlbHRlIiwiLi4vLi4vLi4vcTguc3ZlbHRlIiwiLi4vLi4vLi4vTmF2LnN2ZWx0ZSIsIi4uLy4uLy4uL0NvbXBsZXRpb24uc3ZlbHRlIiwiLi4vLi4vLi4vQmFjay5zdmVsdGUiLCIuLi8uLi8uLi9jb21wbGV0ZS5zdmVsdGUiLCIuLi8uLi8uLi9CdG4uc3ZlbHRlIiwiLi4vLi4vLi4vQ2hlY2suc3ZlbHRlIiwiLi4vLi4vLi4vcmV2aWV3LnN2ZWx0ZSIsIi4uLy4uLy4uL3E2YS5zdmVsdGUiLCIuLi8uLi8uLi9EZXRlY3Quc3ZlbHRlIiwiLi4vLi4vLi4vcTc4LnN2ZWx0ZSIsIi4uLy4uLy4uL3Jldmlldy5zdmVsdGUiLCIuLi8uLi8uLi9pbmRleF9vbGQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG5cdGltcG9ydCBOYXYgZnJvbSAnLi4vY29tcG9uZW50cy9OYXYuc3ZlbHRlJztcblx0ZXhwb3J0IGxldCBzZWdtZW50O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblx0bWFpbiB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0fVxuPC9zdHlsZT5cblxuPE5hdiB7c2VnbWVudH0vPlxuXG48bWFpbj5cblx0PHNsb3Q+PC9zbG90PlxuPC9tYWluPlxuPCEtLTxQcm9ncmVzcyAvPi0tPiIsIjxzY3JpcHQ+XG5cdGV4cG9ydCBsZXQgc3RhdHVzO1xuXHRleHBvcnQgbGV0IGVycm9yO1xuXG5cdGNvbnN0IGRldiA9IFwiZGV2ZWxvcG1lbnRcIiA9PT0gJ2RldmVsb3BtZW50Jztcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG5cdGgxLCBwIHtcblx0XHRtYXJnaW46IDAgYXV0bztcblx0fVxuXG5cdGgxIHtcblx0XHRmb250LXNpemU6IDIuOGVtO1xuXHRcdGZvbnQtd2VpZ2h0OiA3MDA7XG5cdFx0bWFyZ2luOiAwIDAgMC41ZW0gMDtcblx0fVxuXG5cdHAge1xuXHRcdG1hcmdpbjogMWVtIGF1dG87XG5cdH1cblxuXHRAbWVkaWEgKG1pbi13aWR0aDogNDgwcHgpIHtcblx0XHRoMSB7XG5cdFx0XHRmb250LXNpemU6IDRlbTtcblx0XHR9XG5cdH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPntzdGF0dXN9PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxoMT57c3RhdHVzfTwvaDE+XG5cbjxwPntlcnJvci5tZXNzYWdlfTwvcD5cblxueyNpZiBkZXYgJiYgZXJyb3Iuc3RhY2t9XG5cdDxwcmU+e2Vycm9yLnN0YWNrfTwvcHJlPlxuey9pZn1cbiIsIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgZmFkZSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJztcbiAgICBpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJztcbiAgICBsZXQgdmlzaWJsZSA9IGZhbHNlO1xuICAgIG9uTW91bnQoKCkgPT4gdmlzaWJsZSA9IHRydWUpXG48L3NjcmlwdD5cbjxib2R5PlxuPGRpdj5cbiAgICB7I2lmICF2aXNpYmxlfVxuICAgIDxpbWcgb246Y2xpY2s9XCJ7KCkgPT4gdmlzaWJsZSA9ICF2aXNpYmxlfVwiIHNyYz1cIk1ZRGxvZ29fbGFyZ2Vfbm9wd3IucG5nXCIgYWx0PVwiTWluZCB5b3VyIGRhdGEgbG9nbywgY2xpY2sgdG8gZW50ZXJcIiBvdXQ6ZmFkZT1cInt7ZGVsYXk6IDAsIGR1cmF0aW9uOiAxMDAwMH19XCI+XG57OmVsc2V9XG4gICAgPGltZyBzcmM9XCJNWURsb2dvX2xhcmdlLnBuZ1wiIGFsdD1cIk1pbmQgeW91ciBkYXRhIGxvZ28sIGNsaWNrIHRvIGVudGVyXCIgdHJhbnNpdGlvbjpmYWRlPVwie3tkZWxheTogNTAwMCwgZHVyYXRpb246IDUwMDB9fVwiPlxuICAgIHsvaWZ9XG48L2Rpdj5cbjwvYm9keT5cbjxzdHlsZT5cbiAgICBib2R5IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICBpbWcge1xuICAgICAgICB3aWR0aDogODAwcHg7XG4gICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuIGltcG9ydCBRdWl6MSBmcm9tICcuL3F1aXovcTEuc3ZlbHRlJ1xuIGltcG9ydCBRdWl6MiBmcm9tICcuL3F1aXovcTIuc3ZlbHRlJ1xuIGltcG9ydCBRdWl6MyBmcm9tICcuL3F1aXovcTMuc3ZlbHRlJ1xuIGltcG9ydCBRdWl6NCBmcm9tICcuL3F1aXovcTQuc3ZlbHRlJ1xuIGltcG9ydCBRdWl6NSBmcm9tICcuL3F1aXovcTUuc3ZlbHRlJ1xuIGltcG9ydCBRdWl6NiBmcm9tICcuL3F1aXovcTYuc3ZlbHRlJ1xuIGltcG9ydCBRdWl6NyBmcm9tICcuL3F1aXovcTcuc3ZlbHRlJ1xuIGltcG9ydCBRdWl6OCBmcm9tICcuL3F1aXovcTguc3ZlbHRlJ1xuIGltcG9ydCBRdWl6OSBmcm9tICcuL3F1aXovcTkuc3ZlbHRlJ1xuIGltcG9ydCBDaGVja3BvaW50MSBmcm9tICcuL3F1aXovY2hlY2sxLnN2ZWx0ZSdcbiBpbXBvcnQgQ2hlY2twb2ludDIgZnJvbSAnLi9xdWl6L2NoZWNrMi5zdmVsdGUnXG4gaW1wb3J0IENoZWNrcG9pbnQzIGZyb20gJy4vcXVpei9jaGVjazMuc3ZlbHRlJ1xuIGltcG9ydCBDb21wbGV0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvQ29tcGxldGlvbi5zdmVsdGUnXG4gaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyLCBiZWZvcmVVcGRhdGUsIGFmdGVyVXBkYXRlLCBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJztcbmltcG9ydCB7IHNsaWRlIH0gZnJvbSAnc3ZlbHRlL3RyYW5zaXRpb24nO1xuaW1wb3J0IHsgcXVpbnRPdXQsIHF1aW50SW4gfSBmcm9tICdzdmVsdGUvZWFzaW5nJztcbmltcG9ydCB7IGNvdW50IH0gZnJvbSAnLi4vc3RvcmUuanMnXG4vL2ltcG9ydCBxdWl6U3RlcHMgZnJvbSAnLi4vc3RvcmUuanMnXG5cblxuY29uc3QgcXVpelN0ZXAgPSAgKFtcbiAgICB7Y29tcG9uZW50OiBRdWl6MSwgbmFtZTogJ1dFQkNBTScsIHNob3dTaWRlQmFyOiB0cnVlfSxcbiAgICB7Y29tcG9uZW50OlF1aXoyLCBuYW1lOiAnSFRUUFMnICwgc2hvd1NpZGVCYXI6IHRydWV9LFxuICAgIHtjb21wb25lbnQ6UXVpejYsIG5hbWU6ICdETlMnICwgc2hvd1NpZGVCYXI6IHRydWV9LFxuICAgIHtjb21wb25lbnQ6Q2hlY2twb2ludDEsIG5hbWU6ICdTZWN1cml0eSB2cyBQcml2YWN5Jywgc2hvd1NpZGVCYXI6IGZhbHNlfSxcbiAgICB7Y29tcG9uZW50OlF1aXozLCBuYW1lOiAnU0VBUkNIJyAsIHNob3dTaWRlQmFyOiB0cnVlfSxcbiAgICB7Y29tcG9uZW50OlF1aXo0LCBuYW1lOiAnUFJJVkFDWSBTRVRUSU5HUycgLCBzaG93U2lkZUJhcjogdHJ1ZX0sXG4gICAge2NvbXBvbmVudDpRdWl6NSwgbmFtZTogJ1RSQUNLRVIgQkxPQ0tFUicgLCBzaG93U2lkZUJhcjogdHJ1ZX0sXG4gICAge2NvbXBvbmVudDpDaGVja3BvaW50MiwgbmFtZTogJ1N1cnZlaWxsYW5jZSBDYXBpdGFsaXNtJywgc2hvd1NpZGVCYXI6IGZhbHNlfSxcbiAgICB7Y29tcG9uZW50OlF1aXo3LCBuYW1lOiAnSW50ZXJuZXQgb2YgVGhpbmdzJyAsIHNob3dTaWRlQmFyOiB0cnVlfSxcbiAgICB7Y29tcG9uZW50OlF1aXo4LCBuYW1lOiAnTG9jYXRpb24gVHJhY2tpbmcnICwgc2hvd1NpZGVCYXI6IHRydWV9LFxuICAgIHtjb21wb25lbnQ6Q2hlY2twb2ludDMsIG5hbWU6ICdDaGFuZ2UnICwgc2hvd1NpZGVCYXI6IGZhbHNlfSxcbl0pXG4kOiBzaG93U2lkZUJhciA9IHF1aXpTdGVwWyRjb3VudF0uc2hvd1NpZGVCYXI7XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPlRlc3QgeW91ciBrbm93bGVkZ2U8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxtYWluIHRyYW5zaXRpb246c2xpZGU9XCJ7e2RlbGF5OiAxMDAsIGR1cmF0aW9uOiA0MDAsIGVhc2luZzogcXVpbnRPdXR9fVwiPlxuICAgICAgIHsjaWYgc2hvd1NpZGVCYXJ9XG4gICAgICAgPENvbXBsZXRpb24gY2xhc3M9J3N0ZXAnPlxuICAgICAgICAgICAgICB7cXVpelN0ZXBbJGNvdW50XS5uYW1lfVxuICAgICAgICAgICBcbiAgICAgICA8L0NvbXBsZXRpb24+XG4gICAgICAgey9pZn1cbiAgICAgICA8c2VjdGlvbiBpZD1cIm1haW4tY29udGVudFwiPiBcbiAgICAgICAgPHN2ZWx0ZTpjb21wb25lbnQgdGhpcz17cXVpelN0ZXBbJGNvdW50XS5jb21wb25lbnR9IC8+XG4gICAgICAgPCEtLTxRdWl6MiBvbjptZXNzYWdlPXtoYW5kbGVNZXNzYWdlfS8+IC0tPlxuPCEtLTxzZWxlY3QgYmluZDp2YWx1ZT17c2VsZWN0ZWR9PlxuICAgICAgICB7I2VhY2ggcXVpelN0ZXBzIGFzIHF9XG5cdFx0PG9wdGlvbiB2YWx1ZT17cX0+UXVlc3Rpb24ge3EuaWR9PC9vcHRpb24+XG5cdHsvZWFjaH1cbjwvc2VsZWN0Pi0tPlxuPCEtLTxidXR0b24gb246Y2xpY2s9e2hhbmRsZUNsaWNrfT5DbGljayBtZTwvYnV0dG9uPi0tPlxuPCEtLTxQcm9ncmVzcyBwYXN0PXtwYXN0Lm5hbWV9IGN1cnJlbnQ9e3NlbGVjdGVkLm5hbWV9IG5leHQ9e25leHQubmFtZX0vPi0tPlxuICAgICAgIDwvc2VjdGlvbj5cbjwvbWFpbj5cbjxzdHlsZT5cbiAgICAgICBtYWluIHtcbiAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgZmxleC1mbG93OiByb3c7XG5cbiAgICAgICB9XG4gICAgICAgI21haW4tY29udGVudHtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzM4NDI0RDtcbiAgICAgICAgICAgICAgLypoZWlnaHQ6IDg2dmg7ICovXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gICAgICAgICAgICAgIGJvcmRlcjogMHB4O1xuICAgICAgICAgICAgICBtYXJnaW46IDEycHggMjJweCA0MHB4IDIwcHg7XG4gICAgICAgICAgICAgIHBhZGRpbmc6IDkuM3ZoIDV2dyAwdmggOS4zdmg7XG4gICAgICAgICAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICBcbiAgICAgICAgICAgICAgLyptYXJnaW4tdG9wOiAtNTBweDtcbiAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIxdnc7XG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNTBweDtcbiAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMTVweDsqL1xuICAgICAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cbiAgaW1wb3J0IFRyYW5zIGZyb20gJy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSdcbiAgICBsZXQgcGFydCA9IDA7XG4gIGxldCBjdXJyZW50ID0gJ2luaXRpYWwnO1xuICBpbXBvcnQgeyBxdWl6U3RlcHMgfSBmcm9tICcuLi9zdG9yZS5qcydcbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+RGF0YSBwcml2YWN5IHF1aXo8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxUcmFucz5cbjxtYWluPlxuICAgIHsjaWYgcGFydCA9PT0gMH1cbiAgICA8c2VjdGlvbj5cbiAgICAgICAgPGgxPldlbGNvbWUgdG8gTWluZCBZb3VyIERhdGEgQ2hhbGxlbmdlPC9oMT5cbiAgICAgICAgPHA+XG4gICAgICAgICAgICBPbmx5IGZvciBlZHVjYXRpb25hbCBwdXJwb3NlLCB0aGlzIHRlc3Qgd2lsbCB1dGlsaXplIGJsYWggYmxhaCBibGFoLiBUaGVyZSB3aWxsIGJlIG5vIHBlcnNvbmFsIGRhdGEgY29sbGVjdGVkIG9yIHNoYXJlZC4uLiBUaGlzIHRlc3Qgd2lsbCBvbmx5ICBibGFoIGJsYWggYmxhaCBhbmQgdXRpbGl6ZSBibGFoIGJsYWggYmxhaC4gVGhlcmUgd2lsbCBiZSBubyBkYXRhLi4uIFRoaXMgdGVzdCB3aWxsIG9ubHkgZG8gYmxhaCBibGFoIGJsYWggYW5kIHV0aWxpemUgYmxhaCBibGFoIGJsYWguIFRoZXJlIHdpbGwgYmUgbm8gZGF0YS4uLiBUaGlzIHRlc3Qgd2lsbCBvbmx5IGRvIGJsYWggYmxhaCBibGFoIGFuZCB1dGlsaXplIGJsYWggYmxhaCBibGFoLiBUaGVyZSB3aWxsIGJlIG5vIGRhdGEuLi4gPC9wPlxuICAgICAgICA8YnV0dG9uIG9uOmNsaWNrPSd7KCkgPT4gcGFydCA9IDF9Jz5TdGFydCBDaGFsbGVuZ2U8L2J1dHRvbj5cbiAgICA8L3NlY3Rpb24+XG4gICAgezplbHNlIGlmIHBhcnQgPT09IDF9XG4gICAgPHNlY3Rpb24+XG4gICAgICAgIDxwIGlkPVwiaGVhZGxpbmVcIj5UaGlzIHRlc3QgY29udGFpbnMgMTAgdW5pcXVlIHByaXZhY3kgdGVzdHMgdGhhdCB3aWxsIHRha2UgeW91IGFib3V0IDMwIG1pbnV0ZXMgdG8gY29tcGxldGUuIFRocm91Z2h0IHRoZSB0ZXN0LCB3ZSB3aWxsIHByb3ZpZGUuLi48L3A+XG4gICAgICAgIDxkaXYgY2xhc3M6YWN0aXZlPVwie2N1cnJlbnQgPT09ICd3ZWJjYW0nfVwiIG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAnd2ViY2FtJ31cIj5cbiAgICAgICAgICAgIDxwPnskcXVpelN0ZXBzWzBdLm5hbWV9PC9wPlxuICAgICAgICAgICAgICAgIHsjaWYgY3VycmVudCA9PT0gJ3dlYmNhbSd9XG4gICAgICAgICAgICAgICAgPHA+cTEgY29udGVudDwvcD5cbiAgICAgICAgICAgICAgICB7L2lmfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxocj5cbiAgICAgICAgPGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ2h0dHBzJ31cIlxuICAgICAgICBvbjpjbGljaz1cInsoKSA9PiBjdXJyZW50ID0gJ2h0dHBzJ31cIj5cbiAgICAgICAgICAgIDxwPnskcXVpelN0ZXBzWzFdLm5hbWV9PC9wPlxuICAgICAgICAgICAgeyNpZiBjdXJyZW50ID09PSAnaHR0cHMnfVxuICAgICAgICAgICAgPHA+cTIgY29udGVudDwvcD5cbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8aHI+XG4gICAgICAgIDxkaXYgY2xhc3M6YWN0aXZlPVwie2N1cnJlbnQgPT09ICdzZWFyY2gnfVwiXG4gICAgICAgIG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAnc2VhcmNoJ31cIj5cbiAgICAgICAgICAgIDxwPnskcXVpelN0ZXBzWzNdLm5hbWV9PC9wPlxuICAgICAgICAgICAgeyNpZiBjdXJyZW50ID09PSAnc2VhcmNoJ31cbiAgICAgICAgICAgIDxwPnEzIGNvbnRlbnQ8L3A+XG4gICAgICAgICAgICB7L2lmfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGhyPlxuICAgICAgICA8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAncHJpdmFjeSd9XCJcbiAgICAgICAgb246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICdwcml2YWN5J31cIj5cbiAgICAgICAgICAgIDxwPnskcXVpelN0ZXBzWzRdLm5hbWV9PC9wPlxuICAgICAgICAgICAgeyNpZiBjdXJyZW50ID09PSAncHJpdmFjeSd9XG4gICAgICAgICAgICA8cD5xNCBjb250ZW50PC9wPlxuICAgICAgICAgICAgey9pZn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxocj5cbiAgICAgICAgPGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ3RyYWNrZXInfVwiXG4gICAgICAgIG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAndHJhY2tlcid9XCI+XG4gICAgICAgICAgICA8cD57JHF1aXpTdGVwc1s1XS5uYW1lfTwvcD5cbiAgICAgICAgICAgIHsjaWYgY3VycmVudCA9PT0gJ3RyYWNrZXInfVxuICAgICAgICAgICAgPHA+cTUgY29udGVudDwvcD5cbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8aHI+XG4gICAgICAgIDxkaXYgY2xhc3M6YWN0aXZlPVwie2N1cnJlbnQgPT09ICdkbnMnfVwiXG4gICAgICAgIG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAnZG5zJ31cIj5cbiAgICAgICAgICAgIDxwPnskcXVpelN0ZXBzWzZdLm5hbWV9PC9wPlxuICAgICAgICAgICAgeyNpZiBjdXJyZW50ID09PSAnZG5zJ31cbiAgICAgICAgICAgIDxwPnE2IGNvbnRlbnQ8L3A+XG4gICAgICAgICAgICB7L2lmfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGhyPlxuICAgICAgICA8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAnbG9jYXRpb24nfVwiXG4gICAgICAgIG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAnbG9jYXRpb24nfVwiPlxuICAgICAgICAgICAgPHA+eyRxdWl6U3RlcHNbOF0ubmFtZX08L3A+XG4gICAgICAgICAgICB7I2lmIGN1cnJlbnQgPT09ICdsb2NhdGlvbid9XG4gICAgICAgICAgICA8cD5xNyBjb250ZW50PC9wPlxuICAgICAgICAgICAgey9pZn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxocj5cbiAgICAgICAgPGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ2lvdCd9XCJcbiAgICAgICAgb246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICdpb3QnfVwiPlxuICAgICAgICAgICAgPHA+eyRxdWl6U3RlcHNbOV0ubmFtZX08L3A+XG4gICAgICAgICAgICB7I2lmIGN1cnJlbnQgPT09ICdpb3QnfVxuICAgICAgICAgICAgPHA+cTggY29udGVudDwvcD5cbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgIDwvZGl2PlxuICAgICAgIFxuICAgICAgICA8YnV0dG9uIG9uOmNsaWNrPSd7KCkgPT4gcGFydCA9IDJ9Jz5Db250aW51ZTwvYnV0dG9uPlxuICAgIDwvc2VjdGlvbj5cbiAgICB7OmVsc2V9IFxuICAgIDxzZWN0aW9uIGlkPVwiY2hhcHRlcjFcIj5cbiAgICAgICAgPGgxIGlkPVwiY2hhcHRlclwiPkNoYXB0ZXIgMTogU2VjdXJpdHk8L2gxPlxuICAgICAgICA8cCBpZD1cInBlcm1pc3Npb25cIj5UaHJvdWdoIG91dCB0aGlzIGNoYWxsZW5nZSwgd2UgbmVlZCB5b3VyIHBlcm1pc3Npb24gdG8gZ2l2ZSB1cyBvbmUgdGltZSBub24tcmVjdXJyaW5nIGFjY2VzcyB0byB5b3VyIHdlYmNhbSB0byB0ZXN0IHlvdXIgcHJhY3RpY2UuIFBsZWFzZSBjbGljayBhbGxvdyBmb3Igb25lIHRpbWUgbm9uLXJlY3VycmluZyBhY2Nlc3MgdG8geW91ciB3ZWJjYW1lIHRvIG1vdmUgdG8gdGhlIG5leHQgc3RlcCB0byBjb21wbGV0ZSB0aGlzIGNoYWxsZW5nZS48L3A+XG4gICAgICAgIDxidXR0b24gaWQ9XCJzdGFydFwiPjxhIHJlbD1wcmVmZXRjaCBocmVmPSdxdWl6bWFpbicgPlN0YXJ0IENoYWxsZW5nZTwvYT48L2J1dHRvbj5cbiAgICA8L3NlY3Rpb24+XG4gICAgey9pZn1cbiAgICA8L21haW4+XG48L1RyYW5zPlxuPHN0eWxlPlxuICAgIG1haW4ge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICBmbGV4LWZsb3c6IHJvdztcbiAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDE1cHg7XG4gICAgICAgfVxuICAgICAgIC5zdGVwe1xuXHRcdG1hcmdpbi1ib3R0b206IDU1cHg7XG4gICAgICAgfVxuICAgICAgIHNlY3Rpb257XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMzODQyNEQ7XG4gICAgICAgICAgICAgIHdpZHRoOiA2NXZ3O1xuICAgICAgICAgICAgICBtaW4taGVpZ2h0OiA3NXZoO1xuICAgICAgICAgICAgICAvKmhlaWdodDogODZ2aDsgKi9cbiAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICAgICAgICAgICAgYm9yZGVyOiAwcHg7XG4gICAgICAgICAgICAgIG1hcmdpbjogMHB4O1xuICAgICAgICAgICAgICBwYWRkaW5nOiA5LjN2aCA1dncgMHZoIDkuM3ZoO1xuICAgICAgICAgICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAvKm1hcmdpbi10b3A6IC01MHB4O1xuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMjF2dztcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OyovXG4gICAgICAgfVxuICAgICAgICNjaGFwdGVyMSB7XG4gICAgICAgICAgIHdpZHRoOiA4NXZ3O1xuICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2JnLXZlY3Rvci5wbmcnKTtcbiAgICAgICAgICAgXG4gICAgICAgICAgIGJhY2tncm91bmQtYmxlbmQtbW9kZTogZGFya2VuO1xuICAgICAgIH1cbiAgICAgICBwe1xuICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgIH1cbiAgICAgICAjaGVhZGxpbmUge1xuICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xuICAgICAgIH1cbiAgICAgICAjY2hhcHRlciB7XG4gICAgICAgICAgIGNvbG9yOiAjNzNlZjdiO1xuICAgICAgIH1cbiAgICAgICBidXR0b257XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMjBweDtcblx0XHRtYXJnaW46IDEwcHg7XG5cdFx0Ym9yZGVyOiBibGFjayBzb2xpZCAwcHg7XG5cdFx0Ym9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIH1cbiAgICAgICAgI3N0YXJ0IHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM3M2VmN2I7XG4gICAgICAgIH1cbiAgICAgICAgYXtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgICAgICAgIH1cbiAgICAgICAuYWN0aXZlIHtcbiAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcGluaztcbiAgICAgICB9XG4gICAgICAgI3Blcm1pc3Npb24ge1xuICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0IGNvbnRleHQ9XCJtb2R1bGVcIj5cblx0ZXhwb3J0IGZ1bmN0aW9uIHByZWxvYWQoeyBwYXJhbXMsIHF1ZXJ5IH0pIHtcblx0XHRyZXR1cm4gdGhpcy5mZXRjaChgYmxvZy5qc29uYCkudGhlbihyID0+IHIuanNvbigpKS50aGVuKHBvc3RzID0+IHtcblx0XHRcdHJldHVybiB7IHBvc3RzIH07XG5cdFx0fSk7XG5cdH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuXHRleHBvcnQgbGV0IHBvc3RzO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblx0dWwge1xuXHRcdG1hcmdpbjogMCAwIDFlbSAwO1xuXHRcdGxpbmUtaGVpZ2h0OiAxLjU7XG5cdH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkJsb2c8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPlJlY2VudCBwb3N0czwvaDE+XG5cbjx1bD5cblx0eyNlYWNoIHBvc3RzIGFzIHBvc3R9XG5cdFx0PCEtLSB3ZSdyZSB1c2luZyB0aGUgbm9uLXN0YW5kYXJkIGByZWw9cHJlZmV0Y2hgIGF0dHJpYnV0ZSB0b1xuXHRcdFx0XHR0ZWxsIFNhcHBlciB0byBsb2FkIHRoZSBkYXRhIGZvciB0aGUgcGFnZSBhcyBzb29uIGFzXG5cdFx0XHRcdHRoZSB1c2VyIGhvdmVycyBvdmVyIHRoZSBsaW5rIG9yIHRhcHMgaXQsIGluc3RlYWQgb2Zcblx0XHRcdFx0d2FpdGluZyBmb3IgdGhlICdjbGljaycgZXZlbnQgLS0+XG5cdFx0PGxpPjxhIHJlbD0ncHJlZmV0Y2gnIGhyZWY9J2Jsb2cve3Bvc3Quc2x1Z30nPntwb3N0LnRpdGxlfTwvYT48L2xpPlxuXHR7L2VhY2h9XG48L3VsPiIsIjxzY3JpcHQ+XG5pbXBvcnQgeyBvbk1vdW50LCBhZnRlclVwZGF0ZSB9IGZyb20gJ3N2ZWx0ZSc7XG5pbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuaW1wb3J0IENvbXBsZXRpb24gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Db21wbGV0aW9uLnN2ZWx0ZSdcblxuY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblxuZnVuY3Rpb24gY29tcGxldGUoKSB7XG5cdGRpc3BhdGNoKCdtZXNzYWdlJywge1xuXHRcdHF1ZXN0aW9uOiAwLFxuXHRcdGNvbXBsZXRlOiAndHJ1ZSdcblx0fSk7XG59XG5cdGxldCBxMVN0ZXBzID0gW1xuXHR7IHN0ZXBOdW06ICcxJywgXG5cdGgyOiAnSXMgeW91ciBXZWJjYW0gQ292ZXJlZD8nLCBcblx0bmFtZTogJ0ludHJvZHVjdGlvbicsIFxuXHRjbGFzc246ICdjb21wbGV0ZScsXG5cdGQ6ICcxIC8gMycsXG5cdGNvcHk6ICdJdOKAmXMgbGlrZWx5IHlvdXIgY29tcHV0ZXIgYWxyZWFkeSBoYXMgYSBidWlsdC1pbiBjYW1lcmEsIGFuZCBpdOKAmXMgcG9zc2libGUgZm9yIHRoYXQgY2FtZXJhIHRvIGJlIHVzZWQgdG8gc3B5IG9uIHlvdS4gIDxicj4gIElmIHlvdXIgd2ViY2FtIGZvciB3aGF0ZXZlciByZWFzb24gaGFzIGJlZW4gaGFja2VkLCB0aGUgcGVyc29uIG9uIHRoZSBvdGhlciBzaWRlIGNhbiB0YWtlIHBpY3R1cmVzIGFuZCB2aWRlbyBvZiBhbnl0aGluZyBvciBhbnlvbmUuIE5vLCB0aGlzIGlzbuKAmXQganVzdCBwYXJhbm9pYeKAk2EgcmVjZW50IHN1cnZleSBjb25kdWN0ZWQgYnkgSFAgZm91bmQgdGhhdCAxMCUgaW4gdGhlIFUuUy4gZWl0aGVyIGtub3cgc29tZW9uZSB3aG9zZSB3ZWJjYW0gd2FzIGhhY2tlZCBvciBoYXZlIGhhZCB0aGVpciBvd24gd2ViY2FtIGhhY2tlZC4nfSxcblx0eyBzdGVwTnVtOiAnMicsIFxuXHRoMjogJ0FDVElPTjogQ292ZXIgWW91ciBXZWJjYW0nLCBcblx0bmFtZTogJ1Blcm1pc3Npb25zJywgXG5cdGNsYXNzbjogJ2luY29tcGxldGUnLFxuXHRkOiAnMiAvIDMnLFxuXHRjb3B5OiAnUGxlYXNlIGhhdmUgeW91ciB3ZWJjYW0gY292ZXJlZCBhbmQgcHJvY2VlZCB0byBuZXh0IHN0ZXAuIFdlIHdpbGwgYWNjZXNzIHRvIHlvdXIgd2ViY2FtIHRvIG1ha2Ugc3VyZSB5b3UgY292ZXJlZCB0aGUgd2ViY2FtIHByb3Blcmx5LiBDbGljayDigJxUZXN04oCdIGJ1dHRvbiB0byBwcm9jZWVkIGNoYWxsZW5nZS4nfSxcblx0eyBzdGVwTnVtOiAnMycsIFxuXHRoMjogJ0dyZWF0ISBJdOKAmXMgcHJvcGVybHkgY292ZXJlZC4nLCBcblx0bmFtZTogJ0NvdmVyIHlvdXIgd2ViY2FtJywgXG5cdGNsYXNzbjogJ2luY29tcGxldGUnLFxuXHRkOiAnMyAvIDMnLFxuXHRjb3B5OiAnUGxlYXNlIHJlbWVtYmVyIHRvIGxlYXZlIHlvdXIgd2ViY2FtIGNvdmVyZWQgd2hpbGUgaXRzIG5vdCBiZWluZyB1c2VkLiBUaGlzIGNhbiBwcmV2ZW50Li4uJ30sXG5cdHtzdGVwTnVtOiAnJyxcblx0aDI6ICcnLFxuXHRuYW1lOiAnJyxcblx0Y2xhc3NuOiAnJyxcblx0ZDogJycsXG5cdGNvcHk6ICcnfVxuICAgIF1cblx0XG5cdCQ6IHEgPSAwO1xuXHRsZXQgaXNBY3RpdmU7XG5cdGZ1bmN0aW9uIHN0ZXBVcCgpIHtcblx0XHRxKys7XG5cdFx0cTFTdGVwc1txXS5jbGFzc24gPSAnY29tcGxldGUnO1xuXHRcdGlmIChxID09IDIgKXtcblx0XHRcdGlzQWN0aXZlID0gdHJ1ZTtcblx0XHR9XG5cdFx0aWYgKHEgPiAyKSB7XG5cdFx0XHRjb21wbGV0ZSgpO1xuXHRcdH1cblx0fVxuXHQkOiBoZWFkbGluZSA9IHExU3RlcHNbcV0uaDI7XG5cdCQ6IGJvZHkgPSBxMVN0ZXBzW3FdLmNvcHk7XG5cdCQ6IGZyYWN0aW9uID0gcTFTdGVwc1txXS5kO1xuXHRsZXQgdmlkZW9cblx0YWZ0ZXJVcGRhdGUoKCkgPT4ge1xuXHR2aWRlbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdmlkZW9FbGVtZW50XCIpO1xuXHRcblx0aWYgKG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKSB7XG4gIFx0bmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoeyB2aWRlbzogdHJ1ZSB9KVxuICAgIC50aGVuKGZ1bmN0aW9uIChzdHJlYW0pIHtcblx0XHRcdHZpZGVvLnNyY09iamVjdCA9IHN0cmVhbTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyMHIpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiTm90IGxvYWRlZFwiKTtcbiAgICB9KTtcblx0XHR9XG59KVxuXG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPldlYmNhbSBDaGFsbGVuZ2U8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjwhLS0gQ29tcGxldGlvbiBjbGFzcz0nc3RlcCcvIC0tPlxuPCEtLVxuXHQ8aDM+V2ViY2FtIENoYWxsZW5nZSB7ZnJhY3Rpb259PC9oMz5cblx0PHVsPlxuXHRcdHsjZWFjaCBxMVN0ZXBzIGFzIHN0ZXB9XG5cdFx0XHQ8bGkgY2xhc3M9e3N0ZXAuY2xhc3NufSA+e3N0ZXAubmFtZX08L2xpPlxuXHRcdHsvZWFjaH1cblx0PC91bD5cbjwvUHJvZ3Jlc3M+IC0tPlxuPHNlY3Rpb24gaWQ9XCJwcm9ncmVzc1wiPlxuXHQ8aDM+V2ViY2FtIENoYWxsZW5nZSB7ZnJhY3Rpb259PC9oMz5cblx0PHVsPlxuXHRcdHsjZWFjaCBxMVN0ZXBzIGFzIHN0ZXB9XG5cdFx0XHQ8bGkgY2xhc3M9e3N0ZXAuY2xhc3NufSA+e3N0ZXAubmFtZX08L2xpPlxuXHRcdHsvZWFjaH1cblx0PC91bD5cbjwvc2VjdGlvbj5cbjxkaXYgY2xhc3M9J3F1aXotaG9sZGVyJz5cblx0PGgxPntoZWFkbGluZX08L2gxPlxuXHQ8cD57Ym9keX08L3A+IFxuXHQ8c2VjdGlvbiBpZD0nbmV4dC1za2lwJz4gXG4gICAgICAgIDxidXR0b24gb246Y2xpY2s9e3N0ZXBVcH0gY2xhc3M9J2J0bi1kYXJrJz5OZXh0PC9idXR0b24+XG4gICAgPC9zZWN0aW9uPlxuXHR7I2lmIGlzQWN0aXZlfVxuXHRcdDx2aWRlbyBhdXRvcGxheT1cInRydWVcIiBpZD1cInZpZGVvRWxlbWVudFwiPjwvdmlkZW8+XG5cdHsvaWZ9XG48L2Rpdj5cblx0XG5cdFxuPHN0eWxlPlxuXHRtYWlue1xuXHRcdGZsZXgtZmxvdzogcm93IHdyYXA7XG5cdFx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHR9XG4gICAucXVpei1ob2xkZXIge1xuXHQgICBkaXNwbGF5OiBibG9jaztcblx0ICAgd2lkdGg6IDY1dnc7IC8qIDcyLjUgb3JpZ2luYWx5ICovXG5cdCAgIGxlZnQ6IDIwdnc7XG5cdCAgIGhlaWdodDogMTAwdmg7XG4gICAgICAgcGFkZGluZzogMjBweCA1MHB4O1xuICAgfVxuICAgLnN0ZXB7XG5cdFx0bWFyZ2luLWJvdHRvbTogNTVweDtcbiAgIH1cbiAgICNwcm9ncmVzcyB7XG5cdCAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICB9XG4gICB1bCB7XG5cdCAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAxNXB4O1xuICAgfVxuICAgbGkge1xuXHQgICBtYXJnaW46IDMwcHggMHB4O1xuICAgfVxuICAgLmluY29tcGxldGUge1xuICAgICAgICBjb2xvcjogI2EwYTBhMDtcblx0XHRsaXN0LXN0eWxlLXR5cGU6IGNpcmNsZTtcblx0fVxuXHQuY29tcGxldGUge1xuXHRcdGxpc3Qtc3R5bGUtdHlwZTogZGlzYztcblx0fVxuXHQuU2lkZS1oZWFkbGluZSB7XG5cdFx0Zm9udC1zaXplOiAyNHB4O1xuXHRcdGZvbnQtd2VpZ2h0OiA3MDA7XG5cdH1cblx0I3ZpZGVvRWxlbWVudCB7XG5cdFx0XG5cdH1cblx0LmJ0bi1kYXJrIHtcbiAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgICAgIGJhY2tncm91bmQ6ICMwRjIwMzM7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICB9XG4gICAgYnV0dG9uIHtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICB9XG48L3N0eWxlPlxuXG4iLCI8c2NyaXB0PlxubGV0IGNvbXBsZXRlZDtcblxuPC9zY3JpcHQ+XG48c3R5bGU+XG4gICAgYXNpZGUge1xuICAgICAgIC8qIHBvc2l0aW9uOiBmaXhlZDsgKi9cbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRvcDo1MHB4O1xuICAgICAgICBsZWZ0OjA7XG4gICAgICAgIHdpZHRoOiAyNy43N3Z3O1xuICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICAvKmJhY2tncm91bmQtY29sb3I6ICNlNGU0ZTQ7XG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNjN2M3Yzc7Ki9cbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1MHB4O1xuICAgIH1cbiAgICBzZWN0aW9uIHtcbiAgICAgICAgcGFkZGluZzogMTBweCAxMHB4IDIwcHggMTBweDtcbiAgICB9XG4gICAgI3RpbWVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgXG4gICAgICAgIC8qYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjN2M3Yzc7Ki9cbiAgICB9XG4gICAgI3JlbWFpbmluZyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgcGFkZGluZzogNXB4IDBweCAyMHB4IDBweDtcbiAgICAgICAgXG5cbiAgICB9XG4gICAgI21pbnV0ZXMge1xuICAgICAgICBjb2xvcjp3aGl0ZTtcbiAgICAgICAgYmFja2dyb3VuZDogIzBGMjAzMztcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICB3aWR0aDogOS43dnc7XG4gICAgICAgIGhlaWdodDogNi43dmg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgICBcblxuICAgIH1cbiAgICAuYnRuLWRhcmsge1xuICAgICAgICBjb2xvcjp3aGl0ZTtcbiAgICAgICAgYmFja2dyb3VuZDogIzBGMjAzMztcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICB3aWR0aDogMzAlO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgIH1cbiAgICBidXR0b24ge1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgIH1cbiAgICAjbmV4dC1za2lwIHtcbiAgICAgICAgbWFyZ2luOiA1cHggMTBweDtcbiAgICAgICAgcGFkZGluZzogNXB4IDBweCAyMHB4IDBweDtcbiAgICB9XG4gICAgXG48L3N0eWxlPlxuPGFzaWRlIGlkPSdzaWRlYmFyJz5cbiAgICA8c2VjdGlvbiBpZD1cInByb2dyZXNzXCI+XG4gICAgICAgIDxzbG90PlxuXG4gICAgICAgIDwvc2xvdD5cbiAgICA8L3NlY3Rpb24+XG4gICAgPCEtLVxuICAgIDxzZWN0aW9uIGlkPSduZXh0LXNraXAnPiBcbiAgICAgICAgPGJ1dHRvbiBvbjpjbGljaz17c2F5SGVsbG99IGNsYXNzPSdidG4tZGFyayc+TmV4dDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uICBjbGFzcz0nYnRuLWRhcmsnPlNraXA8L2J1dHRvbj5cbiAgICA8L3NlY3Rpb24+IC0tPlxuPC9hc2lkZT4iLCI8c2NyaXB0PlxuXHRjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXHRpbXBvcnQgeyBvbk1vdW50LCBhZnRlclVwZGF0ZSwgY3JlYXRlRXZlbnREaXNwYXRjaGVyLCBvbkRlc3Ryb3kgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgRGV0ZWN0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvRGV0ZWN0LnN2ZWx0ZSdcbiAgICBpbXBvcnQgVHJhbnMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9UcmFuc0hlbHAuc3ZlbHRlJztcblx0IC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuXHQgaW1wb3J0IHsgcXVpelN0ZXBzIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG5cdCBpbXBvcnQgeyBjb3VudCwgdGltZXJBY3RpdmUgfSBmcm9tICcuLi8uLi9zdG9yZS5qcydcblx0IGltcG9ydCBDb21wbGV0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBsZXRlLnN2ZWx0ZSdcblx0IGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cbiAgICBvbk1vdW50KGFzeW5jKCkgPT4ge1xuXHRcdCRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxO1xuXHRcdHRpbWVyQWN0aXZlLnNldCghJHRpbWVyQWN0aXZlKVxuXHRcdH0pO1xuXHRvbkRlc3Ryb3koKCkgPT4gdGltZXJBY3RpdmUuc2V0KCEkdGltZXJBY3RpdmUpKVxuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5TZWN1cml0eSB2cyBQcml2YWN5OiBXaGF04oCZcyBhdCBzdGFrZT88L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxUcmFucz5cdDxoMz5DaGVja3BvaW50MTwvaDM+XG4gICAgICAgIDxoMT5TZWN1cml0eSB2cyBQcml2YWN5OiBXaGF04oCZcyBhdCBzdGFrZT88L2gxPlxuXHRcdDxwPjxzdHJvbmc+Q29uZ3JhdHVsYXRpb25zITwvc3Ryb25nPiBCeSBjb21wbGV0aW5nIHRoZXNlIHRhc2tzLCB5b3UgaGF2ZSBqdXN0IHRha2VuIGEgZmV3IHN0ZXBzIHRvd2FyZCBzZWN1cmluZyB5b3VyIHBlcnNvbmFsIGluZm9ybWF0aW9uIGZyb20gcG90ZW50aWFsIGN5YmVyY3JpbWUuIEJ1dCB0aGUgdHJ1dGggaXMsIHlvdXIgZGF0YSDigJQgZGlmZmVyZW50IGRldGFpbHMgYWJvdXQgeW91IOKAlCBsaXZlcyBpbiBhIGxvdCBvZiBwbGFjZXMgaW4gb3VyIGluY3JlYXNpbmdseSBjb25uZWN0ZWQgd29ybGQuIDwvcD5cblx0XHQ8cD5Tb21lIHBlb3BsZSB0aGluayBvZiBwcml2YWN5IGFuZCBzZWN1cml0eSBhcyBwcmV0dHkgbXVjaCB0aGUgc2FtZSB0aGluZy4gIFdoaWxlIHRoZSB0d28gc29tZXRpbWVzIG92ZXJsYXAsIHRoZXkgYXJlbuKAmXQgdGhlIHNhbWUsIGFuZCBrbm93aW5nIGhvdyB0aGV5IGRpZmZlciB3aWxsIGhlbHAgZ2l2ZSB5b3UgY29udHJvbCBvdmVyIHlvdXIgcGVyc29uYWwgaW5mb3JtYXRpb24gYW5kIGhvdyBpdOKAmXMgdXNlZC48L3A+XG5cdFx0PHA+PHN0cm9uZz5XaGF04oCZcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHByaXZhY3kgYW5kIHNlY3VyaXR5Pzwvc3Ryb25nPjwvcD5cblx0XHQ8cD5TZWN1cml0eSByZWZlcnMgdG8gaG93IHlvdXIgcGVyc29uYWwgaW5mb3JtYXRpb24gaXMgcHJvdGVjdGVkLiA8L3A+XG5cdFx0PHA+UHJpdmFjeSwgb24gdGhlIG90aGVyIGhhbmQsIHJlbGF0ZXMgeW91ciByaWdodHMgdG8gY29udHJvbCB0aGUgZGF0YSB0aGF04oCZcyBiZWluZyBjb2xsZWN0ZWQgYWJvdXQgeW91LCBob3cgaXTigJlzIGNvbGxlY3RlZCwgd2h5LCBhbmQgd2hvIGl04oCZcyBzaGFyZWQgd2l0aC48L3A+XG5cdFx0IFxuXHRcdDxwPjxzdHJvbmc+V2h5IGRvZXMgcHJpdmFjeSBtYXR0ZXI/PC9zdHJvbmc+PC9wPlxuXHRcdDxwPlRoZSBjb252ZW5pZW5jZSBvZiBsaXZpbmcgaW4gYSBjb25zdGFudGx5IGNvbm5lY3RlZCB3b3JsZCBjb21lcyBhdCBhIGNvc3QuIE91ciBkYWlseSBpbnRlcmFjdGlvbnMgd2l0aCB0ZWNobm9sb2d5IGdlbmVyYXRlcyBhbiB1bmltYWdpbmFibGUgYW1vdW50IG9mIGRhdGEgdGhhdCBpcyBiZWluZyBoYXJ2ZXN0ZWQgYW5kIHNvbGQgdG8gdGhvc2Ugd2hvIHdhbnQgdG8gcHJlZGljdCBhbmQgc2hhcGUgb3VyIGJlaGF2aW9yLiA8L3A+XG5cdFx0XG5cdFx0XG5cdFx0PHA+WW91IG1pZ2h0IHRoaW5rIGl04oCZcyBubyBiaWcgZGVhbCB0byBnaXZlIHVwIHlvdXIgZGF0YSBpbiBleGNoYW5nZSBmb3IgcGVyc29uYWxpemVkIGFkcyBhbmQgY29udGVudCwgYnV0IGNvbnN1bXB0aW9uIC0tIGJyb3dzaW5nIHRocm91Z2ggYSBzdG9yZSBhbmQgYnV5aW5nIHRoaW5ncyAtLSBhbmQgcXVpZXQgdGltZSBhbG9uZSBhcmUgYm90aCBpbXBvcnRhbnQgcGFydHMgb2YgaG93IHdlIGRlZmluZSBvdXJzZWx2ZXMuIElmIHdlIGJsaW5kbHkgYWdyZWUgdG8gbGl2ZSBpbiBhIHN0YXRlIG9mIGNvbnN0YW50IHN1cnZlaWxsYW5jZSwgd2UgbG9zZSB0aGUgYWJpbGl0eSB0byBjaG9vc2UgZm9yIG91cnNlbHZlcyBhbmQgYWxsb3cgb3RoZXJzIHRvIGluZmx1ZW5jZSBvdXIgYmVoYXZpb3JzIGFuZCBzZWxmLXBlcmNlcHRpb24uPC9wPlxuXHRcdFxuXHRcdDxwPk5vdyBpbWFnaW5lIGlmIG91ciBzb2NpZXR5IGFjY2VwdHMgc3VydmVpbGxhbmNlIGFzIHRoZSBuZXcgbm9ybWFsIGFuZCBjaXRpemVucyBrbm93IHRoZXkgYXJlIGJlaW5nIHdhdGNoZWQgY29uc3RhbnRseS4gV2UgbWF5IGhhdmUgaGlnaGx5IHBlcnNvbmFsaXplZCBhY2Nlc3MgdG8gZ29vZHMgYW5kIHNlcnZpY2VzLCBidXQgd2Ugd2lsbCBiZSBsZXNzIGxpa2VseSB0byBzcGVhayBmcmVlbHkgYW5kIGFjdCBpbmRpdmlkdWFsbHkuIFdpdGhvdXQgcHJpdmFjeSBhcyBhIGZ1bmRhbWVudGFsIHJpZ2h0LCB3ZSBsb3NlIHBvd2VyIGFuZCBiZWNvbWUgYW4gb2JlZGllbnQgYW5kIHN1Ym1pc3NpdmUgc29jaWV0eS48L3A+XG5cdFx0XG48ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuICAgIDxDb21wbGV0ZT5Db250aW51ZSB0byBuZXh0IENoYWxsZW5nZTwvQ29tcGxldGU+XG48L2Rpdj5cbjxCYWNrLz5cbjwvVHJhbnM+XG5cbjxzdHlsZT5cbiAgIC5idXR0b24taG9sZGVyIHtcblx0d2lkdGg6IDI3dnc7XG5cdGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgfVxuICAgYnV0dG9uIHtcblx0ICAgcGFkZGluZzogMTBweCAyMHB4O1xuXHQgICBtYXJnaW46IDEwcHg7XG5cdCAgIGJvcmRlcjogYmxhY2sgc29saWQgMHB4O1xuXHQgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICB9XG4gICBzdHJvbmcge1xuXHQgICBmb250LXdlaWdodDogNzAwO1xuXHQgICBmb250LXNpemU6IDIycHg7XG4gICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCB7IG9uTW91bnQsIGFmdGVyVXBkYXRlLCBvbkRlc3Ryb3kgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgRGV0ZWN0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvRGV0ZWN0LnN2ZWx0ZSdcblx0aW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG5cdGltcG9ydCBDb21wbGV0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBsZXRlLnN2ZWx0ZSdcblx0aW1wb3J0IEJhY2sgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CYWNrLnN2ZWx0ZSdcblxuXHQgLy9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG5cdCBpbXBvcnQgeyBxdWl6U3RlcHMsIGNvdW50LCB0aW1lckFjdGl2ZSB9IGZyb20gJy4uLy4uL3N0b3JlLmpzJ1xuXG5cdG9uTW91bnQoYXN5bmMoKSA9PiB7JHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDE7XG5cdFx0dGltZXJBY3RpdmUuc2V0KCEkdGltZXJBY3RpdmUpfSk7XG5cdG9uRGVzdHJveSgoKSA9PiB0aW1lckFjdGl2ZS5zZXQoISR0aW1lckFjdGl2ZSkpXG5cbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+U3VydmVpbGxhbmNlIENhcGl0YWxpc20gSG93IGRpZCB0aGlzIGhhcHBlbj88L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxUcmFucz5cbiAgICA8aDM+Q2hlY2twb2ludCAyOjwvaDM+XG4gICAgICAgIDxoMT5TdXJ2ZWlsbGFuY2UgQ2FwaXRhbGlzbSBIb3cgZGlkIHRoaXMgaGFwcGVuPzwvaDE+XG5cdFx0PHA+PHN0cm9uZz5HcmVhdCE8L3N0cm9uZz5Zb3UgYXJlIG5vdyBvbiB5b3VyIHdheSB0byBjbGFpbWluZyB5b3VyIHByaXZhY3kuPC9wPlxuXHRcdDxwPkJ5IG5vdyB3ZSBob3BlIHlvdSBzZWUgaG93IG91ciBwcml2YXRlIGV4cGVyaWVuY2VzIGFyZSBiZWluZyBoYXJ2ZXN0ZWQgdG8gYmUgdHJhbnNsYXRlZCBpbnRvIGJlaGF2aW9yYWwgZGF0YS4gVGhpcyBkYXRhIGlzIHRoZW4gcHJvY2Vzc2VkIGFuZCBwYWNrYWdlZCBhcyBwcmVkaWN0aW9uIHByb2R1Y3RzIGFuZCBzb2xkIHRvIGJ1c2luZXNzIGN1c3RvbWVycyB3aXRoIGEgY29tbWVyY2lhbCBpbnRlcmVzdCBpbiBrbm93aW5nIHdoYXQgd2Ugd2lsbCBkbyBub3csIHNvb24sIGFuZCBsYXRlci4gVGhpcyBpcyBzdXJ2ZWlsbGFuY2UgY2FwaXRhbGlzbS48L3A+XG5cdFx0PHA+PHN0cm9uZz5Ib3cgZGlkIHRoaXMgaGFwcGVuPzwvc3Ryb25nPjwvcD5cblx0XHQ8cD5JdCB3YXNu4oCZdCB0aGF0IGxvbmcgYWdvIHRoYXQgdGhlIGludGVybmV0IGVudGVyZWQgb3VyIGRhaWx5IGxpdmVzLiBXZSB3ZW50IG9ubGluZSBleHBlY3RpbmcgZW1wb3dlcm1lbnQsIHRoZSBkZW1vY3JhdGl6YXRpb24gb2Yga25vd2xlZGdlLCBhbmQgaGVscCB3aXRoIHJlYWwgcHJvYmxlbXMsIGJ1dCBzdXJ2ZWlsbGFuY2UgY2FwaXRhbGlzbSByZWFsbHkgd2FzIGp1c3QgdG9vIGx1Y3JhdGl2ZSB0byByZXNpc3QuIEdvb2dsZSB3YXMgdGhlIGZpcnN0IHRvIGxlYXJuIGhvdyB0byBjYXB0dXJlIHN1cnBsdXMgYmVoYXZpb3JhbCBkYXRhIGFuZCB1c2UgaXQgdG8gY29tcHV0ZSBwcmVkaWN0aW9uIHByb2R1Y3RzIHRoYXQgdGhleSBjb3VsZCBzZWxsIHRvIGFkdmVydGlzZXJzLlxuXHRcdDwvcD5cblx0XHQ8cD5UaGlzIGVjb25vbWljIGxvZ2ljIGhhcyBub3cgc3ByZWFkIGJleW9uZCB0aGUgdGVjaCBjb21wYW5pZXMgdG8gbmV3IHN1cnZlaWxsYW5jZeKAk2Jhc2VkIGVjb3N5c3RlbXMgaW4gdmlydHVhbGx5IGV2ZXJ5IHNlY3RvciwgZnJvbSBpbnN1cmFuY2UgdG8gYXV0b21vYmlsZXMgdG8gaGVhbHRoLCBlZHVjYXRpb24sIGZpbmFuY2UsIHRvIGV2ZXJ5IHByb2R1Y3QgZGVzY3JpYmVkIGFzIOKAnHNtYXJ04oCdIGFuZCBldmVyeSBzZXJ2aWNlIGRlc2NyaWJlZCBhcyDigJxwZXJzb25hbGl6ZWQu4oCdIEJ5IG5vdyBpdOKAmXMgdmVyeSBkaWZmaWN1bHQgdG8gcGFydGljaXBhdGUgaW4gc29jaWV0eSB3aXRob3V0IGludGVyZmFjaW5nIHdpdGggdGhlc2Ugc2FtZSBjaGFubmVscyB0aGF0IGFyZSBzdXBwbHkgY2hhaW5zIGZvciBzdXJ2ZWlsbGFuY2UgY2FwaXRhbGlzbeKAmXMgZGF0YSBmbG93cy48L3A+XG4gICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8Q29tcGxldGU+U3RhcnQgdGhlIG5leHQgQ2hhbGxlbmdlPC9Db21wbGV0ZT5cblx0PC9kaXY+XG5cdDxCYWNrLz5cbjwvVHJhbnM+XG5cbjxzdHlsZT5cbiAgIC5idXR0b24taG9sZGVyIHtcblx0d2lkdGg6IDI3dnc7XG5cdGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgfVxuICAgc3Ryb25nIHtcblx0ICAgZm9udC13ZWlnaHQ6IDcwMDtcblx0ICAgZm9udC1zaXplOiAyMnB4O1xuICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0IGNvbnRleHQ9XCJtb2R1bGVcIj5cblx0ZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByZWxvYWQoeyBwYXJhbXMsIHF1ZXJ5IH0pIHtcblx0XHQvLyB0aGUgYHNsdWdgIHBhcmFtZXRlciBpcyBhdmFpbGFibGUgYmVjYXVzZVxuXHRcdC8vIHRoaXMgZmlsZSBpcyBjYWxsZWQgW3NsdWddLnN2ZWx0ZVxuXHRcdGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuZmV0Y2goYGJsb2cvJHtwYXJhbXMuc2x1Z30uanNvbmApO1xuXHRcdGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG5cdFx0aWYgKHJlcy5zdGF0dXMgPT09IDIwMCkge1xuXHRcdFx0cmV0dXJuIHsgcG9zdDogZGF0YSB9O1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLmVycm9yKHJlcy5zdGF0dXMsIGRhdGEubWVzc2FnZSk7XG5cdFx0fVxuXHR9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cblx0ZXhwb3J0IGxldCBwb3N0O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblx0Lypcblx0XHRCeSBkZWZhdWx0LCBDU1MgaXMgbG9jYWxseSBzY29wZWQgdG8gdGhlIGNvbXBvbmVudCxcblx0XHRhbmQgYW55IHVudXNlZCBzdHlsZXMgYXJlIGRlYWQtY29kZS1lbGltaW5hdGVkLlxuXHRcdEluIHRoaXMgcGFnZSwgU3ZlbHRlIGNhbid0IGtub3cgd2hpY2ggZWxlbWVudHMgYXJlXG5cdFx0Z29pbmcgdG8gYXBwZWFyIGluc2lkZSB0aGUge3t7cG9zdC5odG1sfX19IGJsb2NrLFxuXHRcdHNvIHdlIGhhdmUgdG8gdXNlIHRoZSA6Z2xvYmFsKC4uLikgbW9kaWZpZXIgdG8gdGFyZ2V0XG5cdFx0YWxsIGVsZW1lbnRzIGluc2lkZSAuY29udGVudFxuXHQqL1xuXHQuY29udGVudCA6Z2xvYmFsKGgyKSB7XG5cdFx0Zm9udC1zaXplOiAxLjRlbTtcblx0XHRmb250LXdlaWdodDogNTAwO1xuXHR9XG5cblx0LmNvbnRlbnQgOmdsb2JhbChwcmUpIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xuXHRcdGJveC1zaGFkb3c6IGluc2V0IDFweCAxcHggNXB4IHJnYmEoMCwwLDAsMC4wNSk7XG5cdFx0cGFkZGluZzogMC41ZW07XG5cdFx0Ym9yZGVyLXJhZGl1czogMnB4O1xuXHRcdG92ZXJmbG93LXg6IGF1dG87XG5cdH1cblxuXHQuY29udGVudCA6Z2xvYmFsKHByZSkgOmdsb2JhbChjb2RlKSB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuXG5cdC5jb250ZW50IDpnbG9iYWwodWwpIHtcblx0XHRsaW5lLWhlaWdodDogMS41O1xuXHR9XG5cblx0LmNvbnRlbnQgOmdsb2JhbChsaSkge1xuXHRcdG1hcmdpbjogMCAwIDAuNWVtIDA7XG5cdH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPntwb3N0LnRpdGxlfTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48aDE+e3Bvc3QudGl0bGV9PC9oMT5cblxuPGRpdiBjbGFzcz0nY29udGVudCc+XG5cdHtAaHRtbCBwb3N0Lmh0bWx9XG48L2Rpdj5cbiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCB7IG9uTW91bnQsIGFmdGVyVXBkYXRlLCBvbkRlc3Ryb3kgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgRGV0ZWN0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvRGV0ZWN0LnN2ZWx0ZSdcblx0aW1wb3J0IENvbXBsZXRlIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY29tcGxldGUuc3ZlbHRlJ1xuXG4gICAgaW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG4gLy9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG4gaW1wb3J0IHsgY291bnQsIHF1aXpTdGVwcywgdGltZXJBY3RpdmUgfSBmcm9tICcuLi8uLi9zdG9yZS5qcydcbiBpbXBvcnQgQmFjayBmcm9tICcuLi8uLi9jb21wb25lbnRzL0JhY2suc3ZlbHRlJ1xuXHRvbk1vdW50KGFzeW5jKCkgPT4ge1xuXHRcdCRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxO1xuXHRcdHRpbWVyQWN0aXZlLnNldCghJHRpbWVyQWN0aXZlKTtcblx0fSk7XG5cdG9uRGVzdHJveSgoKSA9PiB0aW1lckFjdGl2ZS5zZXQoISR0aW1lckFjdGl2ZSkpXG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkhvdyAgdG8gbWFrZSBjaGFuZ2U/PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48VHJhbnM+XG4gICAgPGgxPldlIG11c3QgY2xhaW0gb3VyIHJpZ2h0IHRvIHByaXZhY3kuPC9oMT5cbiAgICAgICAgPHA+QWdpdGF0ZSBmb3IgY2hhbmdlLiBMaWtlIG1vc3QgcmlnaHRzLCBwcml2YWN5IGRyYXdzIG5vdGljZSBvbmx5IGFmdGVyIGl04oCZcyBnb25lLiBBdCB0aGF0IHBvaW50LCBpdOKAmXMgaGFyZGVyIHRvIHJlZ2Fpbi4gSnVzdCBhcyB3ZSBzZWUgdGhlIGVudmlyb25tZW50YWwgaW1wYWN0IG9mIHRoZSBlYXJseSBJbmR1c3RyaWFsIEFnZSwgZnV0dXJlIGdlbmVyYXRpb25zIHdpbGwganVkZ2UgdG9kYXnigJlzIHNvY2lldHkgb24gaG93IHdlbGwgaXQgcm9zZSB0byB0aGUgY2hhbGxlbmdlcyBvZiBzdXJ2ZWlsbGFuY2UgYW5kIG1hc3NpdmUgaW5mb3JtYXRpb24gY29sbGVjdGlvbi4gUHVzaCBmb3IgcmVmb3JtLjwvcD5cbiAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxhIHJlbD1wcmVmZXRjaCBocmVmPVwicmV2aWV3XCI+PGJ1dHRvbj5TZWUgeW91ciByZXN1bHRzPC9idXR0b24+PC9hPlxuICAgICAgICA8YnV0dG9uID5TaWduIGEgUGV0aXRpb248L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiA+Q29udGFjdCB5b3VyIFJlcDwvYnV0dG9uPlxuXHQ8L2Rpdj5cbjxCYWNrLz5cbjwvVHJhbnM+XG5cbjxzdHlsZT5cbiAgIC5idXR0b24taG9sZGVyIHtcblx0d2lkdGg6IDI3dnc7XG5cdGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgfVxuICAgYnV0dG9uIHtcblx0ICAgcGFkZGluZzogMTBweCAyMHB4O1xuXHQgICBtYXJnaW46IDEwcHg7XG5cdCAgIGJvcmRlcjogYmxhY2sgc29saWQgMHB4O1xuXHQgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgb25Nb3VudCwgYmVmb3JlVXBkYXRlLCBhZnRlclVwZGF0ZSwgb25EZXN0cm95IH0gZnJvbSAnc3ZlbHRlJztcbiAgICBpbXBvcnQgVHJhbnMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9UcmFuc0hlbHAuc3ZlbHRlJztcbiAgICBpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnXG4gICAgaW1wb3J0IEJhY2sgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CYWNrLnN2ZWx0ZSdcbiAgICBpbXBvcnQgeyBjb3VudCB9IGZyb20gJy4uLy4uL3N0b3JlLmpzJ1xuICAgIGltcG9ydCB7IHF1aXpTdGVwcyB9IGZyb20gJy4uLy4uL3N0b3JlLmpzJ1xuXHRcbiAgICBsZXQgcSA9IDA7XG4gICAgbGV0IGlzQWN0aXZlO1xuXHRmdW5jdGlvbiBhZHZhbmNlKCkge1xuXHRcdHErKztcbiAgICAgICAgY29uc29sZS5sb2cocSk7XG4gICAgICAgIGlmIChxPTIpIHtcbiAgICAgICAgICAgIGlzQWN0aXZlPSB0cnVlO1xuICAgICAgICB9XG5cdH1cblx0ZnVuY3Rpb24gYWR2YW5jZVR3bygpIHtcblx0XHRxKz0yO1xuXHRcdGNvbnNvbGUubG9nKHEpO1xuICAgIH1cbiAgICAvL3NldHMgYXNpZGUgaWNvbiB0byBpbiBwcm9ncmVzcyB2aWEgc3RvcmVcbiAgICBvbk1vdW50KGFzeW5jKCkgPT4geyRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxfSk7XG4gICAgLy9TdGFydCBWaWRlbyBvbiB1cGRhdGVcbiAgICBsZXQgdmlkZW87XG5cdGFmdGVyVXBkYXRlKGFzeW5jKCkgPT4ge1xuXHR2aWRlbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdmlkZW9FbGVtZW50XCIpO1xuXHRpZiAobmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpIHtcbiAgXHRuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7IHZpZGVvOiB0cnVlIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24gKHN0cmVhbSkge1xuXHRcdFx0dmlkZW8uc3JjT2JqZWN0ID0gc3RyZWFtO1xuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIwcikge1xuICAgICAgY29uc29sZS5sb2coXCJOb3QgbG9hZGVkXCIpO1xuICAgIH0pO1xuXHRcdH1cbn0pXG4vL3N0b3AgdmlkZW8gZnVuY3Rpb24gb24gZW5kIG9mIGNvbXBvbmVudCAgIFxuICAgIGFmdGVyVXBkYXRlKGFzeW5jKCkgPT4geyBcbiAgICAgICAgZnVuY3Rpb24gc3RvcFN0cmVhbWVkVmlkZW8odmlkZW8pIHsgXG4gICAgICAgICAgICBjb25zdCBzdHJlYW0gPSB2aWRlby5zcmNPYmplY3Q7XG4gICAgICAgICAgICBjb25zdCB0cmFja3MgPSBzdHJlYW0uZ2V0VHJhY2tzKCk7XG4gICAgICAgICAgICAgICAgdHJhY2tzWzBdLnN0b3AoKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmlkZW8uc3JjT2JqZWN0ID0gbnVsbDtcbiAgICAgICAgICAgIH0pO1xuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5XZWJjYW0gQ2hhbGxlbmdlPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48VHJhbnM+XG5cbnsjaWYgcT09MH1cbjxzZWN0aW9uPlxuXHQ8aDI+SXMgeW91ciBXZWJjYW0gQ292ZXJlZD88L2gyPiBcblx0PHA+SXTigJlzIGxpa2VseSB5b3VyIGNvbXB1dGVyIGFscmVhZHkgaGFzIGEgYnVpbHQtaW4gY2FtZXJhLCBhbmQgaXTigJlzIHBvc3NpYmxlIGZvciB0aGF0IGNhbWVyYSB0byBiZSB1c2VkIHRvIHNweSBvbiB5b3UuICA8YnI+ICBJZiB5b3VyIHdlYmNhbSBmb3Igd2hhdGV2ZXIgcmVhc29uIGhhcyBiZWVuIGhhY2tlZCwgdGhlIHBlcnNvbiBvbiB0aGUgb3RoZXIgc2lkZSBjYW4gdGFrZSBwaWN0dXJlcyBhbmQgdmlkZW8gb2YgYW55dGhpbmcgb3IgYW55b25lLiBObywgdGhpcyBpc27igJl0IGp1c3QgcGFyYW5vaWHigJNhIHJlY2VudCBzdXJ2ZXkgY29uZHVjdGVkIGJ5IEhQIGZvdW5kIHRoYXQgMTAlIGluIHRoZSBVLlMuIGVpdGhlciBrbm93IHNvbWVvbmUgd2hvc2Ugd2ViY2FtIHdhcyBoYWNrZWQgb3IgaGF2ZSBoYWQgdGhlaXIgb3duIHdlYmNhbSBoYWNrZWQuPC9wPlxuXHQ8YnV0dG9uIG9uOmNsaWNrPXthZHZhbmNlfT5Db250aW51ZTwvYnV0dG9uPlxuPC9zZWN0aW9uPlxuezplbHNlIGlmIHE9PTF9XG48c2VjdGlvbj5cblx0PGgyPkNvdmVyIFlvdXIgV2ViY2FtPC9oMj5cblx0PHA+Q292ZXIgeW91ciB3ZWJjYW0uIFlvdSBjYW4gZ2V0IGZhbmN5IHJlbW92YWJsZSBzdGlja2VycyBmb3IgdGhpcyBwdXJwb3NlLCBidXQgZm9yIG5vdywgZmluZCBhIHN0aWNreSBub3RlIG9yIHBpZWNlIG9mIG1hc2tpbmcgdGFwZSBhbmQgY292ZXIgeW91ciB3ZWJjYW0gd2hlbiBpdOKAmXMgbm90IGluIHVzZSAobGlrZSByaWdodCBub3cpLiA8L3A+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG4gICAgICAgIDxidXR0b24gb246Y2xpY2s9e2FkdmFuY2V9Pkl0J3MgY292ZXJlZDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uIG9uOmNsaWNrPXthZHZhbmNlVHdvfT5ObyBUaGFua3MsIEl0J3MgYSBoYXNzbGU8L2J1dHRvbj5cblx0PC9kaXY+XG48L3NlY3Rpb24+XG57OmVsc2UgaWYgcT09Mn1cbiAgIDxkaXYgY2xhc3M9XCJ2aWRlby1ob2xkZXJcIj48dmlkZW8gYXV0b3BsYXk9XCJ0cnVlXCIgaWQ9XCJ2aWRlb0VsZW1lbnRcIj48L3ZpZGVvPjwvZGl2PlxuICAgIDxwIGlkPVwiYWxlcnRcIj5Db3ZlciB5b3VyIHdlYmNhbTwvcD5cbiAgICA8cCBpZD1cIm5vdC1jb3ZlcmVkXCI+WW91IGhhdmVu4oCZdCBjb3ZlcmVkIHlvdXIgd2ViY2FtZSBvciBkaWQgbm90IGRvIGl0IHByb3Blcmx5LiBQbGVhc2UgY292ZXIgeW91ciB3ZWJjYW0gY29tcGxldGVseSB0byBwcm9jZWVkIHRvIHRoZSBuZXh0IHN0ZXAuPC9wPlxuICAgIDwhLS08YnV0dG9uIG9uOmNsaWNrPXtpbmNvbXBsZXRlfT5PbndhcmRzIHRvIHRoZSBuZXh0IGNoYWxsZW5nZTwvYnV0dG9uPiAtLT5cbiAgICA8Q29tcGxldGU+XG4gICAgICAgIE9ud2FyZHMgdG8gdGhlIG5leHQgY2hhbGxlbmdlXG4gICAgPC9Db21wbGV0ZT5cbns6ZWxzZX1cbiAgICA8dmlkZW8gYXV0b3BsYXk9XCJ0cnVlXCIgaWQ9XCJ2aWRlb0VsZW1lbnRcIj48L3ZpZGVvPlxuey9pZn1cbjxCYWNrLz5cbjwvVHJhbnM+XG48c3R5bGU+XG4gICAuYnV0dG9uLWhvbGRlciB7XG5cdHdpZHRoOiAyN3Z3O1xuXHRkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgIH1cbiAgIC52aWRlby1ob2xkZXJ7XG4gICAgICAgd2lkdGg6IDEwMCU7XG4gICB9XG4gICBidXR0b24ge1xuXHQgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdCAgIG1hcmdpbjogMTBweDtcblx0ICAgYm9yZGVyOiBibGFjayBzb2xpZCAwcHg7XG5cdCAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgIH1cbiAgICNhbGVydCB7XG4gICAgICAgY29sb3I6IHJlZDtcbiAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICB9XG4gICAjbm90LWNvdmVyZWQge1xuICAgICAgIGNvbG9yOiByZWQ7XG4gICAgICAgYmFja2dyb3VuZDogI0ZGRUVFRTtcbiAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgICAgYm9yZGVyOiBub25lO1xuICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuIGltcG9ydCB7IHNsaWRlIH0gZnJvbSAnc3ZlbHRlL3RyYW5zaXRpb24nO1xuaW1wb3J0IHsgcXVpbnRPdXQsIHF1aW50SW4gfSBmcm9tICdzdmVsdGUvZWFzaW5nJztcbiAgICAgY29uc3QgcXVpelN0ZXBzID0gIFtcbiAgICAgICAgeyBpZDogJ3ExJywgbmFtZTogJ1dlYmNhbSBDaGFsbGVuZ2UnLCB0aW1lOiAnMm1pbnMnLCBkZXNjcmlwdGlvbjpcIklmIHlvdXIgY29tcHV0ZXIgaGFzIGEgYnVpbHQtaW4gY2FtZXJhLCBhbHNvIGtub3duIGFzIGEgd2ViY2FtLCB5b3Ugc2hvdWxkIGtub3cgdGhhdCBpdCBjYW4gYmUgdXNlZCB0byBzcHkgb24geW91LiBBbmQgbm8sIHRoaXMgaXMgbm90IGp1c3Qgc2NpZW5jZSBmaWN0aW9uIGFzIGEgcmVjZW50IHN1cnZleSBjb25kdWN0ZWQgYnkgSFAgc2hvd3MgdGhhdCAxMCUgaW4gdGhlIFUuUy4gZWl0aGVyIGtub3cgc29tZW9uZSB3aG9zZSB3ZWJjYW0gd2FzIGhhY2tlZCBvciBoYXZlIGhhZCB0aGVpciBvd24gd2ViY2FtIGhhY2tlZC4gSW4gdGhpcyBjaGFsbGVuZ2UsIHdlIGFyZSBnb2luZyB0byB3YWxrIHlvdSB0aHJvdWdoIHRoZSBiZXN0IHByYWN0aWNlIHRvIGF2b2lkIHRoaXMgcmlzay5cIn0sXG4gICAgICAgIHsgaWQ6ICdxMicsIG5hbWU6ICdCcm93c2VyIENob2ljZScsIHRpbWU6ICczbWlucyd9LFxuICAgICAgICB7IGlkOiAncTMnLCBuYW1lOiAnUHJpdmFjeSBTZXR0aW5nJywgdGltZTogJzRtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICdxNCcsIG5hbWU6ICdIdHRwcyBldmVyeXdoZXJlJywgdGltZTogJzRtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICdxNScsIG5hbWU6ICdMb2NhdGlvbiBTZXJ2aWNlcyAocGhvbmUgbmVlZGVkKScsIHRpbWU6ICczbWlucyd9LFxuICAgICAgICB7IGlkOiAncTYnLCBuYW1lOiAnVHJhY2tlciBibG9ja2VyJywgdGltZTogJzNtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICdxNycsIG5hbWU6ICdsb2NhdGlvbiBUcmFja2luZycsIHRpbWU6ICcxbWlucyd9LFxuICAgICAgICB7IGlkOiAncTgnLCBuYW1lOiAnTW9iaWxlIGtleWJvYXJkJywgdGltZTogJzVtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICdxOScsIG5hbWU6ICdNZXNzZW5nZXIgcGxhdGZvcm0nLCB0aW1lOiAnMm1pbnMnfSxcbiAgICAgICAgeyBpZDogJ3ExMCcsIG5hbWU6ICdpb3QnLCB0aW1lOiAnMm1pbnMnfVxuICAgICBdXG4gICAgbGV0IGFjdGl2ZSA9IHRydWU7XG4gICAgIGZ1bmN0aW9uIGhhbmRsZU1vdXNlU2hvdygpe1xuICAgICAgICBhY3RpdmUgPSBmYWxzZTtcblxuICAgICB9XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPlF1aXogT3ZlcnZpZXc8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxkaXYgdHJhbnNpdGlvbjpzbGlkZT1cInt7ZGVsYXk6IDEwMCwgZHVyYXRpb246IDQwMCwgZWFzaW5nOiBxdWludE91dH19XCIgPlxuPGgyPlRoaXMgdGVzdCBjb250YWlucyAxMCB1bmlxdWUgcHJpdmFjeSB0ZXN0cyB0aGF0IHdpbGwgdGFrZSB5b3UgYWJvdXQgMzAgbWludXRlcyB0byBjb21wbGV0ZS4gVGhyb3VnaHQgdGhlIHRlc3QsIHdlIHdpbGwgcHJvdmlkZS4uLjwvaDI+XG48ZGl2PlxuICAgIHsjZWFjaCBxdWl6U3RlcHMgYXMge2lkLCBuYW1lLCB0aW1lLCBkZXNjcmlwdGlvbn0sIGl9XG4gICAgPGRpdiBjbGFzcz0nbnVtJz57aX17bmFtZX0gKHt0aW1lfSk8L2Rpdj48ZGl2IGNsYXNzOmFjdGl2ZT17YWN0aXZlfT57ZGVzY3JpcHRpb259PC9kaXY+XG4gICAgey9lYWNofVxuPC9kaXY+XG48L2Rpdj5cbjxzdHlsZT5cbiAgICAubnVtIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTAwcHg7XG4gICAgIFxuICAgIH1cbiAgICBkaXYge1xuICAgICAgICBjb2xvcjpibGFjaztcbiAgICB9XG4gICAgLmFjdGl2ZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICBcbjwvc3R5bGU+IiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgeyBvbk1vdW50LCBiZWZvcmVVcGRhdGUsIGFmdGVyVXBkYXRlLCBvbkRlc3Ryb3kgfSBmcm9tICdzdmVsdGUnO1xuICAgIGltcG9ydCBWaWQgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9WaWQuc3ZlbHRlJ1xuICAgIGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuICAgIGltcG9ydCBDb21wbGV0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBsZXRlLnN2ZWx0ZSdcblx0aW1wb3J0IEJ0biBmcm9tICcuLi8uLi9jb21wb25lbnRzL0J0bi5zdmVsdGUnIC8vc2V0IDxOZXh0IHE9ezJ9PiB0byBza2lwIG11bHRpcGxlIHN0ZXBzXG4gICAgaW1wb3J0IHsgY291bnQsIHN0ZXAsIHF1aXpTdGVwcywgdGltZXJBY3RpdmUsIHByb2dyZXNzfSBmcm9tICcuLi8uLi9zdG9yZS5qcydcbiAgICBpbXBvcnQgQmFjayBmcm9tICcuLi8uLi9jb21wb25lbnRzL0JhY2suc3ZlbHRlJ1xuXG4gICAgLy9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG4gICBvbk1vdW50KGFzeW5jKCkgPT4ge1xuICAgICAgICAkcXVpelN0ZXBzWyRjb3VudF0uc3RhdHVzID0gMTtcbiAgICAgICAgdGltZXJBY3RpdmUuc2V0KCEkdGltZXJBY3RpdmUpfSk7XG4gICAgLy9TdGFydCBWaWRlbyBvbiB1cGRhdGVcbiAgICAvKlxuICAgIGxldCB2aWRlbztcblx0YWZ0ZXJVcGRhdGUoYXN5bmMoKSA9PiB7XG5cdHZpZGVvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN2aWRlb0VsZW1lbnRcIik7XG5cdGlmIChuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSkge1xuICBcdG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsgdmlkZW86IHRydWUgfSlcbiAgICAudGhlbihmdW5jdGlvbiAoc3RyZWFtKSB7XG5cdFx0XHR2aWRlby5zcmNPYmplY3QgPSBzdHJlYW07XG4gICAgfSlcbiAgICAuY2F0Y2goZnVuY3Rpb24gKGVycjByKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIk5vdCBsb2FkZWRcIik7XG4gICAgfSk7XG5cdFx0fVxufSlcbi8vc3RvcCB2aWRlbyBmdW5jdGlvbiBvbiBlbmQgb2YgY29tcG9uZW50ICAgXG4gICBvbkRlc3Ryb3koYXN5bmMoKSA9PiB7IFxuICAgICAgICBmdW5jdGlvbiBzdG9wU3RyZWFtZWRWaWRlbyh2aWRlbykgeyBcbiAgICAgICAgICAgIGNvbnN0IHN0cmVhbSA9IHZpZGVvLnNyY09iamVjdDtcbiAgICAgICAgICAgIGNvbnN0IHRyYWNrcyA9IHN0cmVhbS5nZXRUcmFja3MoKTtcbiAgICAgICAgICAgICAgICB0cmFja3MuZm9yRWFjaCh0ID0+IHQuc3RvcCgpKTtcbiAgICAgICAgICAgICAgICBzdHJlYW0gPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvL3ZpZGVvLnNyY09iamVjdCA9IG51bGw7XG4gICAgICAgICAgICB9KTsqL1xuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5XZWJjYW0gQ2hhbGxlbmdlPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48VHJhbnM+XG5cbnsjaWYgJHN0ZXA9PTB9XG48c2VjdGlvbj5cblx0PGgyPklzIHlvdXIgV2ViY2FtIENvdmVyZWQ/PC9oMj4gXG4gICAgPHA+SXTigJlzIGxpa2VseSB5b3VyIGNvbXB1dGVyIGFscmVhZHkgaGFzIGEgYnVpbHQtaW4gY2FtZXJhLCBhbmQgaXTigJlzIHBvc3NpYmxlIGZvciB0aGF0IGNhbWVyYSB0byBiZSB1c2VkIHRvIHNweSBvbiB5b3UuPC9wPiAgPHA+SWYgeW91ciB3ZWJjYW0gZm9yIHdoYXRldmVyIHJlYXNvbiBoYXMgYmVlbiBoYWNrZWQsIHRoZSBwZXJzb24gb24gdGhlIG90aGVyIHNpZGUgY2FuIHRha2UgcGljdHVyZXMgYW5kIHZpZGVvIG9mIGFueXRoaW5nIG9yIGFueW9uZS4gTm8sIHRoaXMgaXNu4oCZdCBqdXN0IHBhcmFub2lh4oCTYSByZWNlbnQgc3VydmV5IGNvbmR1Y3RlZCBieSBIUCBmb3VuZCB0aGF0IDEwJSBpbiB0aGUgVS5TLiBlaXRoZXIga25vdyBzb21lb25lIHdob3NlIHdlYmNhbSB3YXMgaGFja2VkIG9yIGhhdmUgaGFkIHRoZWlyIG93biB3ZWJjYW0gaGFja2VkLjwvcD5cbiAgICA8QnRuIHA9ezQuNzV9PkNvbnRpbnVlPC9CdG4+XG48L3NlY3Rpb24+XG57OmVsc2UgaWYgJHN0ZXA9PTF9XG48c2VjdGlvbj5cblx0PGgyPkNvdmVyIFlvdXIgV2ViY2FtPC9oMj5cblx0PHA+Q292ZXIgeW91ciB3ZWJjYW0uIFlvdSBjYW4gZmluZCByZW1vdmFibGUgc3RpY2tlcnMgZm9yIHRoaXMgcHVycG9zZSwgYnV0IHNpbXBsZSBmaXhlcyBjYW4gYmUgZm91bmQgYXQgeW91ciBob21lIG9yIG9mZmljZS4gWW91IGNhbiB1c2UgYSBzdGlja3kgbm90ZSBvciAgYSBwaWVjZSBvZiBtYXNraW5nIHRhcGUgdG8gb2JzY3VyZSB5b3VyIHdlYmNhbSB3aGVuIGl04oCZcyBub3QgaW4gdXNlLiBMaWtlIHJpZ2h0IG5vdy4gPC9wPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuICAgICAgICA8QnRuIHA9ezQuNzV9Pkl0J3MgY292ZXJlZDwvQnRuPlxuICAgICAgICA8Q29tcGxldGUgc3VjY2Vzcz17ZmFsc2V9IHA9ezguNX0+Tm8gVGhhbmtzLCBJdCdzIGEgaGFzc2xlPC9Db21wbGV0ZT4gXG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlIGlmICRzdGVwPT0yfVxuICAgPGRpdiBjbGFzcz1cInZpZGVvLWhvbGRlclwiPlxuICAgICAgIDxWaWQ+PC9WaWQ+XG4gICAgPC9kaXY+XG4gICAgPHAgaWQ9XCJhbGVydFwiPkNvdmVyIHlvdXIgd2ViY2FtPC9wPlxuICAgIDxwIGlkPVwibm90LWNvdmVyZWRcIj5Zb3UgaGF2ZW7igJl0IGNvdmVyZWQgeW91ciB3ZWJjYW1lIG9yIGRpZCBub3QgZG8gaXQgcHJvcGVybHkuIFBsZWFzZSBjb3ZlciB5b3VyIHdlYmNhbSBjb21wbGV0ZWx5IHRvIHByb2NlZWQgdG8gdGhlIG5leHQgc3RlcC48L3A+XG4gICAgPENvbXBsZXRlIHA9ezQuNzV9PlxuICAgICAgICBPbndhcmRzIHRvIHRoZSBuZXh0IGNoYWxsZW5nZVxuICAgIDwvQ29tcGxldGU+XG57OmVsc2V9XG4gICAgPFZpZD48L1ZpZD5cbiAgICA8Q29tcGxldGUgcD17NC43NX0+XG4gICAgICAgIE9ud2FyZHMgdG8gdGhlIG5leHQgY2hhbGxlbmdlXG4gICAgPC9Db21wbGV0ZT5cbnsvaWZ9XG5cbjxCYWNrLz5cbjwvVHJhbnM+XG48c3R5bGU+XG4gICAuYnV0dG9uLWhvbGRlciB7XG5cdHdpZHRoOiAyN3Z3O1xuXHRkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgIH1cbiAgIC52aWRlby1ob2xkZXJ7XG4gICAgICAgd2lkdGg6IDEwMCU7XG4gICB9XG4gICAjYWxlcnQge1xuICAgICAgIGNvbG9yOiByZWQ7XG4gICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgfVxuICAgI25vdC1jb3ZlcmVkIHtcbiAgICAgICBjb2xvcjogcmVkO1xuICAgICAgIGJhY2tncm91bmQ6ICNGRkVFRUU7XG4gICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgIGJvcmRlcjogbm9uZTtcbiAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cblx0aW1wb3J0IHsgb25Nb3VudCwgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcblx0Y29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblx0aW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG5cdGltcG9ydCBDb21wbGV0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBsZXRlLnN2ZWx0ZScgLy9zZXQgc3VjY2Vzcz17ZmFsc2V9IGZvciBmYWlsdXJlXG5cdGltcG9ydCBCdG4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdG4uc3ZlbHRlJyAvL3NldCA8TmV4dCBxPXsyfT4gdG8gc2tpcCBtdWx0aXBsZSBzdGVwc1xuXHRpbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG5cdGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cbiAgICAgLy9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG5cdG9uTW91bnQoYXN5bmMoKSA9PiB7JHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDF9KTtcblx0bGV0IGRpc2FibGVkID0gZmFsc2U7XG5cdGZ1bmN0aW9uIGRpc2FibGUoKSB7XG5cdFx0ZGlzYWJsZWQ9IHRydWU7XG5cdFx0Y29uc29sZS5sb2coZGlzYWJsZWQpO1xuXHR9XG5cdGNvbnNvbGUubG9nKGRpc2FibGVkKTtcbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+SHR0cHMgRXZlcnl3aGVyZTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPFRyYW5zPlxueyNpZiAkc3RlcCA9PSAwfVxuPHNlY3Rpb24+XG5cdDxoMj5JcyB5b3VyIGluZm9ybWF0aW9uIGVuY3J5cHRlZCBhbmQgc2VjdXJlPzwvaDI+IFxuXHQ8cD5IVFRQIHN0YW5kcyBmb3IgaHlwZXJ0ZXh0IHRyYW5zZmVyIHByb3RvY29sLiBJdOKAmXMgYSBwcm90b2NvbCB0aGF0IGFsbG93cyB0aGUgdHJhbnNmZXJyaW5nIG9mIGRhdGEgZnJvbSBhIHdlYiBzZXJ2ZXIgdG8gYSBicm93c2VyIHRvIHZpZXcgd2ViIHBhZ2VzLjwvcD5cblx0PHA+VGhlIHByb2JsZW0gaXMgdGhhdCB0aGUgZGF0YSB0cmFuc2ZlcnJlZCBieSBIVFRQIGlzIG5vdCBlbmNyeXB0ZWQsIGFuZCBpdCBjYW4gYmUgaW50ZXJjZXB0ZWQgYnkgdGhpcmQgcGFydGllcyB0byB2aWV3IHRoZSBkYXRhIGJlaW5nIHBhc3NlZCBiZXR3ZWVuIHRoZSB0d28gc3lzdGVtcy4gVGhpcyBjYW4gYmUgYWRkcmVzc2VkIGJ5IHVzaW5nIGEgc2VjdXJlIHZlcnNpb24gY2FsbGVkIEhUVFBTLCB3aGVyZSB0aGUgXCJTXCIgc3RhbmRzIGZvciBzZWN1cmUuPC9wPlxuXHQ8cD5Vc2luZyAgSFRUUFMgIGlzIGVzcGVjaWFsbHkgaW1wb3J0YW50IGZvciBzaXRlcyB0aGF0IHRyYW5zbWl0IHNlbnNpdGl2ZSBkYXRhLCBsaWtlIGVjb21tZXJjZSBzaXRlcyB0aGF0IGFjY2VwdCBvbmxpbmUgY2FyZCBwYXltZW50cywgb3IgbG9naW4gYXJlYXMgdGhhdCByZXF1aXJlIHVzZXJzIHRvIGVudGVyIHRoZWlyIGNyZWRlbnRpYWxzLjwvcD5cblxuXHRcblx0XHQ8QnRuPkNvbnRpbnVlPC9CdG4+XG48L3NlY3Rpb24+XG57OmVsc2V9XG48c2VjdGlvbj5cblx0PGgyPkRvd25sb2FkIEhUVFBTIEV2ZXJ5d2hlcmUgZXh0ZW5zaW9uPC9oMj5cblx0PHA+THVja2lseSwgdGhlIEVsZWN0cm9uaWMgRnJvbnRpZXIgRm91bmRhdGlvbiBoYXMgY3JlYXRlZCBhIHNtYXJ0IGV4dGVuc2lvbiB0aGF0IHJld3JpdGVzIHdlYnNpdGUgcmVxdWVzdHMgdG8gSFRUUFMuIFdpdGggSFRUUFMsIHRoZSBpbnRlcm5ldCB0cmFmZmljIGJldHdlZW4geW91ciBkZXZpY2UgYW5kIHRoZSBzZXJ2ZXIgaG9zdGluZyB5b3VyIHdlYnNpdGUgY2Fu4oCZdCBiZSBzZWVuIGJ5IHByeWluZyBleWVzLjwvcD5cbjwvc2VjdGlvbj5cbjxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG5cdDxhIGhyZWY9J2h0dHBzOi8vd3d3LmVmZi5vcmcvaHR0cHMtZXZlcnl3aGVyZScgdGFyZ2V0PVwiX2JsYW5rXCI+PGJ1dHRvbiBvbjpjbGlja3xvbmNlPSd7ZGlzYWJsZX0nIGRpc2FibGVkPSd7ZGlzYWJsZWR9Jz5Eb3dubG9hZCBleHRlbnNpb24gbm93XG5cdDwvYnV0dG9uPjwvYT5cblx0PENvbXBsZXRlPlxuXHRcdHsjaWYgIWRpc2FibGVkfVxuXHRcdEFscmVhZHkgSGF2ZSBpdFxuXHRcdHs6ZWxzZX1cblx0XHRKdXN0IGRvd25sb2FkZWQgaXRcblx0XHR7L2lmfVxuXHQ8L0NvbXBsZXRlPlxuXHQ8Q29tcGxldGUgc3VjY2Vzcz17ZmFsc2V9PlxuXHRcdE5vIFRoYW5rc1xuXHQ8L0NvbXBsZXRlPlxuXHRcbjwvZGl2Plxuey9pZn1cbjxCYWNrLz5cbjwvVHJhbnM+XG48c3R5bGU+XG4gICAuYnV0dG9uLWhvbGRlciB7XG5cdHdpZHRoOiAyN3Z3O1xuXHRkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgIH1cbiAgIGJ1dHRvbiB7XG5cdCAgIHBhZGRpbmc6IDEwcHggMjBweDtcblx0ICAgbWFyZ2luOiAxMHB4O1xuXHQgICBib3JkZXI6IGJsYWNrIHNvbGlkIDBweDtcblx0ICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgfVxuICAgYSB7XG5cdCAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgIH1cbiAgIFxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuXHRpbXBvcnQgeyBvbk1vdW50LCBhZnRlclVwZGF0ZSB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdC8vaW1wb3J0IENvbXBsZXRpb24gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Db21wbGV0aW9uLnN2ZWx0ZSdcblx0aW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG5cdCBcblx0aW1wb3J0IENvbXBsZXRlIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY29tcGxldGUuc3ZlbHRlJyAvL3NldCBzdWNjZXNzPXtmYWxzZX0gZm9yIGZhaWx1cmVcblx0aW1wb3J0IEJ0biBmcm9tICcuLi8uLi9jb21wb25lbnRzL0J0bi5zdmVsdGUnIC8vc2V0IDxOZXh0IHE9ezJ9PiB0byBza2lwIG11bHRpcGxlIHN0ZXBzXG5cdGltcG9ydCB7IGNvdW50LCBzdGVwLCBxdWl6U3RlcHMgfSBmcm9tICcuLi8uLi9zdG9yZS5qcydcblx0aW1wb3J0IEJhY2sgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CYWNrLnN2ZWx0ZSdcblxuXHRvbk1vdW50KGFzeW5jKCkgPT4geyRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxO1xuXHRcdH0pO1xuXHRsZXQgY3VycmVudCA9ICdpbml0aWFsJztcblx0PC9zY3JpcHQ+XG5cdDxzdmVsdGU6aGVhZD5cblx0XHQ8dGl0bGU+U2VhcmNoIEVuZ2luZTwvdGl0bGU+XG5cdDwvc3ZlbHRlOmhlYWQ+XG5cdFxuXHQ8VHJhbnM+XG5cdFx0PHNlY3Rpb24+XG5cdHsjaWYgJHN0ZXA9PTB9IFxuXHRcdDxoMT5DaGFuZ2UgWW91ciBTZWFyY2g8L2gxPlxuXHRcdDxwPkhvdyBhcmUgeW91IHNlYXJjaGluZyBmb3IgaW5mb3JtYXRpb24/IDwvcD5cblx0XHQ8cD5Vc2luZyBhIHNlYXJjaCBlbmdpbmUgY2FuIGRpc2Nsb3NlIGhpZ2hseSBwZXJzb25hbCBpbmZvcm1hdGlvbiBhYm91dCB5b3UsIHN1Y2ggYXMgbWVkaWNhbCBpc3N1ZXMsIGVtcGxveW1lbnQgc3RhdHVzLCBmaW5hbmNpYWwgaW5mb3JtYXRpb24sIHBvbGl0aWNhbCBiZWxpZWZzLCBhbmQgb3RoZXIgcHJpdmF0ZSBkZXRhaWxzLiBUaGlzIGRhdGEsIG9mIGNvdXJzZSwgY2FuIGJlIGNvbGxlY3RlZCwgc3RvcmVkLCBhbmQgbGlua2VkIHRvIHlvdXIgZGF0YSBwcm9maWxlIChhbmQgeW91ciByZWFsIGlkZW50aXR5KS4gVGhlIG9ubHkgd2F5IHRvIGVmZmVjdGl2ZWx5IOKAnG9wdCBvdXTigJ0gaXMgdG8ga2VlcCB5b3VyIGRhdGEgc2FmZSBhbmQgb3V0IG9mIHRoZSBoYW5kcyBvZiB0aGUgZGF0YSBjb2xsZWN0b3JzLjwvcD5cblx0PEJ0bj4gY29udGludWU8L0J0bj5cblx0ezplbHNlfVxuXHRcblx0XHRcdDxoMT5Vc2UgYWx0ZXJuYXRpdmUgc2VhcmNoIGVuZ2luZTwvaDE+XG5cdFx0XHQ8cD5Qcm90ZWN0IHlvdXIgcHJpdmFjeSB3aGlsZSB5b3Ugc2VhcmNoIHVzaW5nIGFuIGFsdGVybmF0aXZlIHNlYXJjaCBlbmdpbmUgd2hlbiB5b3UgbmVlZCB0byBmaW5kIHNvbWV0aGluZyBvbiB0aGUgaW50ZXJuZXQuIFRoaXMgaXNu4oCZdCBhcyBoYXJkIGFzeW91IG1pZ2h0IHRoaW5rIGFzIHRoZXJlIGFyZSBzb21lIGNvbXBldGl0aXZlIGFsdGVybmF0aXZlcyBub3cgdGhhdCBkb27igJl0IGNvbGxlY3Qgb3Igc2hhcmUgeW91ciBwZXJzb25hbCBpbmZvcm1hdGlvbiDigJQgd2UgbGlrZSBEdWNrRHVja0dvIGFzIGFuIGV4dGVuc2lvbiBmb3Igc2VhcmNoZXMsIGJ1dCBpZiB5b3XigJlkIGxpa2UgdG8gc2VhcmNoIGZvciBvdGhlciBzZWFyY2ggZW5naW5lcyA8YSBocmVmPVwiaHR0cHM6Ly9yZXN0b3JlcHJpdmFjeS5jb20vcHJpdmF0ZS1zZWFyY2gtZW5naW5lL1wiPmhlcmUgYXJlIGEgZmV3IG9wdGlvbnM8L2E+LlxuXHRcdFx0XG5cdFx0PGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ21hYyd9XCIgb246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICdtYWMnfVwiPlxuXHRcdFx0PHA+Q2hhbmdlIHlvdXIgZGVmdWFsdCBzZWFyY2ggZW5naW5lIGZvciBNYWM8L3A+XG5cdFx0XHR7I2lmIGN1cnJlbnQ9PT0nbWFjJ31cblx0XHRcdFx0PG9sPlxuXHRcdFx0XHRcdDxsaT5DaG9vc2UgU3lzdGVtIFByZWZlcmVuY2VzIGZyb20gdGhlIEFwcGxlICgpIG1lbnUuPC9saT5cblx0XHRcdFx0XHQ8bGk+Q2xpY2sgR2VuZXJhbDwvbGk+XG5cdFx0XHRcdFx0PGxpPkNob29zZSB5b3VyIHdlYiBicm93c2VyIGZyb20gdGhlIOKAnURlZmF1bHQgd2ViIGJyb3dzZXLigJ0gcG9wLXVwIG1lbnUuPC9saT5cblx0XHRcdFx0PC9vbD5cblx0XHRcdHsvaWZ9XG5cdFx0PC9kaXY+XG5cdFx0PGhyPlxuIFx0XHQ8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAncGMnfVwiIG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAncGMnfVwiPlxuXHRcdFx0PHA+Q2hhbmNlIHlvdXIgZGVmYXVsdCBzZWFyY2ggZW5naW5lIGZvciBXaW5kb3dzPHA+XG5cdFx0XHR7I2lmIGN1cnJlbnQ9PT0ncGMnfVxuXHRcdFx0PG9sPlxuXHRcdFx0XHRcdDxsaT5TZWxlY3QgdGhlIFN0YXJ0ICBidXR0b24sIGFuZCB0aGVuIHR5cGUgRGVmYXVsdCBhcHBzLjwvbGk+XG5cdFx0XHRcdFx0PGxpPkluIHRoZSBzZWFyY2ggcmVzdWx0cywgc2VsZWN0IERlZmF1bHQgYXBwcy48L2xpPlxuXHRcdFx0XHRcdDxsaT5VbmRlciBXZWIgYnJvd3Nlciwgc2VsZWN0IHRoZSBicm93c2VyIGN1cnJlbnRseSBsaXN0ZWQsIGFuZCB0aGVuIHNlbGVjdCBNaWNyb3NvZnQgRWRnZSBvciBhbm90aGVyIGJyb3dzZXIuPC9saT5cblx0XHRcdDwvb2w+XG4gICAgXHRcdHsvaWZ9XG5cdFx0PC9kaXY+XG5cdFx0PGhyPlxuXHRcdDxkaXY+XG5cdFx0ICAgPHA+PGEgaHJlZj1cImh0dHBzOi8vY2hyb21lLmdvb2dsZS5jb20vd2Vic3RvcmUvZGV0YWlsL2R1Y2tkdWNrZ28tcHJpdmFjeS1lc3NlbnQvYmtkZ2ZsY2xkbm5uYXBibGtocGhiZ3BnZ2RpaWtwcGdcIiB0YXJnZXQ9XCJfYmxhbmtcIj5PciB5b3UgY2FuIGRvd25sb2FkIHRoZSBEdWNrRHVja0dvIEV4dGVuc2lvbiBoZXJlPC9hPjwvcD5cblx0XHQ8L2Rpdj5cblx0XHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdFx0PENvbXBsZXRlPlxuICAgICAgICBcdFx0U2VhcmNoIEVuZ2luZSBDaGFuZ2VkXG5cdFx0XHQ8L0NvbXBsZXRlPlxuXHRcdFx0PENvbXBsZXRlIHN1Y2Nlc3M9e2ZhbHNlfT5cbiAgICAgICAgXHRcdE5vIFRoYW5rc1xuICAgIFx0XHQ8L0NvbXBsZXRlPlxuXHRcdDwvZGl2PlxuXHRcdHsvaWZ9XG5cdDwvc2VjdGlvbj5cblx0XHQ8QmFjay8+XG5cdDwvVHJhbnM+XG5cdFx0XG5cdFx0XG5cdDxzdHlsZT5cblx0XHQuYnV0dG9uLWhvbGRlciB7XG5cdFx0XHR3aWR0aDogMjd2dztcblx0XHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0XHRmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG5cdFx0fVxuXHQ8L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IG9uTW91bnQsIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuXHRpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnXG5cdGltcG9ydCBCdG4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdG4uc3ZlbHRlJyAvL3NldCA8TmV4dCBxPXsyfT4gdG8gc2tpcCBtdWx0aXBsZSBzdGVwc1xuXHRpbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG5cdGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cblx0Ly9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG5cdG9uTW91bnQoYXN5bmMoKSA9PiB7JHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDF9KTtcblx0bGV0IGRpc2FibGVkID0gZmFsc2U7XG5cdGZ1bmN0aW9uIGRpc2FibGUoKSB7XG5cdFx0ZGlzYWJsZWQ9IHRydWU7XG5cdFx0Y29uc29sZS5sb2coZGlzYWJsZWQpO1xuXHR9XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPlRyYWNrZXIgYmxvY2tlcjwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPFRyYW5zPlxueyNpZiAkc3RlcD09MH1cbjxzZWN0aW9uPlxuXHQ8aDI+VHJhY2tlciBibG9ja2VyOiBQcml2YWN5IEJhZGdlcjwvaDI+IFxuXHQ8cD5BcmUgeW91IGJlaW5nIHRyYWNrZWQgb24gdGhlIHdlYj8gQWxtb3N0IGRlZmluaXRlbHkuIFxuXHRcdFRyYWNrZXJzIGFyZSBpbnN0YWxsZWQgb24gbWFueSB3ZWJzaXRlcyB0byBsb2cgeW91ciBiZWhhdmlvci4gV2hpbGUgY29va2llcyBhcmUgdGhlIGxpdHRsZSBpZGVudGlmaWVycyBmb3Igd2Vic2l0ZXMgdG8gcmVjb2duaXplIHlvdSB0aHJvdWdoIG11bHRpcGxlIHZpc2l0cywgdHJhY2tlcnMgdXNlIHRob3NlIGNvb2tpZXMgdG8gYW5hbHl6ZSB5b3VyIGJlaGF2aW9yIGFuZCBidWlsZCB0aGVpciB2YWx1YWJsZSB1c2VyIHByb2ZpbGVzLiBUcmFja2VycyB3aWxsIGxvZyB0aGUgc2l0ZSB5b3UgdmlzaXQsIHRoZSBkYXRlIGFuZCB0aW1lLCBhbmQgeW91ciBjb21wdXRlciBzZXR0aW5ncyAobW9yZSBwb3dlcmZ1bCB0cmFja2VycyBjYW4gZXZlbiB3YXRjaCB5b3VyIG1vdXNlIG1vdmVtZW50KSBhbGwgb2YgdGhpcyB3aXRob3V0IHlvdXIgY29uc2VudC48L3A+XG5cdDxCdG4+Q29udGludWU8L0J0bj5cbjwvc2VjdGlvbj5cbns6ZWxzZX1cbjxzZWN0aW9uPlxuXHQ8aDI+SW5zdGFsbCB0aGUgUHJpdmFjeSBCYWRnZXIgZXh0ZW5zaW9uLjwvaDI+XG5cdDxwPlByaXZhY3kgQmFkZ2VyIGlzIGEgZnJlZSBhbmQgb3Blbi1zb3VyY2UgYnJvd3NlciBleHRlbnNpb24gZm9yIEdvb2dsZSBDaHJvbWUsIE1vemlsbGEgYW5kIEZpcmVmb3ggdGhhdCBhdXRvbWF0aWNhbGx5IGRpc2NvdmVycyB0cmFja2VycyBhcyB5b3UgYnJvd3NlIHRoZSBXZWIuIFRoZSBsb25nZXIgeW91IGJyb3dzZSB3aXRoIFByaXZhY3kgQmFkZ2VyLCB0aGUgYmV0dGVyIGl0IGdldHMgYXQgcHJvdGVjdGluZyB5b3UsIHNvIHN0YXJ0IGJyb3dzaW5nIGEgbGl0dGxlIHRvIHRlYWNoIHlvdXIgQmFkZ2VyLjwvcD5cblx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8YSBocmVmPSdodHRwczovL3ByaXZhY3liYWRnZXIub3JnJyB0YXJnZXQ9XCJfYmxhbmtcIj48YnV0dG9uIG9uOmNsaWNrfG9uY2U9J3tkaXNhYmxlfScgZGlzYWJsZWQ9J3tkaXNhYmxlZH0nPkRvd25sb2FkIFByaXZhY3kgQmFkZ2VyXG5cdFx0PC9idXR0b24+PC9hPlxuXHRcdDxDb21wbGV0ZT5cblx0XHRcdHsjaWYgIWRpc2FibGVkfVxuXHRcdFx0QWxyZWFkeSBIYXZlIGl0XG5cdFx0XHR7OmVsc2V9XG5cdFx0XHRKdXN0IGRvd25sb2FkZWQgaXRcblx0XHRcdHsvaWZ9XG5cdFx0PC9Db21wbGV0ZT5cblx0XHQ8Q29tcGxldGUgc3VjY2Vzcz17ZmFsc2V9PlxuXHRcdFx0Tm8gVGhhbmtzXG5cdFx0PC9Db21wbGV0ZT5cblx0PC9kaXY+XG48L3NlY3Rpb24+XG57L2lmfVxuPEJhY2svPlxuPC9UcmFucz5cbjxzdHlsZT5cbiAgIC5idXR0b24taG9sZGVyIHtcblx0d2lkdGg6IDI3dnc7XG5cdGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgfVxuICAgYnV0dG9uIHtcblx0ICAgcGFkZGluZzogMTBweCAyMHB4O1xuXHQgICBtYXJnaW46IDEwcHg7XG5cdCAgIGJvcmRlcjogYmxhY2sgc29saWQgMHB4O1xuXHQgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICB9XG4gICBhIHtcblx0ICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuXHRpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuXHRjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXHRpbXBvcnQgeyBvbk1vdW50LCBhZnRlclVwZGF0ZSB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGltcG9ydCBEZXRlY3QgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9EZXRlY3Quc3ZlbHRlJ1xuXHRpbXBvcnQgVHJhbnMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9UcmFuc0hlbHAuc3ZlbHRlJztcblx0aW1wb3J0IENvbXBsZXRlIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY29tcGxldGUuc3ZlbHRlJyAvL3NldCBzdWNjZXNzPXtmYWxzZX0gZm9yIGZhaWx1cmVcblx0aW1wb3J0IEJ0biBmcm9tICcuLi8uLi9jb21wb25lbnRzL0J0bi5zdmVsdGUnIC8vc2V0IDxOZXh0IHE9ezJ9PiB0byBza2lwIG11bHRpcGxlIHN0ZXBzXG5cdGltcG9ydCB7IGNvdW50LCBzdGVwLCBxdWl6U3RlcHMgfSBmcm9tICcuLi8uLi9zdG9yZS5qcydcblx0aW1wb3J0IEJhY2sgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CYWNrLnN2ZWx0ZSdcblxuXHQvL3NldHMgYXNpZGUgaWNvbiB0byBpbiBwcm9ncmVzcyB2aWEgc3RvcmVcbiAgICBvbk1vdW50KGFzeW5jKCkgPT4geyRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxfSk7XG5cdC8vY29uZmlybSBjb21sZXRpb24gb2YgcXVpeiB0byBtYXN0ZXIgcXVpeiBjb21wb25lbnRcbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+UXVlc3Rpb24gNDogUHJpdmFjeSBTZXR0aW5nczwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPFRyYW5zPlxueyNpZiAkc3RlcD09MH1cbjxzZWN0aW9uPlxuXHQ8aDE+UHJpdmFjeSBzZXR0aW5ncyAtIDNyZCBwYXJ0eSBjb29raWVzPC9oMT5cblx0PGgyPldhbnQgc29tZSBjb29raWVzPzwvaDI+XG5cdDxwPldlbGwsIG5vdCB0aGF0IGtpbmQgb2YgY29va2llLjwvcD5cblx0PHA+Q29va2llcyBhcmUgc21hbGwgZmlsZXMgdGhhdCBhcmUgc3RvcmVkIG9uIHlvdXIgY29tcHV0ZXIgYW5kIGNhcnJ5IGluZm9ybWF0aW9uIGZyb20gb25lIHNlc3Npb24gb24gYSB3ZWJzaXRlIHRvIGFub3RoZXIuIFVzdWFsbHksIHRoZSB3ZWJzaXRlIHRoYXQgc2V0cyBhIGNvb2tpZSBpcyB0aGUgb25seSBvbmUgdGhhdCByZWFkcyB0aGUgY29va2llLiBIb3dldmVyLCB0aGlyZC1wYXJ0eSBjb29raWVzIGNhbiBiZSBzZXQgYnkgb25lIHdlYnNpdGUgYW5kIHJlYWQgYnkgYW5vdGhlci4gVGhpcmQtcGFydHkgY29va2llcyBhcmUgdXNlZCBieSBzZXJ2ZXJzIHRoYXQgZGVsaXZlciBhZHZlcnRpc2VtZW50cyBhbmQgdGhvc2UgYW5ub3lpbmcgcG9wLXVwIGFuZCBwb3AtdW5kZXIgYWRzLjwvcD5cblx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8QnRuPkNvbnRpbnVlPC9CdG4+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlfVxuPHNlY3Rpb24+XG5cdDxoMj5HaXZlIDNyZCBwYXJ0eSBjb29raWVzIHRoZSBib290IGJ5IG1hbmFnaW5nIHlvdXIgYnJvd3NlciBzZXR0aW5nczo8L2gyPlxuXHQ8RGV0ZWN0IC8+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCIgaWQ9J2Nvb2tpZS1idXR0b25zJz5cblx0XHQ8aDM+RGlkIHlvdSBkaXNhYmxlIHRyYWNraW5nIGNvb2tpZXM/PC9oMz5cblx0XHQ8Q29tcGxldGU+WXVwPC9Db21wbGV0ZT5cblx0XHQ8Q29tcGxldGUgc3VjY2Vzcz17ZmFsc2V9Pk5vLCBJIGRvbid0IG1pbmQgdGhlbSBmb2xsb3dpbmcgbWU8L0NvbXBsZXRlPlxuXHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbnsvaWZ9XG48QmFjay8+XG48L1RyYW5zPlxuPHN0eWxlPlxuICAgLmJ1dHRvbi1ob2xkZXIge1xuXHR3aWR0aDogMjd2dztcblx0ZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICB9XG4gICAjY29va2llLWJ1dHRvbnN7XG5cdCAgIG1hcmdpbjogNDBweCAwcHggMHB4IDBweDtcbiAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cblx0aW1wb3J0IHsgb25Nb3VudCwgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcblx0Y29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblx0aW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG5cdGltcG9ydCBDb21wbGV0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBsZXRlLnN2ZWx0ZScgLy9zZXQgc3VjY2Vzcz17ZmFsc2V9IGZvciBmYWlsdXJlXG5cdGltcG9ydCBCdG4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdG4uc3ZlbHRlJyAvL3NldCA8TmV4dCBxPXsyfT4gdG8gc2tpcCBtdWx0aXBsZSBzdGVwc1xuXHRpbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG5cdGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cblx0Ly9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG4gICAgb25Nb3VudChhc3luYygpID0+IHskcXVpelN0ZXBzWyRjb3VudF0uc3RhdHVzID0gMX0pO1xuXHRsZXQgY3VycmVudCA9ICdpbml0aWFsJztcbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+RG9tYWluIE5hbWUgU2VydmljZTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPFRyYW5zPlxueyNpZiAkc3RlcD09MH1cbjxzZWN0aW9uPlxuXHQ8aDI+RG9tYWluIE5hbWUgU2VydmVyIChETlMpOiBRdWFkOVxuXHQ8L2gyPiBcblx0PHA+RXZlcnl0aGluZyBvbiB0aGUgSW50ZXJuZXQsIGluY2x1ZGluZyB3ZWJzaXRlcywgbGl2ZSBhdCBhIG51bWVyaWNhbCBJUCBhZGRyZXNzLiBUaGUgRG9tYWluIE5hbWUgU3lzdGVtLCBvciBETlMsIHRyYW5zbGF0ZXMgdGhlc2UgbnVtZXJpY2FsIElQIGFkZHJlc3NlcyBpbnRvIGh1bWFuLXJlYWRhYmxlIGRvbWFpbiBuYW1lcyB0aGF0IHdlIGFsbCBrbm93IGFuZCByZW1lbWJlciAobGlrZSBtaW5keW91cmRhdGEub3JnKS4gSWYgeW91ciBETlMgc2V0dGluZ3MgYXJlIG5vdCB3b3JraW5nIGNvcnJlY3RseSwgb3IgeW914oCZcmUgc3RpbGwgdXNpbmcgZGVmYXVsdHMsIHlvdSBtYXkgYmUgYXQgcmlzayBmb3IgY3liZXJjcmltZSBhbmQgcGVyZm9ybWFuY2UgaXNzdWVzLiBBbmQsIHRoZSB3ZWJzaXRlcyB5b3UgdmlzaXQgbWF5IGJlIGNvbGxlY3RlZCBhbmQgc2hhcmVkIGJ5IHdoYXRldmVyIGVudGl0eSBvd25zIHRoZSBETlMgc2VydmljZS48L3A+XG5cdDxCdG4+Q29udGludWU8L0J0bj5cbjwvc2VjdGlvbj5cbns6ZWxzZX1cbjxzZWN0aW9uPlxuXHQ8aDI+U2V0dXAgUXVhZDk8L2gyPlxuXHQ8cD5RdWFkOSBpcyBhIGZyZWUsIG5vdC1mb3ItcHJvZml0IHNlY3VyaXR5IHNvbHV0aW9uIHRoYXQgdXNlcyB0aGUgRE5TIHRvIHByb3RlY3QgeW91ciBzeXN0ZW0gYWdhaW5zdCB0aGUgbW9zdCBjb21tb24gY3liZXIgdGhyZWF0cy4gTm90IG9ubHkgZG9lcyBpdCAgcHJlc2VydmUgYW5kIHByb3RlY3QgeW91ciBwcml2YWN5LCBpdCB3aWxsIGFsc28gaW1wcm92ZSB5b3VyIHN5c3RlbeKAmXMgcGVyZm9ybWFuY2UhIEl04oCZcyBsaWtlIGEgcGFpbmxlc3MgaW1tdW5pemF0aW9uIGZvciB5b3VyIGNvbXB1dGVyIGFuZCBkZXZpY2VzLjwvcD5cblx0PGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ21hYyd9XCIgb246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICdtYWMnfVwiPlxuXHRcdDxwPlNldHVwIFF1YWQ5IGZvciBNYWM6PC9wPlxuXHRcdHsjaWYgY3VycmVudD09PSdtYWMnfVxuXHRcdDxpZnJhbWUgdGl0bGU9XCJTZXR1cCBRdWFkOSBmb3IgbWFjXCIgd2lkdGg9XCI1NjBcIiBoZWlnaHQ9XCIzMTVcIiBzcmM9XCJodHRwczovL3d3dy55b3V0dWJlLW5vY29va2llLmNvbS9lbWJlZC9OTTRBZGZFbkFtWVwiIGZyYW1lYm9yZGVyPVwiMFwiIGFsbG93PVwiYWNjZWxlcm9tZXRlcjsgYXV0b3BsYXk7IGVuY3J5cHRlZC1tZWRpYTsgZ3lyb3Njb3BlOyBwaWN0dXJlLWluLXBpY3R1cmVcIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+XG5cdFx0ey9pZn1cblx0PC9kaXY+XG5cdFx0PGhyPlxuIFx0PGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ3BjJ31cIiBvbjpjbGljaz1cInsoKSA9PiBjdXJyZW50ID0gJ3BjJ31cIj5cblx0XHQgPHA+U2V0dXAgUXVhZDkgZm9yIFBDOjxwPlxuXHRcdCB7I2lmIGN1cnJlbnQ9PT0ncGMnfVxuXHRcdCA8aWZyYW1lIHRpdGxlPVwiU2V0dXAgUXVhZDkgZm9yIFdpbmRvd3NcIiB3aWR0aD1cIjU2MFwiIGhlaWdodD1cIjMxNVwiIHNyYz1cImh0dHBzOi8vd3d3LnlvdXR1YmUtbm9jb29raWUuY29tL2VtYmVkL2F1alVsM3l0Nm5NXCIgZnJhbWVib3JkZXI9XCIwXCIgYWxsb3c9XCJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZVwiIGFsbG93ZnVsbHNjcmVlbj48L2lmcmFtZT5cbiAgICAgICAgey9pZn1cbiAgICA8L2Rpdj5cblx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8Q29tcGxldGU+U2V0dXAgQ29tcGxldGU8L0NvbXBsZXRlPlxuXHRcdDxDb21wbGV0ZSBzdWNjZXNzPXtmYWxzZX0+RG9uJ3QgY2FyZSwgbGV0IHRoZW4gc25vb3A8L0NvbXBsZXRlPlxuXHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbnsvaWZ9XG48QmFjay8+XG48L1RyYW5zPlxuPHN0eWxlPlxuICAgLmJ1dHRvbi1ob2xkZXIge1xuXHR3aWR0aDogMjd2dztcblx0ZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICB9XG4gICBidXR0b24ge1xuXHQgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdCAgIG1hcmdpbjogMTBweDtcblx0ICAgYm9yZGVyOiBibGFjayBzb2xpZCAwcHg7XG5cdCAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cblx0aW1wb3J0IHsgb25Nb3VudCwgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcblx0Y29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblx0aW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG5cdGltcG9ydCBDb21wbGV0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBsZXRlLnN2ZWx0ZScgLy9zZXQgc3VjY2Vzcz17ZmFsc2V9IGZvciBmYWlsdXJlXG5cdGltcG9ydCBCdG4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdG4uc3ZlbHRlJyAvL3NldCA8TmV4dCBxPXsyfT4gdG8gc2tpcCBtdWx0aXBsZSBzdGVwc1xuXHRpbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG5cdGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cblxuXHQvL3NldHMgYXNpZGUgaWNvbiB0byBpbiBwcm9ncmVzcyB2aWEgc3RvcmVcbiAgICBvbk1vdW50KGFzeW5jKCkgPT4geyRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxfSk7XG5cblx0bGV0IGN1cnJlbnQgPSAnaW5pdGlhbCc7XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkludGVybmV0IG9mIHRoaW5ncyggQWxleGEsIEhvbWUgZGV2aWNlcyk8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxUcmFucz5cbnsjaWYgJHN0ZXA9PTB9XG48c2VjdGlvbj5cblx0PGgyPkludGVybmV0IG9mIHRoaW5ncyggQWxleGEsIEhvbWUgZGV2aWNlcyk8L2gyPiBcblx0PHA+SXQgc2hvdWxkIGJlIGNsZWFyIGJ5IG5vdyB0aGF0IHlvdXIgZGFpbHkgaW50ZXJhY3Rpb25zIHRlY2hub2xvZ3ksIGxldCBhbG9uZSB5b3VyIHNtYXJ0IHNwZWFrZXIgYXJlIGFueXRoaW5nIGJ1dCBwcml2YXRlLiBBIHNlcmllcyBvZiBpbnZlc3RpZ2F0aXZlIHJlcG9ydHMgaGF2ZSBzaG93biB0aGF0IG90aGVyIHBlb3BsZSBhcmUgcmV2aWV3aW5nIHJlY29yZGluZ3Mgb3IgdHJhbnNjcmlwdHMgb2YgeW91ciBjb252ZXJzYXRpb25zLiBcblx0PC9wPlxuXHQ8cD5UaGUgdGhyZWUgYmlnIG1ha2VycyBvZiBzbWFydCBzcGVha2Vyc+KAlEFtYXpvbiwgQXBwbGUsIGFuZCBHb29nbGXigJRzYXkgdGhleSBkbyB0aGlzIHRvIGltcHJvdmUgdGhlIGRldmljZeKAmXMgcGVyZm9ybWFuY2UsIG5vdCBmb3IgdGFyZ2V0aW5nIGFkcy4gQnV0IHByaXZhY3kgYWR2b2NhdGVzIGFyZ3VlIHRoYXQsIHdpdGhvdXQgcHJpb3Igbm90aWNlLCBhbnkgbGlzdGVuaW5nIGZyb20gZW1wbG95ZWVzIGFuZCBjb250cmFjdG9ycyBpcyB1bmZhaXIgdG8gY29uc3VtZXJzLjwvcD5cblx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8QnRuPkkgb3duIGEgc21hcnQgc3BlYWtlcjwvQnRuPlxuXHRcdDxCdG4gcT17Mn0+SSBkb24ndCBvd24gYSBzbWFydCBzcGVha2VyPC9CdG4+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlIGlmICRzdGVwPT0xfVxuPHNlY3Rpb24+XG5cdDxkaXYgY2xhc3M6YWN0aXZlPVwie2N1cnJlbnQgPT09ICdhbWF6b24nfVwiXG5cdG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAnYW1hem9uJ31cIj5cblx0XHQ8cD5BbWF6b24gQWxleGE8L3A+XG5cdFx0eyNpZiBjdXJyZW50PT09J2FtYXpvbid9XG5cdFx0PHVsPlxuXHRcdFx0PGxpPlN0ZXAgMTogT3BlbiB0aGUgQWxleGEgYXBwIG9uIHlvdXIgc21hcnRwaG9uZSBhbmQgdGFwIHRoZSBtZW51IGJ1dHRvbiBvbiB0aGUgdG9wLWxlZnQgb2YgdGhlIHNjcmVlbi48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgMjogU2VsZWN0IFNldHRpbmdzID4gQWxleGEgUHJpdmFjeSA+IE1hbmFnZSBIb3cgWW91ciBEYXRhIEltcHJvdmVzIEFsZXhhLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCAzOiBTd2l0Y2ggb2ZmIHRoZSB0b2dnbGUgbmV4dCB0byBIZWxwIEltcHJvdmUgQW1hem9uIFNlcnZpY2VzIGFuZCBEZXZlbG9wIE5ldyBGZWF0dXJlcy48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgNDogVGhlbiBzd2l0Y2ggb2ZmIHRoZSB0b2dnbGUgbmV4dCB0byB5b3VyIG5hbWUgdW5kZXIgVXNlIE1lc3NhZ2VzIHRvIEltcHJvdmUgVHJhbnNjcmlwdGlvbnMuPC9saT5cblx0XHQ8L3VsPlxuXHRcdHsvaWZ9XG5cdDwvZGl2PlxuXHRcblx0PGhyPlxuXHQ8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAnZ29vZ2xlJ31cIlxuXHRvbjpjbGljaz1cInsoKSA9PiBjdXJyZW50ID0gJ2dvb2dsZSd9XCI+XG5cdFx0PHA+R29vZ2xlIEFzc2lzdGFudDwvcD5cblx0XHR7I2lmIGN1cnJlbnQ9PT0nZ29vZ2xlJ31cblx0XHQ8dWw+XG5cdFx0XHQ8bGk+U3RlcCAxOiBPcGVuIHRoZSBBbGV4YSBhcHAgb24geW91ciBzbWFydHBob25lIGFuZCB0YXAgdGhlIG1lbnUgYnV0dG9uIG9uIHRoZSB0b3AtbGVmdCBvZiB0aGUgc2NyZWVuLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCAyOiBTZWxlY3QgU2V0dGluZ3MgPiBBbGV4YSBQcml2YWN5ID4gTWFuYWdlIEhvdyBZb3VyIERhdGEgSW1wcm92ZXMgQWxleGEuPC9saT5cblx0XHRcdDxsaT5TdGVwIDM6IFN3aXRjaCBvZmYgdGhlIHRvZ2dsZSBuZXh0IHRvIEhlbHAgSW1wcm92ZSBBbWF6b24gU2VydmljZXMgYW5kIERldmVsb3AgTmV3IEZlYXR1cmVzLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCA0OiBUaGVuIHN3aXRjaCBvZmYgdGhlIHRvZ2dsZSBuZXh0IHRvIHlvdXIgbmFtZSB1bmRlciBVc2UgTWVzc2FnZXMgdG8gSW1wcm92ZSBUcmFuc2NyaXB0aW9ucy48L2xpPlxuXHRcdDwvdWw+XG5cdFx0ey9pZn1cblx0PC9kaXY+XG5cdFxuXHQ8aHI+XG5cdDxkaXYgY2xhc3M6YWN0aXZlPVwie2N1cnJlbnQgPT09ICdhcHBsZSd9XCJcblx0b246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICdhcHBsZSd9XCI+XG5cdFx0PHA+QXBwbGUgU2lyaTwvcD5cblx0XHR7I2lmIGN1cnJlbnQ9PT0nYXBwbGUnfVxuXHRcdDx1bD5cblx0XHRcdDxsaT5TdGVwIDE6IE9wZW4gdGhlIEFsZXhhIGFwcCBvbiB5b3VyIHNtYXJ0cGhvbmUgYW5kIHRhcCB0aGUgbWVudSBidXR0b24gb24gdGhlIHRvcC1sZWZ0IG9mIHRoZSBzY3JlZW4uPC9saT5cblx0XHRcdDxsaT5TdGVwIDI6IFNlbGVjdCBTZXR0aW5ncyA+IEFsZXhhIFByaXZhY3kgPiBNYW5hZ2UgSG93IFlvdXIgRGF0YSBJbXByb3ZlcyBBbGV4YS48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgMzogU3dpdGNoIG9mZiB0aGUgdG9nZ2xlIG5leHQgdG8gSGVscCBJbXByb3ZlIEFtYXpvbiBTZXJ2aWNlcyBhbmQgRGV2ZWxvcCBOZXcgRmVhdHVyZXMuPC9saT5cblx0XHRcdDxsaT5TdGVwIDQ6IFRoZW4gc3dpdGNoIG9mZiB0aGUgdG9nZ2xlIG5leHQgdG8geW91ciBuYW1lIHVuZGVyIFVzZSBNZXNzYWdlcyB0byBJbXByb3ZlIFRyYW5zY3JpcHRpb25zLjwvbGk+XG5cdFx0PC91bD5cblx0XHR7L2lmfVxuXHQ8L2Rpdj5cblx0XG5cdDxocj5cblx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8aDM+RGlkIHlvdSBzZXR1cCBwcml2YWN5IG1vZGU8L2gzPlxuXHRcdDxDb21wbGV0ZT5ZZXMsIEkgRGlkPC9Db21wbGV0ZT5cblx0XHQ8Q29tcGxldGUgc3VjY2Vzcz17ZmFsc2V9Pk5vIEkgZG9uJ3Qgd2FudCB0bzwvQ29tcGxldGU+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlfVxuXHQ8c2VjdGlvbj5cblx0XHQ8aDI+SG9vb3JheSE8L2gyPlxuXHRcdDxwPk9uZSBsZXNzIHdheSBwZW9wbGUgY2FuIHNub29wIG9uIHlvdXIgcHJpdmFjeS48L3A+XG5cdFx0PENvbXBsZXRlPk5leHQgQ2hhbGxlbmdlPC9Db21wbGV0ZT5cblx0PC9zZWN0aW9uPlxuey9pZn1cbjxCYWNrLz5cbjwvVHJhbnM+XG48c3R5bGU+XG4gICAuYnV0dG9uLWhvbGRlciB7XG5cdHdpZHRoOiAyN3Z3O1xuXHRkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cblx0aW1wb3J0IHsgb25Nb3VudCwgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcblx0Y29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblx0aW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG5cdGltcG9ydCBDb21wbGV0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBsZXRlLnN2ZWx0ZScgLy9zZXQgc3VjY2Vzcz17ZmFsc2V9IGZvciBmYWlsdXJlXG5cdGltcG9ydCBCdG4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdG4uc3ZlbHRlJyAvL3NldCA8TmV4dCBxPXsyfT4gdG8gc2tpcCBtdWx0aXBsZSBzdGVwc1xuXHRpbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG5cdGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cblx0Ly9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG5cdG9uTW91bnQoYXN5bmMoKSA9PiB7JHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDE7XG5cdFx0fSk7XG5cbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+TG9jYXRpb24gVHJhY2tpbmc8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxUcmFucz5cbnsjaWYgJHN0ZXA9PTB9XG48c2VjdGlvbj5cblx0PGgxPklzIHlvdXIgcGhvbmUgdHJhY2tpbmcgeW91ciBldmVyeSBtb3ZlPyBQcm9iYWJseS48L2gxPiBcblx0XHQ8cD5QZXJ2YXNpdmUgdHJhY2tpbmcgb2YgbG9jYXRpb24gYXQgdGhlIHZlcnkgbGVhc3Qgcmlza3MgcHV0dGluZyB5b3UgYXQgYSBkaXNhZHZhbnRhZ2UgYXMgYSBjb25zdW1lci4gQ2VydGFpbmx5IGlmIHlvdSBsaXZlIHNvbWV3aGVyZSB3aXRob3V0IGEgcHJvcGVyIHJlZ3VsYXRvcnkgZnJhbWV3b3JrIGZvciBwcml2YWN5LiBJdOKAmXMgYWxzbyB3b3J0aCBiZWFyaW5nIGluIG1pbmQgaG93IGxheCB0ZWNoIGdpYW50cyBjYW4gYmUgd2hlcmUgbG9jYXRpb24gcHJpdmFjeSBpcyBjb25jZXJuZWQg4oCUIHdoZXRoZXIgaXTigJlzIFViZXLigJlzIGluZmFtb3VzIOKAmGdvZCB2aWV34oCZIHRvb2wgb3IgU25hcGNoYXQgbGVha2luZyBzY2hvb2xraWRz4oCZIGxvY2F0aW9uIG9yIFN0cmF2YSBhY2NpZGVudGFsbHkgcmV2ZWFsaW5nIHRoZSBsb2NhdGlvbnMgb2YgbWlsaXRhcnkgYmFzZXMuIFRoZWlyIHJlY29yZCBpcyBwcmV0dHkgdGVycmlibGUuIDwvcD5cdFxuXHQ8aDM+V2hhdCBtb2JpbGUgZGV2aWNlIGRvIHlvdSB1c2U/PC9oMz5cblx0XHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdFx0PEJ0bj5pT1M8L0J0bj5cblx0XHRcdDxCdG4+QW5kcm9pZDwvQnRuPlxuXHRcdDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlIGlmICRzdGVwPT0xfVxuPHNlY3Rpb24+XG5cdDxoMj5UdXJuIGxvY2FpdG9uIG9mZiBvbiBJT1MgZGV2aWNlPC9oMj5cblx0PHA+U3RlcCAxLiBHbyB0byBTZXR0aW5ncyA+IFByaXZhY3kgPiBMb2NhdGlvbiBTZXJ2aWNlcy48L3A+XG5cdDxwPlN0ZXAgMi4gTWFrZSBzdXJlIHRoYXQgTG9jYXRpb24gU2VydmljZXMgaXMgb24uPC9wPlxuXHQ8cD5TdGVwIDMuIFNjcm9sbCBkb3duIHRvIGZpbmQgdGhlIGFwcC48L3A+XG5cdDxwPlN0ZXAgNC4gVGFwIHRoZSBhcHAgYW5kIHNlbGVjdCBhbiBvcHRpb246PC9wPlxuXHQ8dWw+XG5cdFx0PGxpPk5ldmVyOiBQcmV2ZW50cyBhY2Nlc3MgdG8gTG9jYXRpb24gU2VydmljZXMgaW5mb3JtYXRpb24uPC9saT5cblx0XHQ8bGk+QXNrIE5leHQgVGltZTogVGhpcyBhbGxvd3MgeW91IHRvIGNob29zZSBBbHdheXMgV2hpbGUgVXNpbmcgQXBwLCBBbGxvdyBPbmNlLCBvciBEb24ndCBBbGxvdy48L2xpPlxuXHRcdDxsaT5XaGlsZSBVc2luZyB0aGUgQXBwOiBBbGxvd3MgYWNjZXNzIHRvIExvY2F0aW9uIFNlcnZpY2VzIG9ubHkgd2hlbiB0aGUgYXBwIG9yIG9uZSBvZiBpdHMgZmVhdHVyZXMgaXMgdmlzaWJsZSBvbiBzY3JlZW4uIElmIGFuIGFwcCBpcyBzZXQgdG8gV2hpbGUgVXNpbmcgdGhlIEFwcCwgeW91IG1pZ2h0IHNlZSB5b3VyIHN0YXR1cyBiYXIgdHVybiBibHVlIHdpdGggYSBtZXNzYWdlIHRoYXQgYW4gYXBwIGlzIGFjdGl2ZWx5IHVzaW5nIHlvdXIgbG9jYXRpb24uPC9saT5cblx0XHQ8bGk+QWx3YXlzOiBBbGxvd3MgYWNjZXNzIHRvIHlvdXIgbG9jYXRpb24gZXZlbiB3aGVuIHRoZSBhcHAgaXMgaW4gdGhlIGJhY2tncm91bmQuPC9saT5cblx0PC91bD5cblx0PGgzPkRpZCB5b3UgdHVybiBvZmYgbG9jYXRpb24gb24geW91ciBkZXZpY2U8L2gzPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxDb21wbGV0ZT5ZZXMsIEkgZGlkPC9Db21wbGV0ZT5cblx0XHQ8Q29tcGxldGUgc3VjY2Vzcz17ZmFsc2V9Pk5vLCBJIGRpZG4ndDwvQ29tcGxldGU+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlfVxuPHNlY3Rpb24+XG5cdDxoMj5UdXJuIGxvY2FpdG9uIG9mZiBvbiBhbmQgQW5kcm9pZCBEZXZpY2U8L2gyPlxuXHQ8cD5TdGVwIDEuIEdvIHRvIFNldHRpbmdzID4gUHJpdmFjeSA+IExvY2F0aW9uIFNlcnZpY2VzLjwvcD5cblx0PHA+U3RlcCAyLiBNYWtlIHN1cmUgdGhhdCBMb2NhdGlvbiBTZXJ2aWNlcyBpcyBvbi48L3A+XG5cdDxwPlN0ZXAgMy4gU2Nyb2xsIGRvd24gdG8gZmluZCB0aGUgYXBwLjwvcD5cblx0PHA+U3RlcCA0LiBUYXAgdGhlIGFwcCBhbmQgc2VsZWN0IGFuIG9wdGlvbjo8L3A+XG5cdDx1bD5cblx0XHQ8bGk+TmV2ZXI6IFByZXZlbnRzIGFjY2VzcyB0byBMb2NhdGlvbiBTZXJ2aWNlcyBpbmZvcm1hdGlvbi48L2xpPlxuXHRcdDxsaT5Bc2sgTmV4dCBUaW1lOiBUaGlzIGFsbG93cyB5b3UgdG8gY2hvb3NlIEFsd2F5cyBXaGlsZSBVc2luZyBBcHAsIEFsbG93IE9uY2UsIG9yIERvbid0IEFsbG93LjwvbGk+XG5cdFx0PGxpPldoaWxlIFVzaW5nIHRoZSBBcHA6IEFsbG93cyBhY2Nlc3MgdG8gTG9jYXRpb24gU2VydmljZXMgb25seSB3aGVuIHRoZSBhcHAgb3Igb25lIG9mIGl0cyBmZWF0dXJlcyBpcyB2aXNpYmxlIG9uIHNjcmVlbi4gSWYgYW4gYXBwIGlzIHNldCB0byBXaGlsZSBVc2luZyB0aGUgQXBwLCB5b3UgbWlnaHQgc2VlIHlvdXIgc3RhdHVzIGJhciB0dXJuIGJsdWUgd2l0aCBhIG1lc3NhZ2UgdGhhdCBhbiBhcHAgaXMgYWN0aXZlbHkgdXNpbmcgeW91ciBsb2NhdGlvbi48L2xpPlxuXHRcdDxsaT5BbHdheXM6IEFsbG93cyBhY2Nlc3MgdG8geW91ciBsb2NhdGlvbiBldmVuIHdoZW4gdGhlIGFwcCBpcyBpbiB0aGUgYmFja2dyb3VuZC48L2xpPlxuXHQ8L3VsPlxuXHQ8aDM+RGlkIHlvdSB0dXJuIG9mZiBsb2NhdGlvbiBvbiB5b3VyIGRldmljZTwvaDM+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG5cdFx0PENvbXBsZXRlPlllcywgSSBkaWQ8L0NvbXBsZXRlPlxuXHRcdDxDb21wbGV0ZSBzdWNjZXNzPXtmYWxzZX0+Tm8sIEkgZGlkbid0PC9Db21wbGV0ZT5cblx0PC9kaXY+XG48L3NlY3Rpb24+XG57L2lmfVxuPEJhY2svPlxuPC9UcmFucz5cbjxzdHlsZT5cblx0c2VjdGlvbiB7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdH1cbiAgIC5idXR0b24taG9sZGVyIHtcblx0d2lkdGg6IDI3dnc7XG5cdGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuXHRleHBvcnQgbGV0IHNlZ21lbnQ7XG48L3NjcmlwdD5cblxuXG48c3R5bGU+XG5cdG5hdiB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG5cdFx0aGVpZ2h0OiA1MHB4O1xuXHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICMzMDM1Mzg7XG5cdFx0Lypib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsNjIsMCwwLjEpOyovXG5cdFx0Zm9udC13ZWlnaHQ6IDMwMDtcblx0XHRwYWRkaW5nOiAwIDFlbTtcblx0XHRwb3NpdGlvbjogc3RpY2t5O1xuICAgIFx0dG9wOiAwcHg7XG5cdFx0bGVmdDogMHB4O1xuXHRcdHotaW5kZXg6IDE7XG5cdH1cblx0dWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0bGlzdC1zdHlsZTogbm9uZTtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuXHRcdG1hcmdpbjogMDtcblx0XHRwYWRkaW5nOiAwO1xuXHRcdGNvbG9yOiAjYzdjN2M3O1xuXHR9XG5cdGltZyB7XG5cdFx0LypkaXNwbGF5OiBibG9jaztcblx0XHRmbG9hdDogbGVmdDsqL1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRtYXJnaW4tbGVmdDogMjVweDtcblx0fVxuXHRsaXtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdG1hcmdpbjogMHB4IDIwcHggMHB4IDIwcHg7XG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0fVxuXG5cdFthcmlhLWN1cnJlbnRdIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHR9XG5cblx0W2FyaWEtY3VycmVudF06OmFmdGVyIHtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0Y29udGVudDogJyc7XG5cdFx0d2lkdGg6IGNhbGMoMTAwJSAtIDFlbSk7XG5cdFx0aGVpZ2h0OiAycHg7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjojZTc0ZTQ1O1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdC8qYm90dG9tOiAtMXB4OyovXG5cdH1cblx0YSB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRwYWRkaW5nOiAxZW0gMC41ZW07XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdG1hcmdpbjogMmVtLCAwZW07XG5cblx0fVxuPC9zdHlsZT5cblxuPG5hdj5cblx0PGEgaHJlZj0nL2hvbWUnPjxpbWcgIHNyYz0nLi9NWURsb2dvX25hdi5wbmcnIGFsdD1cIk1pbmQgeW91ciBEYXRhIGxvZ29cIj48L2E+XG5cdDx1bCBpZD1cIm5hdmlnYXRpb25cIj5cblx0XHQ8bGk+PGEgYXJpYS1jdXJyZW50PVwie3NlZ21lbnQgPT09IHVuZGVmaW5lZCA/ICdwYWdlJyA6IHVuZGVmaW5lZH1cIiBocmVmPVwiLlwiPmhvbWU8L2E+PC9saT5cblx0XHQ8bGk+PGEgYXJpYS1jdXJyZW50PVwie3NlZ21lbnQgPT09ICdxdWl6JyA/ICdwYWdlJyA6IHVuZGVmaW5lZH1cIiBocmVmPVwicXVpelwiPnF1aXo8L2E+PC9saT5cblx0XHQ8bGk+PGEgYXJpYS1jdXJyZW50PVwie3NlZ21lbnQgPT09ICdhYm91dCcgPyAncGFnZScgOiB1bmRlZmluZWR9XCIgaHJlZj1cImFib3V0XCI+YWJvdXQ8L2E+PC9saT5cblxuXHRcdDwhLS0gZm9yIHRoZSBibG9nIGxpbmssIHdlJ3JlIHVzaW5nIHJlbD1wcmVmZXRjaCBzbyB0aGF0IFNhcHBlciBwcmVmZXRjaGVzXG5cdFx0ICAgICB0aGUgYmxvZyBkYXRhIHdoZW4gd2UgaG92ZXIgb3ZlciB0aGUgbGluayBvciB0YXAgaXQgb24gYSB0b3VjaHNjcmVlbiAtLT5cblx0PCEtLVx0PGxpPjxhIHJlbD1wcmVmZXRjaCBhcmlhLWN1cnJlbnQ9XCJ7c2VnbWVudCA9PT0gJ2Jsb2cnID8gJ3BhZ2UnIDogdW5kZWZpbmVkfVwiIGhyZWY9XCJibG9nXCI+YmxvZzwvYT48L2xpPiAtLT5cblx0PC91bD5cbjwvbmF2PlxuIiwiPHNjcmlwdD5cbiAgICAvL3RvdGFsIHRpbWUgZm9yIGNvdW50ZG93blxuaW1wb3J0IHsgdHdlZW5lZCB9IGZyb20gJ3N2ZWx0ZS9tb3Rpb24nO1xuaW1wb3J0IHsgY3ViaWNPdXQgfSBmcm9tICdzdmVsdGUvZWFzaW5nJztcbmltcG9ydCBDaGVjayBmcm9tICcuL0NoZWNrLnN2ZWx0ZSc7XG5pbXBvcnQgeyBxdWl6U3RlcHMsIHRpbWVyQWN0aXZlLCBwcm9ncmVzcywgY291bnQgfSBmcm9tICcuLi9zdG9yZS5qcyc7XG5pbXBvcnQgeyBhZnRlclVwZGF0ZSB9IGZyb20gJ3N2ZWx0ZSc7XG4vL2NvbnNvbGUubG9nKCRxdWl6U3RlcHMpO1xubGV0IHN0YXJ0PSAzMCAqIDYwO1xubGV0IHRpbWVyID0gdHdlZW5lZChzdGFydCk7XG4gIHNldEludGVydmFsKCgpID0+IHtcbiAgICBpZiAoJHRpbWVyID4gMCAmJiAkdGltZXJBY3RpdmUpICR0aW1lci0tO1xuICB9LCAxMDAwKTtcblxuICAkOiBtaW51dGVzID0gTWF0aC5mbG9vcigkdGltZXIgLyA2MCk7XG4gICQ6IG1pbm5hbWUgPSBtaW51dGVzID4gMSA/IFwibWluc1wiIDogXCJtaW5cIjtcbiAgJDogc2Vjb25kcyA9IE1hdGguZmxvb3IoJHRpbWVyIC0gbWludXRlcyAqIDYwKS50b0xvY2FsZVN0cmluZygnZW4nLCB7bWluaW11bUludGVnZXJEaWdpdHM6Mix1c2VHcm91cGluZzpmYWxzZX0pXG5cbmxldCBiZzEgPSB0cnVlO1xubGV0IGJnMiA9IGZhbHNlO1xubGV0IGJnMyA9IGZhbHNlO1xuXG5hZnRlclVwZGF0ZSgoKSA9PntcbiAgICBpZigkcXVpelN0ZXBzWyRjb3VudF0uaWQgPiAyKXtiZzEgPSBmYWxzZTsgYmcyID0gdHJ1ZTt9XG57aWYoJHF1aXpTdGVwc1skY291bnRdLmlkID4gNyl7YmcyPSBmYWxzZTsgYmczPSB0cnVlO31cbn19KVxuPC9zY3JpcHQ+XG48YXNpZGUgY2xhc3M6YmcxIGNsYXNzOmJnMiBjbGFzczpiZzM+XG4gICAgPHNlY3Rpb24gaWQ9XCJ0aW1lclwiPlxuICAgICAgIDxkaXY+VGltZSBSZW1haW5pbmc6PC9kaXY+IDxkaXYgaWQ9J21pbnV0ZXMnIHN0eWxlPSd3aGl0ZS1zcGFjZTpub3dyYXA7Jz57bWludXRlc306e3NlY29uZHN9PC9kaXY+IFxuICAgICAgIDxkaXYgaWQ9J2NoYWxsZW5nZS1uYW1lJz5cbiAgICAgICAgPHNsb3Q+XG5cbiAgICAgICAgPC9zbG90PlxuICAgIDwvZGl2PlxuICAgIDwvc2VjdGlvbj5cbiAgICA8ZGl2IGlkPVwicHJvZ3Jlc3MtaG9sZGVyXCI+XG4gICAgPHNlY3Rpb24gY2xhc3M9J2RvbmUnPlxuICAgICAgICB7I2VhY2ggJHF1aXpTdGVwcyBhcyBjaGFsbGVuZ2V9XG4gICAgICAgICAgICB7I2lmIGNoYWxsZW5nZS50eXBlICE9ICdjaGVja3BvaW50J31cbiAgICAgICAgPENoZWNrIGFjdGl2ZT17Y2hhbGxlbmdlLnN0YXR1c30vPiBcbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgIHsvZWFjaH0gICAgXG4gICAgPC9zZWN0aW9uPlxuICAgIDxwcm9ncmVzcyB2YWx1ZT17JHByb2dyZXNzfSBtYXg9XCIxMDBcIiBjbGFzczpiZzEgY2xhc3M6YmcyIGNsYXNzOmJnMz48L3Byb2dyZXNzPlxuICAgIDwvZGl2PlxuPC9hc2lkZT5cbjxzdHlsZT5cbiAgICBhc2lkZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgd2lkdGg6IDMzLjc1dnc7IFxuICAgICAgICBoZWlnaHQ6IDg2dmg7IFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzg0MjREO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgICAgICBib3JkZXI6IDBweDtcbiAgICAgICAgbWFyZ2luOiAxMnB4IDBweCA0MHB4IDIwcHg7XG4gICAgICAgIG1pbi13aWR0aDogMzN2dztcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgdG9wOiA1MHB4O1xuICAgIH1cbiAgICAjdGltZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyB3cmFwOyBcbiAgICAgICAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAzMHB4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG4gICAgI3JlbWFpbmluZyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgcGFkZGluZzogMjBweCAwcHggMjBweCAwcHg7XG5cbiAgICB9XG4gICAgI21pbnV0ZXMge1xuICAgICAgICBjb2xvcjp3aGl0ZTtcbiAgICAgICAgYmFja2dyb3VuZDogIzBGMjAzMztcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICBtYXgtd2lkdGg6IDE1MHB4O1xuICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICBtYXJnaW46IDhweCAyMHB4OyBcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgICAgICBwYWRkaW5nOiAycHggMzBweDsgXG5cbiAgICB9XG4gICAgLmRvbmUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIHdpZHRoOiA5NSU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHhcbiAgICB9XG4gICAgLmxvY2sge1xuICAgICAgICBcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKC4uL2NoZWNrZWQuc3ZnKSBuby1yZXBlYXQ7XG4gICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICBtYXJnaW46IDVweDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuXG4gICAgfVxuICAgIC5lbGxpcHNlIHtcbiAgICAgICAgd2lkdGg6M3B4O1xuICAgICAgICBoZWlnaHQ6M3B4O1xuICAgICAgICBtYXJnaW46IDNweDtcbiAgICB9XG4gICAgcHJvZ3Jlc3N7XG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcblx0ICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHdpZHRoOiA4NiU7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgYm90dG9tOiA0Ljd2aDtcbiAgICAgICAgaGVpZ2h0OiA2cHg7XG4gICAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgICBtYXJnaW4tbGVmdDogMzFweDtcbiAgICB9XG4gICAgcHJvZ3Jlc3M6Oi13ZWJraXQtcHJvZ3Jlc3MtYmFyIHtcblx0ICAgIGJhY2tncm91bmQ6ICMzMDM1Mzg7XG5cdH1cbiAgICBwcm9ncmVzcy5iZzE6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjNzRlZjdiO1xuICAgIH1cbiAgICBwcm9ncmVzcy5iZzI6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjRjFDMzMwO1xuICAgIH1cbiAgICBwcm9ncmVzcy5iZzM6Oi13ZWJraXQtcHJvZ3Jlc3MtdmFsdWUge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjRTk0MDQwO1xuICAgIH1cbiAgICAuYmcxIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9iZy1ncm91cDEucG5nJyk7XG4gICAgICAgIGJhY2tncm91bmQtYmxlbmQtbW9kZTogbm9ybWFsO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XG4gICAgICAgIGNvbG9yOiAjNzRlZjdiO1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuICAgIC5iZzIge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2JnLWdyb3VwMi5wbmcnKTtcbiAgICAgICAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcbiAgICAgICAgY29sb3I6ICNGMUMzMzA7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICB9XG4gICAgLmJnMyB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vYmctZ3JvdXAzLnBuZycpO1xuICAgICAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xuICAgICAgICBjb2xvcjogI0U5NDA0MDtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgIH1cbiAgICAjcHJvZ3Jlc3MtaG9sZGVyIHtcbiAgICAgICAgd2lkdGg6IDgwJTtcbiAgICB9XG4gICAgI2NoYWxsZW5nZS1uYW1lIHtcbiAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICAgIFxuPC9zdHlsZT5cbjwhLS1cblxuICAgICAgICBcbjxkaXYgY2xhc3M9J2RvbmUnPlxuICAgIHtpZiBhY3RpdmV9XG4gICAgPGltZyBzcmM9Jy4vbG9jay1hY3RpdmUuc3ZnJyBhbHQ9XCJjb21wbGV0ZWRcIiBjbGFzcz0nYWN0aXZlIGxvY2snIC8+XG4gICAgXG4gICAgICAgIDxpbWcgc3JjPScuL0VsbGlwc2UtYWN0aXZlLnBuZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2VsbGlwc2UgYWN0aXZlJyAvPlxuICAgICAgICA8aW1nIHNyYz0nLi9FbGxpcHNlLWluYWN0aXZlLnBuZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2VsbGlwc2UgaW5hY3RpdmUnIC8+XG48L2Rpdj5cbjwvZGl2Pi0tPiIsIjxzY3JpcHQ+XG5pbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzLCBwcm9ncmVzcyB9IGZyb20gJy4uL3N0b3JlLmpzJ1xubGV0IHAgPSA3LjY7XG5mdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgaWYoJGNvdW50ID49IDEgJiYgJHN0ZXAgPT0gMCkge1xuICAgICAgICBhbGVydCgnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGdvIGJhY2s/JylcbiAgICAgICAgLy8kcXVpelN0ZXBzWyRjb3VudF0uY29tcGxldGUgPSB0cnVlO1xuICAgICAgICBjb3VudC51cGRhdGUobiA9PiBuIC0gMSlcbiAgICAgICAgJHF1aXpTdGVwc1skY291bnQrMV0uc3RhdHVzID0gMDtcbiAgICAgICAgaWYgKCRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgIT0gMikge1xuICAgICAgICAgICAgJHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDE7XG4gICAgICAgIH1cbiAgICAgICAgc3RlcC5zZXQoJHF1aXpTdGVwc1skY291bnRdLnN0ZXBzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBzdGVwLnVwZGF0ZShuID0+IG4gLSAxKVxuICAgIH1cbn1cbjwvc2NyaXB0PlxueyNpZiAkY291bnQgPj0gMX1cbjxidXR0b24gb246Y2xpY2s9eygpID0+IHtnb0JhY2soKVxuICAgIHByb2dyZXNzLnVwZGF0ZShuID0+IG4tPXApXG59fT5cbiAgICBCYWNrXG48L2J1dHRvbj5cbnsvaWZ9XG48c3R5bGU+XG4gICAgYnV0dG9uIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcGFkZGluZzogMTBweCAyMHB4O1xuXHRcdFx0bWFyZ2luOiA4MHB4IDEwcHggMTBweCAxMHB4O1xuXHRcdFx0Ym9yZGVyOiBibGFjayBzb2xpZCAwcHg7XG5cdFx0XHRib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgICAgICAgIFxuICAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cbmltcG9ydCB7IGNvdW50LCBzdGVwLCBxdWl6U3RlcHMsIHByb2dyZXNzIH0gZnJvbSAnLi4vc3RvcmUuanMnXG5leHBvcnQgbGV0IHN1Y2Nlc3MgPSB0cnVlO1xuZXhwb3J0IGxldCBwID0gNy42O1xuLy9zZXRzIGN1cnJlbnQgaWNvbiBmb3Igc2lkZWJhclxuZnVuY3Rpb24gaW5jcmVtZW50KCkge1xuICAgICAgICAkcXVpelN0ZXBzWyRjb3VudF0uY29tcGxldGUgPSB0cnVlO1xuICAgICAgICAkcXVpelN0ZXBzWyRjb3VudF0uc3RhdHVzID0gMjtcbiAgICAgICAgY291bnQudXBkYXRlKG4gPT4gbiArIDEpXG4gICAgICAgIHByb2dyZXNzLnVwZGF0ZShuID0+IG4rPXApXG4gICAgICAgIHN0ZXAuc2V0KDApO1xufVxuZnVuY3Rpb24gaW5jb21wbGV0ZSgpIHtcbiAgICAgICAgJHF1aXpTdGVwc1skY291bnRdLmNvbXBsZXRlID0gZmFsc2U7XG4gICAgICAgICRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAwO1xuICAgICAgICBjb3VudC51cGRhdGUobiA9PiBuICsgMSlcbiAgICAgICAgcHJvZ3Jlc3MudXBkYXRlKG4gPT4gbis9cClcbiAgICAgICAgc3RlcC5zZXQoMCk7XG59XG48L3NjcmlwdD5cbnsjaWYgc3VjY2Vzc31cbiAgICA8YnV0dG9uIG9uOmNsaWNrPXtpbmNyZW1lbnR9PlxuICAgICAgICA8c2xvdD5cblxuICAgICAgICA8L3Nsb3Q+XG4gICAgPC9idXR0b24+XG57OmVsc2V9XG4gICAgPGJ1dHRvbiBvbjpjbGljaz17aW5jb21wbGV0ZX0+XG4gICAgICAgIDxzbG90PlxuXG4gICAgICAgIDwvc2xvdD5cbiAgICA8L2J1dHRvbj5cbnsvaWZ9XG4gICAgICAgXG48c3R5bGU+XG4gICAgYnV0dG9uIHtcbiAgICAgICAgcGFkZGluZzogMTBweCAyMHB4O1xuXHRcdFx0bWFyZ2luOiAxMHB4O1xuXHRcdFx0Ym9yZGVyOiBibGFjayBzb2xpZCAwcHg7XG5cdFx0XHRib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgfVxuPC9zdHlsZT5cblxuIiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgeyBzdGVwLCBwcm9ncmVzcyB9IGZyb20gJy4uL3N0b3JlLmpzJ1xuICAgIGV4cG9ydCBsZXQgcSA9MTtcbiAgICBleHBvcnQgbGV0IHAgPSA3LjY7XG4gICBjb25zdCBpbmNyZWFzZSA9ICgpID0+IHtcbiAgICAgICBzdGVwLnVwZGF0ZShuID0+IG4rPSBxKTtcbiAgICAgIHByb2dyZXNzLnVwZGF0ZShuID0+IG4gKz0gcCl9O1xuPC9zY3JpcHQ+XG48YnV0dG9uIG9uOmNsaWNrPXtpbmNyZWFzZX0+XG4gICAgPHNsb3Q+XG5cbiAgICA8L3Nsb3Q+XG48L2J1dHRvbj5cblxuPHN0eWxlPlxuICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdFx0XHRtYXJnaW46IDEwcHg7XG5cdFx0XHRib3JkZXI6IGJsYWNrIHNvbGlkIDBweDtcblx0XHRcdGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICB9XG48L3N0eWxlPlxuIiwiPHNjcmlwdD5cblxuICAgIGV4cG9ydCBsZXQgYWN0aXZlO1xuICAgIGFjdGl2ZSA9MDtcblxuPC9zY3JpcHQ+XG57I2lmIGFjdGl2ZSA8IDEgfVxuICAgIDxpbWcgc3JjPScuL2JsYW5rX2NpcmNsZS5zdmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdhY3RpdmUgbG9jaycgLz5cbiAgICBcbns6ZWxzZSBpZiBhY3RpdmUgPiAxIH1cbiAgICA8aW1nIHNyYz0nLi9jaGVja2VkLnN2ZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2FjdGl2ZSBsb2NrJyAvPlxuICBcbns6ZWxzZX1cbiAgICA8aW1nIHNyYz0nLi91bl9jaGVja2VkLnN2ZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2FjdGl2ZSBsb2NrJyAvPlxuICAgIFxuey9pZn1cbiA8c3R5bGU+XG4gICAgIC5sb2NrIHtcbiAgICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgfVxuIDwvc3R5bGU+IiwiPHNjcmlwdD5cblx0aW1wb3J0IHsgb25Nb3VudCwgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcblx0Y29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblx0aW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG5cdGltcG9ydCBDb21wbGV0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBsZXRlLnN2ZWx0ZScgLy9zZXQgc3VjY2Vzcz17ZmFsc2V9IGZvciBmYWlsdXJlXG5cdGltcG9ydCBCdG4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdG4uc3ZlbHRlJyAvL3NldCA8TmV4dCBxPXsyfT4gdG8gc2tpcCBtdWx0aXBsZSBzdGVwc1xuXHRpbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG5cdGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cblxuXHQvL3NldHMgYXNpZGUgaWNvbiB0byBpbiBwcm9ncmVzcyB2aWEgc3RvcmVcbiAgICBvbk1vdW50KGFzeW5jKCkgPT4geyRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxfSk7XG5cblx0bGV0IGN1cnJlbnQgPSAnaW5pdGlhbCc7XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkludGVybmV0IG9mIHRoaW5ncyggQWxleGEsIEhvbWUgZGV2aWNlcyk8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxUcmFucz5cbjxzZWN0aW9uIGNsYXNzPSdyZXZpZXcnPlxuICAgIHsjZWFjaCAkcXVpelN0ZXBzIGFzIHtuYW1lLCBjb21wbGV0ZX0sIGl9XG4gICAgeyNpZiBpIDwgMTJ9XG4gICAgPHAgY2xhc3M6Y29tcGxldGU+e25hbWV9PC9wPlxuICAgIHsvaWZ9XG4gICAgey9lYWNofVxuPC9zZWN0aW9uPlxuXG48QmFjay8+XG48L1RyYW5zPlxuPHN0eWxlPlxuICAgIC5yZXZpZXd7XG4gICAgICAgIHdpZHRoOjEwMCU7XG4gICAgfVxuICAgLmJ1dHRvbi1ob2xkZXIge1xuXHR3aWR0aDogMjd2dztcblx0ZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICB9XG4gICAuY29tcGxldGV7XG4gICAgYmFja2dyb3VuZC1jb2xvciA6IzM4NDI0RDtcbiAgIH1cbiAgIHAge1xuICAgICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XG4gICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IG9uTW91bnQsIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuXHRpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnIC8vc2V0IHN1Y2Nlc3M9e2ZhbHNlfSBmb3IgZmFpbHVyZVxuXHRpbXBvcnQgQnRuIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQnRuLnN2ZWx0ZScgLy9zZXQgPE5leHQgcT17Mn0+IHRvIHNraXAgbXVsdGlwbGUgc3RlcHNcblx0aW1wb3J0IHsgY291bnQsIHN0ZXAsIHF1aXpTdGVwcyB9IGZyb20gJy4uLy4uL3N0b3JlLmpzJ1xuXHRpbXBvcnQgQmFjayBmcm9tICcuLi8uLi9jb21wb25lbnRzL0JhY2suc3ZlbHRlJ1xuXG5cdC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuICAgIG9uTW91bnQoYXN5bmMoKSA9PiB7JHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDF9KTtcblxuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5Eb21haW4gTmFtZSBTZXJ2aWNlPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48VHJhbnM+XG57I2lmICRzdGVwPT0wfVxuPHNlY3Rpb24+XG5cdDxoMj5Eb21haW4gTmFtZSBTZXJ2ZXIgKEROUyk6IFF1YWQ5XG5cdDwvaDI+IFxuXHQ8cD5FdmVyeXRoaW5nIG9uIHRoZSBJbnRlcm5ldCwgaW5jbHVkaW5nIHdlYnNpdGVzLCBsaXZlIGF0IGEgbnVtZXJpY2FsIElQIGFkZHJlc3MuIFRoZSBEb21haW4gTmFtZSBTeXN0ZW0sIG9yIEROUywgdHJhbnNsYXRlcyB0aGVzZSBudW1lcmljYWwgSVAgYWRkcmVzc2VzIGludG8gaHVtYW4tcmVhZGFibGUgZG9tYWluIG5hbWVzIHRoYXQgd2UgYWxsIGtub3cgYW5kIHJlbWVtYmVyIChsaWtlIG1pbmR5b3VyZGF0YS5vcmcpLiBJZiB5b3VyIEROUyBzZXR0aW5ncyBhcmUgbm90IHdvcmtpbmcgY29ycmVjdGx5LCBvciB5b3XigJlyZSBzdGlsbCB1c2luZyBkZWZhdWx0cywgeW91IG1heSBiZSBhdCByaXNrIGZvciBjeWJlcmNyaW1lIGFuZCBwZXJmb3JtYW5jZSBpc3N1ZXMuIEFuZCwgdGhlIHdlYnNpdGVzIHlvdSB2aXNpdCBtYXkgYmUgY29sbGVjdGVkIGFuZCBzaGFyZWQgYnkgd2hhdGV2ZXIgZW50aXR5IG93bnMgdGhlIEROUyBzZXJ2aWNlLjwvcD5cblx0PEJ0bj5Db250aW51ZTwvQnRuPlxuPC9zZWN0aW9uPlxuezplbHNlfVxuPHNlY3Rpb24+XG5cdDxoMj5TZXR1cCBRdWFkOTwvaDI+XG5cdDxwPlF1YWQ5IGlzIGEgZnJlZSwgbm90LWZvci1wcm9maXQgc2VjdXJpdHkgc29sdXRpb24gdGhhdCB1c2VzIHRoZSBETlMgdG8gcHJvdGVjdCB5b3VyIHN5c3RlbSBhZ2FpbnN0IHRoZSBtb3N0IGNvbW1vbiBjeWJlciB0aHJlYXRzLiBOb3Qgb25seSBkb2VzIGl0ICBwcmVzZXJ2ZSBhbmQgcHJvdGVjdCB5b3VyIHByaXZhY3ksIGl0IHdpbGwgYWxzbyBpbXByb3ZlIHlvdXIgc3lzdGVt4oCZcyBwZXJmb3JtYW5jZSEgSXTigJlzIGxpa2UgYSBwYWlubGVzcyBpbW11bml6YXRpb24gZm9yIHlvdXIgY29tcHV0ZXIgYW5kIGRldmljZXMuPC9wPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxDb21wbGV0ZT5TZXQgaXQgdXA8L0NvbXBsZXRlPlxuXHRcdDxDb21wbGV0ZT5TZXR1cCBDb21wbGV0ZTwvQ29tcGxldGU+XG5cdFx0PENvbXBsZXRlIHN1Y2Nlc3M9e2ZhbHNlfT5Eb24ndCBjYXJlLCBsZXQgdGhlbiBzbm9vcDwvQ29tcGxldGU+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuey9pZn1cbjxCYWNrLz5cbjwvVHJhbnM+XG48c3R5bGU+XG4gICAuYnV0dG9uLWhvbGRlciB7XG5cdHdpZHRoOiAyN3Z3O1xuXHRkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgIH1cbiAgIGJ1dHRvbiB7XG5cdCAgIHBhZGRpbmc6IDEwcHggMjBweDtcblx0ICAgbWFyZ2luOiAxMHB4O1xuXHQgICBib3JkZXI6IGJsYWNrIHNvbGlkIDBweDtcblx0ICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuLy8gT3BlcmEgOC4wK1xudmFyIGlzT3BlcmEgPSAoISF3aW5kb3cub3ByICYmICEhb3ByLmFkZG9ucykgfHwgISF3aW5kb3cub3BlcmEgfHwgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCcgT1BSLycpID49IDAgPyB0cnVlIDogZmFsc2U7XG5cbi8vIEZpcmVmb3ggMS4wK1xudmFyIGlzRmlyZWZveCA9IHR5cGVvZiBJbnN0YWxsVHJpZ2dlciAhPT0gJ3VuZGVmaW5lZCcgPyB0cnVlIDogZmFsc2U7XG5cbi8vIFNhZmFyaSAzLjArIFwiW29iamVjdCBIVE1MRWxlbWVudENvbnN0cnVjdG9yXVwiIFxudmFyIGlzU2FmYXJpID0gL2NvbnN0cnVjdG9yL2kudGVzdCh3aW5kb3cuSFRNTEVsZW1lbnQpIHx8IChmdW5jdGlvbiAocCkgeyByZXR1cm4gcC50b1N0cmluZygpID09PSBcIltvYmplY3QgU2FmYXJpUmVtb3RlTm90aWZpY2F0aW9uXVwiOyB9KSghd2luZG93WydzYWZhcmknXSB8fCAodHlwZW9mIHNhZmFyaSAhPT0gJ3VuZGVmaW5lZCcgJiYgc2FmYXJpLnB1c2hOb3RpZmljYXRpb24pKSA/IHRydWUgOiBmYWxzZTtcblxuLy8gSW50ZXJuZXQgRXhwbG9yZXIgNi0xMVxudmFyIGlzSUUgPSAvKkBjY19vbiFAKi9mYWxzZSB8fCAhIWRvY3VtZW50LmRvY3VtZW50TW9kZSA/IHRydWUgOiBmYWxzZTtcblxuLy8gRWRnZSAyMCtcbnZhciBpc0VkZ2UgPSAhaXNJRSAmJiAhIXdpbmRvdy5TdHlsZU1lZGlhID8gdHJ1ZSA6IGZhbHNlO1xuXG4vLyBDaHJvbWUgMSAtIDc5XG52YXIgaXNDaHJvbWUgPSAhIXdpbmRvdy5jaHJvbWUgJiYgKCEhd2luZG93LmNocm9tZS53ZWJzdG9yZSB8fCAhIXdpbmRvdy5jaHJvbWUucnVudGltZSkgPyB0cnVlIDogZmFsc2U7XG5cbi8vIEVkZ2UgKGJhc2VkIG9uIGNocm9taXVtKSBkZXRlY3Rpb25cbnZhciBpc0VkZ2VDaHJvbWl1bSA9IGlzQ2hyb21lICYmIChuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoXCJFZGdcIikgIT0gLTEpID8gdHJ1ZSA6IGZhbHNlO1xuXG4vLyBCbGluayBlbmdpbmUgZGV0ZWN0aW9uXG52YXIgaXNCbGluayA9IChpc0Nocm9tZSB8fCBpc09wZXJhKSAmJiAhIXdpbmRvdy5DU1MgPyB0cnVlIDogZmFsc2U7XG5cblxubGV0IGJyb3dzZXIgPSAnWW91ciBicm93c2VyIGlzOic7XG5pZiAoaXNPcGVyYSl7XG4gICAgYnJvd3Nlcis9IFwiIE9wZXJhXCJcbn0gZWxzZSBpZiAoaXNGaXJlZm94KSB7XG4gICAgYnJvd3Nlcis9IFwiIEZpcmVmb3hcIlxufWVsc2UgaWYgKGlzU2FmYXJpKSB7XG4gICAgYnJvd3Nlcis9IFwiIFNhZmFyaVwiXG59ZWxzZSBpZiAoaXNJRSkge1xuICAgIGJyb3dzZXIrPSBcIiBJbnRlcm5ldCBFeHBsb3JlclwiXG59ZWxzZSBpZiAoaXNFZGdlKSB7XG4gICAgYnJvd3Nlcis9IFwiIEVkZ2VcIlxufWVsc2UgaWYgKGlzQ2hyb21lKSB7XG4gICAgYnJvd3Nlcis9IFwiIENocm9tZVwiXG59ZWxzZSBpZiAoaXNFZGdlQ2hyb21pdW0pIHtcbiAgICBicm93c2VyKz0gXCIgRWRnZSBDaHJvbWl1bVwiXG59IGVsc2Uge1xuICAgIC8vYnJvd3Nlcis9IFwiIEJsaW5rXCJcbn1cbjwvc2NyaXB0PlxuPHA+PHN0cm9uZz57YnJvd3Nlcn08L3N0cm9uZz48L3A+XG48cD48L3A+XG57I2lmIGlzT3BlcmF9IFxuXHRPcGVyYSBpbnN0cnVjdGlvbnNcbns6ZWxzZSBpZiBpc0ZpcmVmb3h9IFxuXHQ8b2w+XG4gICAgICAgIDxsaT5JbiBGaXJlZm94LCBjbGljayBUb29scyA+IE9wdGlvbnMgPiBQcml2YWN5PC9saT5cbiAgICAgICAgPGxpPlNlbGVjdCBcIlVzZSBjdXN0b20gc2V0dGluZ3MgZm9yIGhpc3RvcnlcIiBpbiB0aGUgZHJvcC1kb3duIG1lbnUgYXQgdGhlIHRvcCBvZiB0aGUgZGlhbG9nIGJveDwvbGk+IFxuICAgICAgICA8bGk+Q2hlY2sgXCJDbGVhciBoaXN0b3J5IHdoZW4gRmlyZWZveCBjbG9zZXNcIiA8L2xpPlxuICAgICAgICA8bGk+Q2xpY2sgdGhlIFNldHRpbmdzIGJ1dHRvbiA8L2xpPlxuICAgICAgICA8bGk+SW4gdGhlIFNldHRpbmdzIGZvciBDbGVhcmluZyBIaXN0b3J5IGRpYWxvZywgY2hlY2sgdGhlIG9wdGlvbnMgeW91IHdhbnQgdG8gZXJhc2Ugb24gZXhpdCBhbmQgY2xpY2sgT0s8L2xpPlxuICAgIDwvb2w+XG57OmVsc2UgaWYgaXNTYWZhcmkgfVxuICAgIDxvbD5cbiAgICAgICAgPGxpPkNsaWNrIHRoZSB3cmVuY2ggaWNvbiBpbiB0aGUgdG9wLXJpZ2h0IGNvcm5lciBvZiB0aGUgYnJvd3NlciB3aW5kb3cgYW5kIFxuICAgICAgICA8bGk+Q2hvb3NlIE9wdGlvbnMgPiBVbmRlciB0aGUgSG9vZCA+IENvbnRlbnQgU2V0dGluZ3MgPiBDb29raWVzLjwvbGk+IFxuICAgICAgICA8bGk+QmxvY2sgYWxsIHRoaXJkLXBhcnR5IGNvb2tpZXMgb3IgYWxsIHRyYWNraW5nIGNvb2tpZXM8L2xpPlxuICAgICAgICA8bGk+QW5vdGhlciBvcHRpb24gaW4gdGhpcyBkaWFsb2cgbGV0cyB5b3UgZGVsZXRlIGFsbCBjb29raWVzIGFuZCBvdGhlciBzaXRlIGRhdGEgYXV0b21hdGljYWxseSB3aGVuIHlvdSBjbG9zZSB0aGUgYnJvd3Nlci48L2xpPlxuICAgIDwvb2w+XG57OmVsc2UgaWYgaXNJRX0gXG5cdElFIGluc3RydWN0aW9uc1xuezplbHNlIGlmIGlzRWRnZSB9XG5cdEVkZ2UgaW5zcnVjdGlvbnNcbns6ZWxzZSBpZiBpc0Nocm9tZSB9XG5cdDxvbD5cbiAgICAgICAgPGxpPkNsaWNrIHRoZSB3cmVuY2ggaWNvbiBpbiB0aGUgdG9wLXJpZ2h0IGNvcm5lciBvZiB0aGUgYnJvd3NlciB3aW5kb3cgYW5kIFxuICAgICAgICA8bGk+Q2hvb3NlIE9wdGlvbnMgPiBVbmRlciB0aGUgSG9vZCA+IENvbnRlbnQgU2V0dGluZ3MgPiBDb29raWVzLjwvbGk+IFxuICAgICAgICA8bGk+QmxvY2sgYWxsIHRoaXJkLXBhcnR5IGNvb2tpZXMgb3IgYWxsIHRyYWNraW5nIGNvb2tpZXM8L2xpPlxuICAgICAgICA8bGk+QW5vdGhlciBvcHRpb24gaW4gdGhpcyBkaWFsb2cgbGV0cyB5b3UgZGVsZXRlIGFsbCBjb29raWVzIGFuZCBvdGhlciBzaXRlIGRhdGEgYXV0b21hdGljYWxseSB3aGVuIHlvdSBjbG9zZSB0aGUgYnJvd3Nlci48L2xpPlxuICAgIDwvb2w+XG57OmVsc2UgaWYgaXNFZGdlQ2hyb21pdW19XG5cdEVkZ2UgQ2hyb21pdW0gaW5zdHJ1Y3Rpb25zXG57OmVsc2V9IFxuXHRTb21lIG90aGVyIGluc3RydWN0aW9uc1xuey9pZn1cbjxwPjwvcD5cbjxzdHlsZT5cbiAgICBzdHJvbmd7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICB9XG4gICAgXG48L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IG9uTW91bnQsIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuXHRpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnIC8vc2V0IHN1Y2Nlc3M9e2ZhbHNlfSBmb3IgZmFpbHVyZVxuXHRpbXBvcnQgQnRuIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQnRuLnN2ZWx0ZScgLy9zZXQgPE5leHQgcT17Mn0+IHRvIHNraXAgbXVsdGlwbGUgc3RlcHNcblx0aW1wb3J0IHsgY291bnQsIHN0ZXAsIHF1aXpTdGVwcyB9IGZyb20gJy4uLy4uL3N0b3JlLmpzJ1xuXHRpbXBvcnQgQmFjayBmcm9tICcuLi8uLi9jb21wb25lbnRzL0JhY2suc3ZlbHRlJ1xuXG5cdC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuXHRvbk1vdW50KGFzeW5jKCkgPT4geyRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxO1xuXHRcdH0pO1xuXG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkxvY2F0aW9uIFRyYWNraW5nPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48VHJhbnM+XG57I2lmICRzdGVwPT0wfVxuPHNlY3Rpb24+XG5cdDxoMj5Mb2NhdGlvbiBUcmFja2luZzwvaDI+IFxuXHRcdDxwPlBlcnZhc2l2ZSB0cmFja2luZyBvZiBsb2NhdGlvbiBhdCB0aGUgdmVyeSBsZWFzdCByaXNrcyBwdXR0aW5nIHlvdSBhdCBhIGRpc2FkdmFudGFnZSBhcyBhIGNvbnN1bWVyLiBDZXJ0YWlubHkgaWYgeW91IGxpdmUgc29tZXdoZXJlIHdpdGhvdXQgYSBwcm9wZXIgcmVndWxhdG9yeSBmcmFtZXdvcmsgZm9yIHByaXZhY3kuIEl04oCZcyBhbHNvIHdvcnRoIGJlYXJpbmcgaW4gbWluZCBob3cgbGF4IHRlY2ggZ2lhbnRzIGNhbiBiZSB3aGVyZSBsb2NhdGlvbiBwcml2YWN5IGlzIGNvbmNlcm5lZCDigJQgd2hldGhlciBpdOKAmXMgVWJlcuKAmXMgaW5mYW1vdXMg4oCYZ29kIHZpZXfigJkgdG9vbCBvciBTbmFwY2hhdCBsZWFraW5nIHNjaG9vbGtpZHPigJkgbG9jYXRpb24gb3IgU3RyYXZhIGFjY2lkZW50YWxseSByZXZlYWxpbmcgdGhlIGxvY2F0aW9ucyBvZiBtaWxpdGFyeSBiYXNlcy4gVGhlaXIgcmVjb3JkIGlzIHByZXR0eSB0ZXJyaWJsZS48L3A+XHRcblx0PGgzPldoYXQgbW9iaWxlIGRldmljZSBkbyB5b3UgdXNlPzwvaDM+XG5cdFx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHRcdDxCdG4+aU9TPC9CdG4+XG5cdFx0XHQ8QnRuIG49ezJ9PkFuZHJvaWQ8L0J0bj5cblx0XHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbns6ZWxzZSBpZiAkc3RlcD09MX1cbjxzZWN0aW9uPlxuXHQ8aDI+VHVybiBsb2NhaXRvbiBvZmYgb24gSU9TIGRldmljZTwvaDI+XG5cdDxwPlN0ZXAgMS4gR28gdG8gU2V0dGluZ3MgPiBQcml2YWN5ID4gTG9jYXRpb24gU2VydmljZXMuPC9wPlxuXHQ8cD5TdGVwIDIuIE1ha2Ugc3VyZSB0aGF0IExvY2F0aW9uIFNlcnZpY2VzIGlzIG9uLjwvcD5cblx0PHA+U3RlcCAzLiBTY3JvbGwgZG93biB0byBmaW5kIHRoZSBhcHAuPC9wPlxuXHQ8cD5TdGVwIDQuIFRhcCB0aGUgYXBwIGFuZCBzZWxlY3QgYW4gb3B0aW9uOjwvcD5cblx0PHVsPlxuXHRcdDxsaT5OZXZlcjogUHJldmVudHMgYWNjZXNzIHRvIExvY2F0aW9uIFNlcnZpY2VzIGluZm9ybWF0aW9uLjwvbGk+XG5cdFx0PGxpPkFzayBOZXh0IFRpbWU6IFRoaXMgYWxsb3dzIHlvdSB0byBjaG9vc2UgQWx3YXlzIFdoaWxlIFVzaW5nIEFwcCwgQWxsb3cgT25jZSwgb3IgRG9uJ3QgQWxsb3cuPC9saT5cblx0XHQ8bGk+V2hpbGUgVXNpbmcgdGhlIEFwcDogQWxsb3dzIGFjY2VzcyB0byBMb2NhdGlvbiBTZXJ2aWNlcyBvbmx5IHdoZW4gdGhlIGFwcCBvciBvbmUgb2YgaXRzIGZlYXR1cmVzIGlzIHZpc2libGUgb24gc2NyZWVuLiBJZiBhbiBhcHAgaXMgc2V0IHRvIFdoaWxlIFVzaW5nIHRoZSBBcHAsIHlvdSBtaWdodCBzZWUgeW91ciBzdGF0dXMgYmFyIHR1cm4gYmx1ZSB3aXRoIGEgbWVzc2FnZSB0aGF0IGFuIGFwcCBpcyBhY3RpdmVseSB1c2luZyB5b3VyIGxvY2F0aW9uLjwvbGk+XG5cdFx0PGxpPkFsd2F5czogQWxsb3dzIGFjY2VzcyB0byB5b3VyIGxvY2F0aW9uIGV2ZW4gd2hlbiB0aGUgYXBwIGlzIGluIHRoZSBiYWNrZ3JvdW5kLjwvbGk+XG5cdDwvdWw+XG5cdDxoMz5EaWQgeW91IHR1cm4gb2ZmIGxvY2F0aW9uIG9uIHlvdXIgZGV2aWNlPjwvaDM+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG5cdFx0PENvbXBsZXRlPlllcywgSSBkaWQ8L0NvbXBsZXRlPlxuXHRcdDxDb21wbGV0ZSBzdWNjZXNzPXtmYWxzZX0+Tm8sIEkgZGlkbid0PC9Db21wbGV0ZT5cblx0PC9kaXY+XG48L3NlY3Rpb24+XG57OmVsc2V9XG48c2VjdGlvbj5cblx0PGgyPlR1cm4gbG9jYWl0b24gb2ZmIG9uIGFuZCBBbmRyb2lkIERldmljZTwvaDI+XG5cdDxwPlN0ZXAgMS4gR28gdG8gU2V0dGluZ3MgPiBQcml2YWN5ID4gTG9jYXRpb24gU2VydmljZXMuPC9wPlxuXHQ8cD5TdGVwIDIuIE1ha2Ugc3VyZSB0aGF0IExvY2F0aW9uIFNlcnZpY2VzIGlzIG9uLjwvcD5cblx0PHA+U3RlcCAzLiBTY3JvbGwgZG93biB0byBmaW5kIHRoZSBhcHAuPC9wPlxuXHQ8cD5TdGVwIDQuIFRhcCB0aGUgYXBwIGFuZCBzZWxlY3QgYW4gb3B0aW9uOjwvcD5cblx0PHVsPlxuXHRcdDxsaT5OZXZlcjogUHJldmVudHMgYWNjZXNzIHRvIExvY2F0aW9uIFNlcnZpY2VzIGluZm9ybWF0aW9uLjwvbGk+XG5cdFx0PGxpPkFzayBOZXh0IFRpbWU6IFRoaXMgYWxsb3dzIHlvdSB0byBjaG9vc2UgQWx3YXlzIFdoaWxlIFVzaW5nIEFwcCwgQWxsb3cgT25jZSwgb3IgRG9uJ3QgQWxsb3cuPC9saT5cblx0XHQ8bGk+V2hpbGUgVXNpbmcgdGhlIEFwcDogQWxsb3dzIGFjY2VzcyB0byBMb2NhdGlvbiBTZXJ2aWNlcyBvbmx5IHdoZW4gdGhlIGFwcCBvciBvbmUgb2YgaXRzIGZlYXR1cmVzIGlzIHZpc2libGUgb24gc2NyZWVuLiBJZiBhbiBhcHAgaXMgc2V0IHRvIFdoaWxlIFVzaW5nIHRoZSBBcHAsIHlvdSBtaWdodCBzZWUgeW91ciBzdGF0dXMgYmFyIHR1cm4gYmx1ZSB3aXRoIGEgbWVzc2FnZSB0aGF0IGFuIGFwcCBpcyBhY3RpdmVseSB1c2luZyB5b3VyIGxvY2F0aW9uLjwvbGk+XG5cdFx0PGxpPkFsd2F5czogQWxsb3dzIGFjY2VzcyB0byB5b3VyIGxvY2F0aW9uIGV2ZW4gd2hlbiB0aGUgYXBwIGlzIGluIHRoZSBiYWNrZ3JvdW5kLjwvbGk+XG5cdDwvdWw+XG5cdDxoMz5EaWQgeW91IHR1cm4gb2ZmIGxvY2F0aW9uIG9uIHlvdXIgZGV2aWNlPjwvaDM+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG5cdFx0PENvbXBsZXRlPlllcywgSSBkaWQ8L0NvbXBsZXRlPlxuXHRcdDxDb21wbGV0ZSBzdWNjZXNzPXtmYWxzZX0+Tm8sIEkgZGlkbid0PC9Db21wbGV0ZT5cblx0PC9kaXY+XG48L3NlY3Rpb24+XG57L2lmfVxuPEJhY2svPlxuPC9UcmFucz5cbjxzdHlsZT5cblx0c2VjdGlvbiB7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdH1cbiAgIC5idXR0b24taG9sZGVyIHtcblx0d2lkdGg6IDI3dnc7XG5cdGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuXHRpbXBvcnQgeyBvbk1vdW50LCBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuXHRjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXHRpbXBvcnQgVHJhbnMgZnJvbSAnLi4vY29tcG9uZW50cy9UcmFuc0hlbHAuc3ZlbHRlJztcblx0aW1wb3J0IENvbXBsZXRlIGZyb20gJy4uL2NvbXBvbmVudHMvY29tcGxldGUuc3ZlbHRlJyAvL3NldCBzdWNjZXNzPXtmYWxzZX0gZm9yIGZhaWx1cmVcblx0aW1wb3J0IEJ0biBmcm9tICcuLi9jb21wb25lbnRzL0J0bi5zdmVsdGUnIC8vc2V0IDxOZXh0IHE9ezJ9PiB0byBza2lwIG11bHRpcGxlIHN0ZXBzXG5cdGltcG9ydCB7IGNvdW50LCBzdGVwLCBxdWl6U3RlcHMgfSBmcm9tICcuLi9zdG9yZS5qcydcblx0aW1wb3J0IEJhY2sgZnJvbSAnLi4vY29tcG9uZW50cy9CYWNrLnN2ZWx0ZSdcblxuXG5cdC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuICAgIG9uTW91bnQoYXN5bmMoKSA9PiB7JHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDE7XG4gICAgICAgICRxdWl6U3RlcHMuZm9yRWFjaCgodikgPT4ge2lmKHYuY29tcGxldGUgPT0gdHJ1ZSl7Y29tcGxldGVkKyt9fSl9KTtcbiAgICBsZXQgY29tcGxldGVkPSAwO1xuICAgXG5cdGxldCBjdXJyZW50ID0gJ2luaXRpYWwnO1xuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5JbnRlcm5ldCBvZiB0aGluZ3MoIEFsZXhhLCBIb21lIGRldmljZXMpPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48VHJhbnM+XG48c2VjdGlvbiBjbGFzcz0ncmV2aWV3Jz5cbiAgICA8aDI+WW91IGhhdmUgY29tcGxldGVkIHtjb21wbGV0ZWR9IC8gOCBjaGFsbGVuZ2VzITwvaDI+XG4gICAgXG4gICAgeyNlYWNoICRxdWl6U3RlcHMgYXMge25hbWUsIGNvbXBsZXRlLCBkaXNwbGF5UHJvZ3Jlc3N9fVxuICAgIHsjaWYgZGlzcGxheVByb2dyZXNzfVxuICAgIDxwIGNsYXNzOmNvbXBsZXRlPntuYW1lfTwvcD5cbiAgICB7L2lmfVxuICAgIHsvZWFjaH1cblxuICAgIDxhIHByZWZldGNoIGhyZWY9J2hvbWUnPjxidXR0b24+Q2xhaW0gbXkgUHJpemU8L2J1dHRvbj48L2E+XG5cbiAgICA8YSBwcmVmZXRjaCBocmVmPSdxdWl6bWFpbic+PGJ1dHRvbj5CYWNrIHRvIHF1aXo8L2J1dHRvbj48L2E+XG5cbjwvc2VjdGlvbj5cblxuPC9UcmFucz5cbjxzdHlsZT5cbiAgICAucmV2aWV3e1xuICAgICAgICB3aWR0aDo1MHZ3O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzg0MjRkO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbjtcbiAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgcGFkZGluZzogNjVweCAxMDBweCA2NXB4IDY1cHg7XG4gICAgfVxuICAgLmJ1dHRvbi1ob2xkZXIge1xuXHR3aWR0aDogMjd2dztcblx0ZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICB9XG4gICAuY29tcGxldGV7XG4gICAgYmFja2dyb3VuZC1jb2xvciA6IzM4NDI0RDtcbiAgICBjb2xvcjogI2ZmZmZmZjtcblxuICAgfVxuICAgcCB7XG4gICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICAgICBjb2xvcjojZTk0MDQwO1xuICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgcGFkZGluZzogMTVweCAyMHB4IDE1cHggMjBweDtcbiAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgIG1hcmdpbjogNXB4O1xuICAgfVxuICAgYnV0dG9uIHtcblx0ICAgcGFkZGluZzogMTBweCAyMHB4O1xuXHQgICBtYXJnaW46IDEwcHg7XG5cdCAgIGJvcmRlcjogYmxhY2sgc29saWQgMHB4O1xuXHQgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICB9XG48L3N0eWxlPiIsIjxzdHlsZT5cblx0bWFpbiB7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdH1cblx0aDEsIGZpZ3VyZSwgcCB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdG1hcmdpbjogMCBhdXRvO1xuXHR9XG5cdFxuXHQuaGVybyB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogIzNlNGI1OTtcblx0XHRwYWRkaW5nLWxlZnQ6IDgwcHg7XG5cdFx0cGFkZGluZy10b3A6IDMwdmg7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0aGVpZ2h0OiA2MHZoO1xuXHR9XG5cdC5oZXJvIHAge1xuXHRcdG1hcmdpbjogMWVtIGF1dG87XG5cdFx0Y29sb3I6IHdoaXRlO1xuXHR9XG5cdGgxIHtcblx0XHRmb250LXNpemU6IDIuOGVtO1xuXHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0XHRmb250LXdlaWdodDogNzAwO1xuXHRcdG1hcmdpbjogMCAwIDAuNWVtIDA7XG5cdFx0Y29sb3I6IHdoaXRlO1xuXHRcdGxldHRlci1zcGFjaW5nOiAyNSU7XG5cdH1cblx0aDIge1xuXHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0bWFyZ2luOiBhdXRvO1xuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdH1cblx0aDMge1xuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHRtYXJnaW46IGF1dG87XG5cdH1cblx0LmJpZ0ltZyB7XG5cdFx0bWF4LXdpZHRoOiAxNDAwcHg7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogZ3JleTtcblx0fVxuXG5cdGZpZ3VyZSB7XG5cdFx0bWFyZ2luOiAwIDAgMWVtIDA7XG5cdH1cblx0YnV0dG9uIHtcblx0XHRiYWNrZ3JvdW5kOiAjN0FBRjU0O1xuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0cGFkZGluZzogMTBweCAyMHB4IDEwcHggMjBweDtcblx0XHRmb250LXNpemU6IDMwcHg7XG5cdFx0bGluZS1oZWlnaHQ6IDM4cHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJvcmRlci1yYWRpdXM6IDEwcHg7XG5cdFx0Y29sb3I6IHdoaXRlO1xuXHRcdGJveC1zaGFkb3c6IDBweCA0cHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG5cdH1cblx0aW1nIHtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtYXgtd2lkdGg6IDQwMHB4O1xuXHRcdG1hcmdpbjogMCAwIDFlbSAwO1xuXHR9XG5cdC5hYm91dCB7XG5cdFx0cGFkZGluZzogMS41ZW07XG5cdH1cblx0cCB7XG5cdFx0Y29sb3I6IGJsYWNrO1xuXHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdH1cblx0dWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IHJvdztcblx0XHRcblx0XHRsaXN0LXN0eWxlOiBub25lO1xuXHRcdG1hcmdpbi1ibG9jay1zdGFydDogMHB4O1xuXHRcdG1hcmdpbi1ibG9jay1lbmQ6IDBweDtcblx0XHRwYWRkaW5nLWlubGluZS1zdGFydDogMHB4O1xuXHR9XG5cdGxpIHtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcblx0XHRtYXJnaW46IGF1dG87XG5cdH1cblx0LndoeXtcblx0XHRwYWRkaW5nLWxlZnQ6IDgwcHg7XG5cdFx0bWFyZ2luOiAxZW0gYXV0bztcblx0fVxuXHQud2h5IGgyIHtcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdH1cblx0YSB7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdHBhZGRpbmc6IDRweCAzMHB4O1xuXHR9XG5cdEBtZWRpYSAobWluLXdpZHRoOiA0ODBweCkge1xuXHRcdGgxIHtcblx0XHRcdGZvbnQtc2l6ZTogNGVtO1xuXHRcdH1cblx0fVxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+TWluZCBZb3VyIERhdGE6IEFrYSBGdWNrIHN1cnZlaWxsYW5jZSBjYXBpdGFsaXNtPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxkaXYgY2xhc3M9XCJoZXJvXCI+XG5cdDxoMT5NaW5kIFlvdXIgRGF0YTwvaDE+XG5cdDxwID5XZSBiZWxpZXZlIHRoYXQgZXZlcnlvbmUgaW4gdGhpcyB3b3JsZCBzaG91bGQgYmUgdGhlIG9ubHkgb3duZXIgb2Ygb3VyIGRhdGEuPGJyPlxuXHRcdEJ1dCBtb3N0IG9mIHVzIGJsYWggYmxhaCBibGFoIDwvcD5cblx0XHQ8YSByZWw9cHJlZmV0Y2ggaHJlZj1cIi9xdWl6XCI+PGJ1dHRvbj5TdGFydCB0aGUgbGVzc29uPC9idXR0b24+PC9hPlxuPC9kaXY+XG48dWw+XG5cdDxsaSBjbGFzcz0nYWJvdXQnPlxuXHRcdDxoMz5XaG8gV2UgQXJlPC9oMz5cblx0XHQ8cCBjbGFzcz0nYWJvdXQnPkZvciBhbnlvbmUgY29uY2VybmVkIGFib3V0IGxvc3Mgb2YgcHJpdmFjeSBhbmQgdGhlIGltcGxpY2F0aW9ucyBpdCBoYXMgZm9yIG91ciBkZW1vY3JhY3ksIE1pbmQgeW91ciBEYXRhIGVkdWNhdGVzLCBhbmQgZW1wb3dlcnMgY2l0aXplbnMgdG8gZmlnaHQgZm9yIGEgbW9yZSBlcXVpdGFibGUgZm9ybSBvZiBzdXJ2aWxsYW5jZSBjYXBpdGFsaXNtIGJlY2F1c2UsIG91ciBmdXR1cmUgZnJlZWRvbSB0byBwcml2YWN5IGRlcGVuZHMgb24gdGhlIGFjdGlvbnMgd2UgdGFrZSBub3cuPC9wPlxuXHQ8L2xpPlxuXHQ8bGkgY2xhc3M9J2Fib3V0Jz5cdFx0XG5cdFx0PGgzPk91ciBNaXNzaW9uPC9oMz5cblx0XHQ8cCBjbGFzcz0nYWJvdXQnPldlIGFyZSB0byBlZHVjYXRlIHBlb3BsZSBhYm91dCB0aGUgaW1wbGljYXRpb25zIG9mIHN1cnZlaWxsYW5jZSBjYXBpdGFsaXNtIGFuZCBlbXBvd2VyIHRoZW0gdG8gT3B0IG91dCBhbmQgdG8gaGVscCBicmluZyBmb3J0aCBpbnN0aXR1dGlvbnMsIHJlZ3VsYXRpb25zLCBhbmQgbGF3cyB0byBwcm9tb3RlIGEgc29jaWFsIGZvcm0gb2Ygc3VydmVpbGxhbmNlIGNhcGl0YWxpc20gdGhhdCBzZXJ2ZXMgYWxsLiA8L3A+XG5cdDwvbGk+XG5cdDxsaSBjbGFzcz0nYWJvdXQnPlx0XHRcblx0XHQ8aDM+U29tZXRoaWduIEVsc2U8L2gzPlxuXHRcdDxwIGNsYXNzPSdhYm91dCc+V2UgYXJlIHRvIGVkdWNhdGUgcGVvcGxlIGFib3V0IHRoZSBpbXBsaWNhdGlvbnMgb2Ygc3VydmVpbGxhbmNlIGNhcGl0YWxpc20gYW5kIGVtcG93ZXIgdGhlbSB0byBPcHQgb3V0IGFuZCB0byBoZWxwIGJyaW5nIGZvcnRoIGluc3RpdHV0aW9ucywgcmVndWxhdGlvbnMsIGFuZCBsYXdzIHRvIHByb21vdGUgYSBzb2NpYWwgZm9ybSBvZiBzdXJ2ZWlsbGFuY2UgY2FwaXRhbGlzbSB0aGF0IHNlcnZlcyBhbGwuIDwvcD5cblx0PC9saT5cbjwvdWw+XG48aW1nIHNyYz0nLi8xNDAweDQ1MC5wbmcnIGNsYXNzPVwiYmlnSW1nXCIgYWx0PSdwbGFjZWhvbGRlcic+XG48aDIgY2xhc3M9J3doeSc+V2h5IGl0IG1hdHRlcnM8L2gyPlxuXHQ8cCBjbGFzcz1cIndoeVwiPkknbSBiYWJ5IG1peHRhcGUgc2VsZmllcyBkdWlzIGJlZm9yZSB0aGV5IHNvbGQgb3V0IGNyb251dCBpUGhvbmUuIEJ1dGNoZXIgZHVpcyB3aWxsaWFtc2J1cmcgZm9vZCB0cnVjayBzdXN0YWluYWJsZSBxdWlzIG5leHQgbGV2ZWwgaXBzdW0gdGh1bmRlcmNhdHMgc3ludGguIFNjaGxpdHogdW1hbWkgaW4gbWVnZ2luZ3MgeXVjY2llIGZvb2QgdHJ1Y2suIEZhc2hpb24gYXhlIGNydWNpZml4IGxhYm9yaXMgYXN5bW1ldHJpY2FsIGplYW4gc2hvcnRzIGRvbG9yZS4gRnJlZWdhbiBjaGlsbHdhdmUgZmFzaGlvbiBheGUgdmljZSBwaW50ZXJlc3QgYmljeWNsZSByaWdodHMgdmFwb3J3YXJlIGZvdXIgbG9rbyBhZiBlaXVzbW9kIHJhdyBkZW5pbS4gVmV4aWxsb2xvZ2lzdCBmaW5nZXJzdGFjaGUgb3JnYW5pYyB5ciBwb2tlLCBseWZ0IG51bGxhIHBvcnRsYW5kIGhlaXJsb29tIGVsaXQgbWFyZmEgYnJ1bmNoLiBCdXNod2ljayBkZWVwIHYgdXQsIHRodW5kZXJjYXRzIGFpciBwbGFudCBiYW5qbyBwYWxvIHNhbnRvIHRheGlkZXJteSBzdWNjdWxlbnRzIGJlZm9yZSB0aGV5IHNvbGQgb3V0IHB1dCBhIGJpcmQgb24gaXQgbGl2ZS1lZGdlIGhvb2RpZSBoZWxsYS5cblx0PC9wPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1DLElBQUksZUFBQyxDQUFDLEFBQ0wsZ0JBQWdCLENBQUUsS0FBSyxDQUN2QixVQUFVLENBQUUsVUFBVSxBQUN2QixDQUFDO0FDREQsZ0JBQUUsQ0FBRSxDQUFDLGNBQUMsQ0FBQyxBQUNOLE1BQU0sQ0FBRSxDQUFDLENBQUMsSUFBSSxBQUNmLENBQUMsQUFFRCxFQUFFLGNBQUMsQ0FBQyxBQUNILFNBQVMsQ0FBRSxLQUFLLENBQ2hCLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLE1BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEFBQ3BCLENBQUMsQUFFRCxDQUFDLGNBQUMsQ0FBQyxBQUNGLE1BQU0sQ0FBRSxHQUFHLENBQUMsSUFBSSxBQUNqQixDQUFDLEFBRUQsTUFBTSxBQUFDLFlBQVksS0FBSyxDQUFDLEFBQUMsQ0FBQyxBQUMxQixFQUFFLGNBQUMsQ0FBQyxBQUNILFNBQVMsQ0FBRSxHQUFHLEFBQ2YsQ0FBQyxBQUNGLENBQUM7QUNWRSxJQUFJLGNBQUMsQ0FBQyxBQUNOLE9BQU8s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 */