main.svelte-19axu57{background-color:white;box-sizing:border-box}
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
h1.svelte-1acdip2.svelte-1acdip2,p.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:0 auto}.hero.svelte-1acdip2.svelte-1acdip2{background-color:#3e4b59;padding-left:80px;padding-top:30vh;width:100%;height:60vh}.hero.svelte-1acdip2 p.svelte-1acdip2{margin:1em auto;color:white}h1.svelte-1acdip2.svelte-1acdip2{font-size:2.8em;text-align:left;text-transform:uppercase;font-weight:700;margin:0 0 0.5em 0;color:white;letter-spacing:25%}h2.svelte-1acdip2.svelte-1acdip2{text-align:left;margin:auto;text-transform:uppercase}h3.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:auto}.bigImg.svelte-1acdip2.svelte-1acdip2{max-width:1400px;background-color:grey}button.svelte-1acdip2.svelte-1acdip2{background:#7AAF54;text-transform:uppercase;padding:10px 20px 10px 20px;font-size:30px;line-height:38px;border:none;border-radius:10px;color:white;box-shadow:0px 4px 4px rgba(0, 0, 0, 0.25)}img.svelte-1acdip2.svelte-1acdip2{width:100%;max-width:400px;margin:0 0 1em 0}.about.svelte-1acdip2.svelte-1acdip2{padding:1.5em}p.svelte-1acdip2.svelte-1acdip2{color:black;text-align:left}ul.svelte-1acdip2.svelte-1acdip2{display:flex;flex-direction:row;list-style:none;margin-block-start:0px;margin-block-end:0px;padding-inline-start:0px}li.svelte-1acdip2.svelte-1acdip2{justify-content:space-around;margin:auto}.why.svelte-1acdip2.svelte-1acdip2{padding-left:80px;margin:1em auto}a.svelte-1acdip2.svelte-1acdip2{text-decoration:none;padding:4px 30px}@media(min-width: 480px){h1.svelte-1acdip2.svelte-1acdip2{font-size:4em}}
main.svelte-g0hp58{display:flex;flex-flow:row wrap;margin-left:50px;margin-top:25px}
a.svelte-earzo7{text-decoration:none}#agree.svelte-earzo7{float:right}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
aside.svelte-n0ypaq{display:block;top:50px;left:0;width:27.77vw;height:100vh;padding-left:50px}section.svelte-n0ypaq{padding:10px 10px 20px 10px}
.num.svelte-m0bqhn{padding-right:100px}div.svelte-m0bqhn{color:black}.active.svelte-m0bqhn{display:block}
.quiz-holder.svelte-dkh3bo{display:block;width:65vw;left:20vw;height:100vh;padding:20px 50px}.step.svelte-dkh3bo{margin-bottom:55px}#progress.svelte-dkh3bo{margin-top:50px}ul.svelte-dkh3bo{padding-inline-start:15px}li.svelte-dkh3bo{margin:30px 0px}.incomplete.svelte-dkh3bo{color:#a0a0a0;list-style-type:circle}.complete.svelte-dkh3bo{list-style-type:disc}.Side-headline.svelte-dkh3bo{font-size:24px;font-weight:700}#videoElement.svelte-dkh3bo{}.btn-dark.svelte-dkh3bo{color:white;background:#0F2033;border-radius:6px;width:30%;text-align:center;padding:5px 10px}button.svelte-dkh3bo{border:none;padding:5px 10px}
.quiz-holder.svelte-c95n2i{display:block;width:65vw;left:20vw;height:100vh;padding:20px 50px}#warning.svelte-c95n2i{color:red;font-size:24px}.step.svelte-c95n2i{margin-bottom:55px}#progress.svelte-c95n2i{margin-top:50px}ul.svelte-c95n2i{padding-inline-start:15px}li.svelte-c95n2i{margin:30px 0px}.incomplete.svelte-c95n2i{color:#a0a0a0;list-style-type:circle}.complete.svelte-c95n2i{list-style-type:disc}.Side-headline.svelte-c95n2i{font-size:24px;font-weight:700}.btn-dark.svelte-c95n2i{color:white;background:#0F2033;border-radius:6px;width:30%;text-align:center;padding:5px 10px}button.svelte-c95n2i{border:none;padding:5px 10px}form.svelte-c95n2i{display:flex;flex-flow:column}label.svelte-c95n2i{padding:10px}
nav.svelte-juo55k{display:flex;flex-flow:row nowrap;height:50px;justify-content:space-between;align-items:center;background-color:#3e4b59;font-weight:300;padding:0 1em}ul.svelte-juo55k{display:flex;list-style:none;justify-content:flex-end;margin:0;padding:0;color:#c7c7c7}img.svelte-juo55k{display:flex;justify-content:flex-start;height:30px}li.svelte-juo55k{display:flex;margin:0px 20px 0px 20px;text-transform:uppercase}[aria-current].svelte-juo55k{position:relative;display:inline-block}[aria-current].svelte-juo55k::after{position:absolute;content:'';width:calc(100% - 1em);height:2px;background-color:#e74e45;display:block}a.svelte-juo55k{display:flex;padding:1em 0.5em;text-decoration:none;margin:2em, 0em}
#timer.svelte-99wito{display:flex;flex-direction:column;width:20vw;height:135px}#remaining.svelte-99wito{font-size:20px;padding:5px 0px 20px 0px}#minutes.svelte-99wito{color:white;background:#0F2033;border-radius:6px;width:9.7vw;height:6.7vh;text-align:center;font-size:30px}.done.svelte-99wito{display:flex;flex-flow:row nowrap;align-items:center;margin-bottom:55px;margin-right:40px;height:40px}.lock.svelte-99wito{width:32px;margin:10px}.ellipse.svelte-99wito{width:6px;height:6px;margin:3px}.active.svelte-99wito{}.inactive.svelte-99wito{}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
.button-holder.svelte-9jf7df{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-9jf7df{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi43MDk2OTg2MzEuY3NzIiwic291cmNlcyI6WyIuLi8uLi8uLi9fbGF5b3V0LnN2ZWx0ZSIsIi4uLy4uLy4uL19lcnJvci5zdmVsdGUiLCIuLi8uLi8uLi9pbmRleC5zdmVsdGUiLCIuLi8uLi8uLi9xdWl6bWFpbi5zdmVsdGUiLCIuLi8uLi8uLi9xdWl6LnN2ZWx0ZSIsIi4uLy4uLy4uL2luZGV4LnN2ZWx0ZSIsIi4uLy4uLy4uL1tzbHVnXS5zdmVsdGUiLCIuLi8uLi8uLi9Qcm9ncmVzcy5zdmVsdGUiLCIuLi8uLi8uLi9xMC5zdmVsdGUiLCIuLi8uLi8uLi9xMS5zdmVsdGUiLCIuLi8uLi8uLi9xMi5zdmVsdGUiLCIuLi8uLi8uLi9OYXYuc3ZlbHRlIiwiLi4vLi4vLi4vQ29tcGxldGlvbi5zdmVsdGUiLCIuLi8uLi8uLi9xMy5zdmVsdGUiLCIuLi8uLi8uLi9xNC5zdmVsdGUiLCIuLi8uLi8uLi9xNS5zdmVsdGUiLCIuLi8uLi8uLi9xNi5zdmVsdGUiLCIuLi8uLi8uLi9xNy5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cblx0aW1wb3J0IE5hdiBmcm9tICcuLi9jb21wb25lbnRzL05hdi5zdmVsdGUnO1xuXHRleHBvcnQgbGV0IHNlZ21lbnQ7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuXHRtYWluIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHR9XG48L3N0eWxlPlxuXG48TmF2IHtzZWdtZW50fS8+XG5cbjxtYWluPlxuXHQ8c2xvdD48L3Nsb3Q+XG48L21haW4+XG48IS0tPFByb2dyZXNzIC8+LS0+IiwiPHNjcmlwdD5cblx0ZXhwb3J0IGxldCBzdGF0dXM7XG5cdGV4cG9ydCBsZXQgZXJyb3I7XG5cblx0Y29uc3QgZGV2ID0gXCJkZXZlbG9wbWVudFwiID09PSAnZGV2ZWxvcG1lbnQnO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblx0aDEsIHAge1xuXHRcdG1hcmdpbjogMCBhdXRvO1xuXHR9XG5cblx0aDEge1xuXHRcdGZvbnQtc2l6ZTogMi44ZW07XG5cdFx0Zm9udC13ZWlnaHQ6IDcwMDtcblx0XHRtYXJnaW46IDAgMCAwLjVlbSAwO1xuXHR9XG5cblx0cCB7XG5cdFx0bWFyZ2luOiAxZW0gYXV0bztcblx0fVxuXG5cdEBtZWRpYSAobWluLXdpZHRoOiA0ODBweCkge1xuXHRcdGgxIHtcblx0XHRcdGZvbnQtc2l6ZTogNGVtO1xuXHRcdH1cblx0fVxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+e3N0YXR1c308L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPntzdGF0dXN9PC9oMT5cblxuPHA+e2Vycm9yLm1lc3NhZ2V9PC9wPlxuXG57I2lmIGRldiAmJiBlcnJvci5zdGFja31cblx0PHByZT57ZXJyb3Iuc3RhY2t9PC9wcmU+XG57L2lmfVxuIiwiPHN0eWxlPlxuXHRtYWluIHtcblx0XHR3aWR0aDogMTAwJTtcblx0fVxuXHRoMSwgZmlndXJlLCBwIHtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0bWFyZ2luOiAwIGF1dG87XG5cdH1cblx0XG5cdC5oZXJvIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjM2U0YjU5O1xuXHRcdHBhZGRpbmctbGVmdDogODBweDtcblx0XHRwYWRkaW5nLXRvcDogMzB2aDtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRoZWlnaHQ6IDYwdmg7XG5cdH1cblx0Lmhlcm8gcCB7XG5cdFx0bWFyZ2luOiAxZW0gYXV0bztcblx0XHRjb2xvcjogd2hpdGU7XG5cdH1cblx0aDEge1xuXHRcdGZvbnQtc2l6ZTogMi44ZW07XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXHRcdGZvbnQtd2VpZ2h0OiA3MDA7XG5cdFx0bWFyZ2luOiAwIDAgMC41ZW0gMDtcblx0XHRjb2xvcjogd2hpdGU7XG5cdFx0bGV0dGVyLXNwYWNpbmc6IDI1JTtcblx0fVxuXHRoMiB7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRtYXJnaW46IGF1dG87XG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0fVxuXHRoMyB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdG1hcmdpbjogYXV0bztcblx0fVxuXHQuYmlnSW1nIHtcblx0XHRtYXgtd2lkdGg6IDE0MDBweDtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBncmV5O1xuXHR9XG5cblx0ZmlndXJlIHtcblx0XHRtYXJnaW46IDAgMCAxZW0gMDtcblx0fVxuXHRidXR0b24ge1xuXHRcdGJhY2tncm91bmQ6ICM3QUFGNTQ7XG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0XHRwYWRkaW5nOiAxMHB4IDIwcHggMTBweCAyMHB4O1xuXHRcdGZvbnQtc2l6ZTogMzBweDtcblx0XHRsaW5lLWhlaWdodDogMzhweDtcblx0XHRib3JkZXI6IG5vbmU7XG5cdFx0Ym9yZGVyLXJhZGl1czogMTBweDtcblx0XHRjb2xvcjogd2hpdGU7XG5cdFx0Ym94LXNoYWRvdzogMHB4IDRweCA0cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcblx0fVxuXHRpbWcge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdG1heC13aWR0aDogNDAwcHg7XG5cdFx0bWFyZ2luOiAwIDAgMWVtIDA7XG5cdH1cblx0LmFib3V0IHtcblx0XHRwYWRkaW5nOiAxLjVlbTtcblx0fVxuXHRwIHtcblx0XHRjb2xvcjogYmxhY2s7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0fVxuXHR1bCB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRmbGV4LWRpcmVjdGlvbjogcm93O1xuXHRcdFxuXHRcdGxpc3Qtc3R5bGU6IG5vbmU7XG5cdFx0bWFyZ2luLWJsb2NrLXN0YXJ0OiAwcHg7XG5cdFx0bWFyZ2luLWJsb2NrLWVuZDogMHB4O1xuXHRcdHBhZGRpbmctaW5saW5lLXN0YXJ0OiAwcHg7XG5cdH1cblx0bGkge1xuXHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuXHRcdG1hcmdpbjogYXV0bztcblx0fVxuXHQud2h5e1xuXHRcdHBhZGRpbmctbGVmdDogODBweDtcblx0XHRtYXJnaW46IDFlbSBhdXRvO1xuXHR9XG5cdC53aHkgaDIge1xuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0fVxuXHRhIHtcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdFx0cGFkZGluZzogNHB4IDMwcHg7XG5cdH1cblx0QG1lZGlhIChtaW4td2lkdGg6IDQ4MHB4KSB7XG5cdFx0aDEge1xuXHRcdFx0Zm9udC1zaXplOiA0ZW07XG5cdFx0fVxuXHR9XG48L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5NaW5kIFlvdXIgRGF0YTogQWthIEZ1Y2sgc3VydmVpbGxhbmNlIGNhcGl0YWxpc208L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGRpdiBjbGFzcz1cImhlcm9cIj5cblx0PGgxPk1pbmQgWW91ciBEYXRhPC9oMT5cblx0PHAgPldlIGJlbGlldmUgdGhhdCBldmVyeW9uZSBpbiB0aGlzIHdvcmxkIHNob3VsZCBiZSB0aGUgb25seSBvd25lciBvZiBvdXIgZGF0YS48YnI+XG5cdFx0QnV0IG1vc3Qgb2YgdXMgYmxhaCBibGFoIGJsYWggPC9wPlxuXHQ8YnV0dG9uPjxhIHJlbD1wcmVmZXRjaCBocmVmPVwiL3F1aXpcIj5TdGFydCB0aGUgbGVzc29uPC9hPjwvYnV0dG9uPlxuPC9kaXY+XG48dWw+XG5cdDxsaSBjbGFzcz0nYWJvdXQnPlxuXHRcdDxoMz5XaG8gV2UgQXJlPC9oMz5cblx0XHQ8cCBjbGFzcz0nYWJvdXQnPkZvciBhbnlvbmUgY29uY2VybmVkIGFib3V0IGxvc3Mgb2YgcHJpdmFjeSBhbmQgdGhlIGltcGxpY2F0aW9ucyBpdCBoYXMgZm9yIG91ciBkZW1vY3JhY3ksIE1pbmQgeW91ciBEYXRhIGVkdWNhdGVzLCBhbmQgZW1wb3dlcnMgY2l0aXplbnMgdG8gZmlnaHQgZm9yIGEgbW9yZSBlcXVpdGFibGUgZm9ybSBvZiBzdXJ2aWxsYW5jZSBjYXBpdGFsaXNtIGJlY2F1c2UsIG91ciBmdXR1cmUgZnJlZWRvbSB0byBwcml2YWN5IGRlcGVuZHMgb24gdGhlIGFjdGlvbnMgd2UgdGFrZSBub3cuPC9wPlxuXHQ8L2xpPlxuXHQ8bGkgY2xhc3M9J2Fib3V0Jz5cdFx0XG5cdFx0PGgzPk91ciBNaXNzaW9uPC9oMz5cblx0XHQ8cCBjbGFzcz0nYWJvdXQnPldlIGFyZSB0byBlZHVjYXRlIHBlb3BsZSBhYm91dCB0aGUgaW1wbGljYXRpb25zIG9mIHN1cnZlaWxsYW5jZSBjYXBpdGFsaXNtIGFuZCBlbXBvd2VyIHRoZW0gdG8gT3B0IG91dCBhbmQgdG8gaGVscCBicmluZyBmb3J0aCBpbnN0aXR1dGlvbnMsIHJlZ3VsYXRpb25zLCBhbmQgbGF3cyB0byBwcm9tb3RlIGEgc29jaWFsIGZvcm0gb2Ygc3VydmVpbGxhbmNlIGNhcGl0YWxpc20gdGhhdCBzZXJ2ZXMgYWxsLiA8L3A+XG5cdDwvbGk+XG5cdDxsaSBjbGFzcz0nYWJvdXQnPlx0XHRcblx0XHQ8aDM+U29tZXRoaWduIEVsc2U8L2gzPlxuXHRcdDxwIGNsYXNzPSdhYm91dCc+V2UgYXJlIHRvIGVkdWNhdGUgcGVvcGxlIGFib3V0IHRoZSBpbXBsaWNhdGlvbnMgb2Ygc3VydmVpbGxhbmNlIGNhcGl0YWxpc20gYW5kIGVtcG93ZXIgdGhlbSB0byBPcHQgb3V0IGFuZCB0byBoZWxwIGJyaW5nIGZvcnRoIGluc3RpdHV0aW9ucywgcmVndWxhdGlvbnMsIGFuZCBsYXdzIHRvIHByb21vdGUgYSBzb2NpYWwgZm9ybSBvZiBzdXJ2ZWlsbGFuY2UgY2FwaXRhbGlzbSB0aGF0IHNlcnZlcyBhbGwuIDwvcD5cblx0PC9saT5cbjwvdWw+XG48aW1nIHNyYz0nLi8xNDAweDQ1MC5wbmcnIGNsYXNzPVwiYmlnSW1nXCIgYWx0PSdwbGFjZWhvbGRlcic+XG48aDIgY2xhc3M9J3doeSc+V2h5IGl0IG1hdHRlcnM8L2gyPlxuXHQ8cCBjbGFzcz1cIndoeVwiPkknbSBiYWJ5IG1peHRhcGUgc2VsZmllcyBkdWlzIGJlZm9yZSB0aGV5IHNvbGQgb3V0IGNyb251dCBpUGhvbmUuIEJ1dGNoZXIgZHVpcyB3aWxsaWFtc2J1cmcgZm9vZCB0cnVjayBzdXN0YWluYWJsZSBxdWlzIG5leHQgbGV2ZWwgaXBzdW0gdGh1bmRlcmNhdHMgc3ludGguIFNjaGxpdHogdW1hbWkgaW4gbWVnZ2luZ3MgeXVjY2llIGZvb2QgdHJ1Y2suIEZhc2hpb24gYXhlIGNydWNpZml4IGxhYm9yaXMgYXN5bW1ldHJpY2FsIGplYW4gc2hvcnRzIGRvbG9yZS4gRnJlZWdhbiBjaGlsbHdhdmUgZmFzaGlvbiBheGUgdmljZSBwaW50ZXJlc3QgYmljeWNsZSByaWdodHMgdmFwb3J3YXJlIGZvdXIgbG9rbyBhZiBlaXVzbW9kIHJhdyBkZW5pbS4gVmV4aWxsb2xvZ2lzdCBmaW5nZXJzdGFjaGUgb3JnYW5pYyB5ciBwb2tlLCBseWZ0IG51bGxhIHBvcnRsYW5kIGhlaXJsb29tIGVsaXQgbWFyZmEgYnJ1bmNoLiBCdXNod2ljayBkZWVwIHYgdXQsIHRodW5kZXJjYXRzIGFpciBwbGFudCBiYW5qbyBwYWxvIHNhbnRvIHRheGlkZXJteSBzdWNjdWxlbnRzIGJlZm9yZSB0aGV5IHNvbGQgb3V0IHB1dCBhIGJpcmQgb24gaXQgbGl2ZS1lZGdlIGhvb2RpZSBoZWxsYS5cblx0PC9wPlxuIiwiPHNjcmlwdD5cbiBpbXBvcnQgUXVpejEgZnJvbSAnLi9xdWl6L3EwLnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejIgZnJvbSAnLi9xdWl6L3ExLnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejMgZnJvbSAnLi9xdWl6L3EyLnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejQgZnJvbSAnLi9xdWl6L3EzLnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejUgZnJvbSAnLi9xdWl6L3E0LnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejYgZnJvbSAnLi9xdWl6L3E1LnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejcgZnJvbSAnLi9xdWl6L3E2LnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejggZnJvbSAnLi9xdWl6L3E3LnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejkgZnJvbSAnLi9xdWl6L3E4LnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejEwIGZyb20gJy4vcXVpei9xOS5zdmVsdGUnXG4gaW1wb3J0IENvbXBsZXRpb24gZnJvbSAnLi4vY29tcG9uZW50cy9Db21wbGV0aW9uLnN2ZWx0ZSdcbiBpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuXG5cblxuXG4gY29uc3QgcXVpelN0ZXBzID0gIFtcbiAgICAgICAgeyBpZDonMScsIGNvbXBvbmVudDogUXVpejEsIG5hbWU6ICdXZWJjYW0gQ2hhbGxlbmdlJywgY29tcGxldGU6ZmFsc2V9LFxuICAgICAgICB7IGlkOiAnMicsIGNvbXBvbmVudDogUXVpejIsIG5hbWU6ICdCcm93c2VyIENob2ljZScsIGNvbXBsZXRlOmZhbHNlfSxcbiAgICAgICAgeyBpZDogJzMnLCBjb21wb25lbnQ6IFF1aXozLCBuYW1lOiAnUHJpdmFjeSBTZXR0aW5nJywgY29tcGxldGU6ZmFsc2V9LFxuICAgICAgICB7IGlkOiAnNCcsIGNvbXBvbmVudDogUXVpejQsIG5hbWU6ICdIdHRwcyBldmVyeXdoZXJlJywgY29tcGxldGU6ZmFsc2V9LFxuICAgICAgICB7IGlkOiAnNScsIGNvbXBvbmVudDogUXVpejUsIG5hbWU6ICdMb2NhdGlvbiBTZXJ2aWNlcyAocGhvbmUgbmVlZGVkKScsIGNvbXBsZXRlOmZhbHNlfSxcbiAgICAgICAgeyBpZDogJzYnLCBjb21wb25lbnQ6IFF1aXo2LCBuYW1lOiAnVHJhY2tlciBibG9ja2VyJywgY29tcGxldGU6ZmFsc2V9LFxuICAgICAgICB7IGlkOiAnNycsIGNvbXBvbmVudDogUXVpejcsIG5hbWU6ICdsb2NhdGlvbiBUcmFja2luZycsIGNvbXBsZXRlOmZhbHNlfSxcbiAgICAgICAgeyBpZDogJzgnLCBjb21wb25lbnQ6IFF1aXo4LCBuYW1lOiAnTW9iaWxlIGtleWJvYXJkJywgY29tcGxldGU6ZmFsc2V9LFxuICAgICAgICB7IGlkOiAnOScsIGNvbXBvbmVudDogUXVpejksIG5hbWU6ICdNZXNzZW5nZXIgcGxhdGZvcm0nLCBjb21wbGV0ZTpmYWxzZX0sXG4gICAgICAgIHsgaWQ6ICcxMCcsIGNvbXBvbmVudDogUXVpejEwLCBuYW1lOiAnaW90JywgdGltZTogJzJtaW5zJ31cbl1cbiQ6IHF1aXpOdW0gPSA3O1xuZnVuY3Rpb24gaGFuZGxlTWVzc2FnZShldmVudCkge1xuICAgICAgICAgICAgICBxdWl6TnVtKys7XG4gICAgICAgICAgICAgIC8vcXVpelN0ZXBzW09iamVjdC52YWx1ZXMoZXZlbnQuZGV0YWlsWzBdKV0uY29tcGxldGUgPSBvYmplY3QudmFsdWVzKGV2ZW50LmRldGFpbFsxXSlcbiAgICAgICAgICAgICAgbGV0IHN0YXR1cyA9IE9iamVjdC52YWx1ZXMoZXZlbnQuZGV0YWlsKTtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coc3RhdHVzKTtcbiAgICAgICAgICAgICAgbGV0IGxvY2F0aW9uID0gc3RhdHVzWzBdO1xuICAgICAgICAgICAgICBxdWl6U3RlcHNbbG9jYXRpb25dLmNvbXBsZXRlID0gc3RhdHVzWzFdO1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhxdWl6U3RlcHNbbG9jYXRpb25dKTtcblx0fVxuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5UZXN0IHlvdXIga25vd2xlZGdlPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48bWFpbj5cbiAgICAgICA8Q29tcGxldGlvbiBjbGFzcz0nc3RlcCcvPlxuICAgICAgICA8c3ZlbHRlOmNvbXBvbmVudCB0aGlzPXtxdWl6U3RlcHNbcXVpek51bV0uY29tcG9uZW50fSBvbjptZXNzYWdlPXtoYW5kbGVNZXNzYWdlfS8+XG4gICAgICAgPCEtLTxRdWl6MiBvbjptZXNzYWdlPXtoYW5kbGVNZXNzYWdlfS8+IC0tPlxuXG48IS0tPHNlbGVjdCBiaW5kOnZhbHVlPXtzZWxlY3RlZH0+XG4gICAgICAgIHsjZWFjaCBxdWl6U3RlcHMgYXMgcX1cblx0XHQ8b3B0aW9uIHZhbHVlPXtxfT5RdWVzdGlvbiB7cS5pZH08L29wdGlvbj5cblx0ey9lYWNofVxuPC9zZWxlY3Q+LS0+XG48IS0tPGJ1dHRvbiBvbjpjbGljaz17aGFuZGxlQ2xpY2t9PkNsaWNrIG1lPC9idXR0b24+LS0+XG48IS0tPFByb2dyZXNzIHBhc3Q9e3Bhc3QubmFtZX0gY3VycmVudD17c2VsZWN0ZWQubmFtZX0gbmV4dD17bmV4dC5uYW1lfS8+LS0+XG48L21haW4+XG48c3R5bGU+XG4gICAgICAgbWFpbiB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjUwcHg7XG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6MjVweDtcblxuICAgICAgIH1cbiAgICAgICAuc3RlcHtcblx0XHRtYXJnaW4tYm90dG9tOiA1NXB4O1xuICAgICAgIH1cbjwvc3R5bGU+IiwiXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5EYXRhIHByaXZhY3kgcXVpejwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPGgxPldlbGNvbWUgdG8gTWluZCBZb3VyIERhdGEgUXVpejwvaDE+XG48cD5cbk9ubHkgZm9yIGVkdWNhdGlvbmFsIHB1cnBvc2UsIHRoaXMgdGVzdCB3aWxsIHV0aWxpemUgYmxhaCBibGFoIGJsYWguIFxuVGhlcmUgd2lsbCBiZSBubyBwZXJzb25hbCBkYXRhIGNvbGxlY3RlZCBvciBzaGFyZWQuLi4gXG5UaGlzIHRlc3Qgd2lsbCBvbmx5ICBibGFoIGJsYWggYmxhaCBhbmQgdXRpbGl6ZSBibGFoIGJsYWggYmxhaC4gXG48aDI+dGhpcyBzaG91bGQgZ2V0IGNvbnZlcnRlZCBpbnRvIGEgbW9kYWw8L2gyPlxuPGJ1dHRvbj5cbiAgICA8YSByZWw9cHJlZmV0Y2ggaHJlZj0nLic+Y2FuY2VsPC9hPlxuICAgIDwvYnV0dG9uPlxuPGJ1dHRvbiBpZD1cImFncmVlXCI+PGEgcmVsPXByZWZldGNoIGhyZWY9J3F1aXptYWluJyA+QWdyZWU8L2E+PC9idXR0b24+XG48c3R5bGU+XG4gICAgYSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB9XG4gICAgI2FncmVle1xuICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0IGNvbnRleHQ9XCJtb2R1bGVcIj5cblx0ZXhwb3J0IGZ1bmN0aW9uIHByZWxvYWQoeyBwYXJhbXMsIHF1ZXJ5IH0pIHtcblx0XHRyZXR1cm4gdGhpcy5mZXRjaChgYmxvZy5qc29uYCkudGhlbihyID0+IHIuanNvbigpKS50aGVuKHBvc3RzID0+IHtcblx0XHRcdHJldHVybiB7IHBvc3RzIH07XG5cdFx0fSk7XG5cdH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuXHRleHBvcnQgbGV0IHBvc3RzO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblx0dWwge1xuXHRcdG1hcmdpbjogMCAwIDFlbSAwO1xuXHRcdGxpbmUtaGVpZ2h0OiAxLjU7XG5cdH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkJsb2c8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPlJlY2VudCBwb3N0czwvaDE+XG5cbjx1bD5cblx0eyNlYWNoIHBvc3RzIGFzIHBvc3R9XG5cdFx0PCEtLSB3ZSdyZSB1c2luZyB0aGUgbm9uLXN0YW5kYXJkIGByZWw9cHJlZmV0Y2hgIGF0dHJpYnV0ZSB0b1xuXHRcdFx0XHR0ZWxsIFNhcHBlciB0byBsb2FkIHRoZSBkYXRhIGZvciB0aGUgcGFnZSBhcyBzb29uIGFzXG5cdFx0XHRcdHRoZSB1c2VyIGhvdmVycyBvdmVyIHRoZSBsaW5rIG9yIHRhcHMgaXQsIGluc3RlYWQgb2Zcblx0XHRcdFx0d2FpdGluZyBmb3IgdGhlICdjbGljaycgZXZlbnQgLS0+XG5cdFx0PGxpPjxhIHJlbD0ncHJlZmV0Y2gnIGhyZWY9J2Jsb2cve3Bvc3Quc2x1Z30nPntwb3N0LnRpdGxlfTwvYT48L2xpPlxuXHR7L2VhY2h9XG48L3VsPiIsIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuXHRleHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuXHRcdC8vIHRoZSBgc2x1Z2AgcGFyYW1ldGVyIGlzIGF2YWlsYWJsZSBiZWNhdXNlXG5cdFx0Ly8gdGhpcyBmaWxlIGlzIGNhbGxlZCBbc2x1Z10uc3ZlbHRlXG5cdFx0Y29uc3QgcmVzID0gYXdhaXQgdGhpcy5mZXRjaChgYmxvZy8ke3BhcmFtcy5zbHVnfS5qc29uYCk7XG5cdFx0Y29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cblx0XHRpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7XG5cdFx0XHRyZXR1cm4geyBwb3N0OiBkYXRhIH07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuZXJyb3IocmVzLnN0YXR1cywgZGF0YS5tZXNzYWdlKTtcblx0XHR9XG5cdH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuXHRleHBvcnQgbGV0IHBvc3Q7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuXHQvKlxuXHRcdEJ5IGRlZmF1bHQsIENTUyBpcyBsb2NhbGx5IHNjb3BlZCB0byB0aGUgY29tcG9uZW50LFxuXHRcdGFuZCBhbnkgdW51c2VkIHN0eWxlcyBhcmUgZGVhZC1jb2RlLWVsaW1pbmF0ZWQuXG5cdFx0SW4gdGhpcyBwYWdlLCBTdmVsdGUgY2FuJ3Qga25vdyB3aGljaCBlbGVtZW50cyBhcmVcblx0XHRnb2luZyB0byBhcHBlYXIgaW5zaWRlIHRoZSB7e3twb3N0Lmh0bWx9fX0gYmxvY2ssXG5cdFx0c28gd2UgaGF2ZSB0byB1c2UgdGhlIDpnbG9iYWwoLi4uKSBtb2RpZmllciB0byB0YXJnZXRcblx0XHRhbGwgZWxlbWVudHMgaW5zaWRlIC5jb250ZW50XG5cdCovXG5cdC5jb250ZW50IDpnbG9iYWwoaDIpIHtcblx0XHRmb250LXNpemU6IDEuNGVtO1xuXHRcdGZvbnQtd2VpZ2h0OiA1MDA7XG5cdH1cblxuXHQuY29udGVudCA6Z2xvYmFsKHByZSkge1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG5cdFx0Ym94LXNoYWRvdzogaW5zZXQgMXB4IDFweCA1cHggcmdiYSgwLDAsMCwwLjA1KTtcblx0XHRwYWRkaW5nOiAwLjVlbTtcblx0XHRib3JkZXItcmFkaXVzOiAycHg7XG5cdFx0b3ZlcmZsb3cteDogYXV0bztcblx0fVxuXG5cdC5jb250ZW50IDpnbG9iYWwocHJlKSA6Z2xvYmFsKGNvZGUpIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5cblx0LmNvbnRlbnQgOmdsb2JhbCh1bCkge1xuXHRcdGxpbmUtaGVpZ2h0OiAxLjU7XG5cdH1cblxuXHQuY29udGVudCA6Z2xvYmFsKGxpKSB7XG5cdFx0bWFyZ2luOiAwIDAgMC41ZW0gMDtcblx0fVxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+e3Bvc3QudGl0bGV9PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxoMT57cG9zdC50aXRsZX08L2gxPlxuXG48ZGl2IGNsYXNzPSdjb250ZW50Jz5cblx0e0BodG1sIHBvc3QuaHRtbH1cbjwvZGl2PlxuIiwiPHNjcmlwdD5cbmxldCBjb21wbGV0ZWQ7XG4vL3Bhc3MgdG8gZXZlbnRzIHRvIHF1aXogY29tcG9uZW50c1xuaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcblx0Y29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcbiAgICAkOiBudW0gPSAwO1xuXHRmdW5jdGlvbiBzYXlIZWxsbygpIHtcbiAgICAgICAgbnVtKys7XG5cdFx0ZGlzcGF0Y2goJ21lc3NhZ2UnLCB7XG5cdFx0XHRudW1iZXI6IG51bVxuXHRcdH0pO1xuXHR9XG5cbjwvc2NyaXB0PlxuPHN0eWxlPlxuICAgIGFzaWRlIHtcbiAgICAgICAvKiBwb3NpdGlvbjogZml4ZWQ7ICovXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB0b3A6NTBweDtcbiAgICAgICAgbGVmdDowO1xuICAgICAgICB3aWR0aDogMjcuNzd2dztcbiAgICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgLypiYWNrZ3JvdW5kLWNvbG9yOiAjZTRlNGU0O1xuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjYzdjN2M3OyovXG4gICAgICAgIHBhZGRpbmctbGVmdDogNTBweDtcbiAgICB9XG4gICAgc2VjdGlvbiB7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMTBweCAyMHB4IDEwcHg7XG4gICAgfVxuICAgICN0aW1lciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IFxuICAgICAgICAvKmJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYzdjN2M3OyovXG4gICAgfVxuICAgICNyZW1haW5pbmcge1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIHBhZGRpbmc6IDVweCAwcHggMjBweCAwcHg7XG4gICAgICAgIFxuXG4gICAgfVxuICAgICNtaW51dGVzIHtcbiAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgICAgIGJhY2tncm91bmQ6ICMwRjIwMzM7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICAgd2lkdGg6IDkuN3Z3O1xuICAgICAgICBoZWlnaHQ6IDYuN3ZoO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgXG5cbiAgICB9XG4gICAgLmJ0bi1kYXJrIHtcbiAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgICAgIGJhY2tncm91bmQ6ICMwRjIwMzM7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICB9XG4gICAgYnV0dG9uIHtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICB9XG4gICAgI25leHQtc2tpcCB7XG4gICAgICAgIG1hcmdpbjogNXB4IDEwcHg7XG4gICAgICAgIHBhZGRpbmc6IDVweCAwcHggMjBweCAwcHg7XG4gICAgfVxuICAgIFxuPC9zdHlsZT5cbjxhc2lkZSBpZD0nc2lkZWJhcic+XG4gICAgPHNlY3Rpb24gaWQ9XCJwcm9ncmVzc1wiPlxuICAgICAgICA8c2xvdD5cblxuICAgICAgICA8L3Nsb3Q+XG4gICAgPC9zZWN0aW9uPlxuICAgIDwhLS1cbiAgICA8c2VjdGlvbiBpZD0nbmV4dC1za2lwJz4gXG4gICAgICAgIDxidXR0b24gb246Y2xpY2s9e3NheUhlbGxvfSBjbGFzcz0nYnRuLWRhcmsnPk5leHQ8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiAgY2xhc3M9J2J0bi1kYXJrJz5Ta2lwPC9idXR0b24+XG4gICAgPC9zZWN0aW9uPiAtLT5cbjwvYXNpZGU+IiwiPHNjcmlwdD5cblxuICAgICBjb25zdCBxdWl6U3RlcHMgPSAgW1xuICAgICAgICB7IGlkOiAncTEnLCBuYW1lOiAnV2ViY2FtIENoYWxsZW5nZScsIHRpbWU6ICcybWlucycsIGRlc2NyaXB0aW9uOlwiSWYgeW91ciBjb21wdXRlciBoYXMgYSBidWlsdC1pbiBjYW1lcmEsIGFsc28ga25vd24gYXMgYSB3ZWJjYW0sIHlvdSBzaG91bGQga25vdyB0aGF0IGl0IGNhbiBiZSB1c2VkIHRvIHNweSBvbiB5b3UuIEFuZCBubywgdGhpcyBpcyBub3QganVzdCBzY2llbmNlIGZpY3Rpb24gYXMgYSByZWNlbnQgc3VydmV5IGNvbmR1Y3RlZCBieSBIUCBzaG93cyB0aGF0IDEwJSBpbiB0aGUgVS5TLiBlaXRoZXIga25vdyBzb21lb25lIHdob3NlIHdlYmNhbSB3YXMgaGFja2VkIG9yIGhhdmUgaGFkIHRoZWlyIG93biB3ZWJjYW0gaGFja2VkLiBJbiB0aGlzIGNoYWxsZW5nZSwgd2UgYXJlIGdvaW5nIHRvIHdhbGsgeW91IHRocm91Z2ggdGhlIGJlc3QgcHJhY3RpY2UgdG8gYXZvaWQgdGhpcyByaXNrLlwifSxcbiAgICAgICAgeyBpZDogJ3EyJywgbmFtZTogJ0Jyb3dzZXIgQ2hvaWNlJywgdGltZTogJzNtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICdxMycsIG5hbWU6ICdQcml2YWN5IFNldHRpbmcnLCB0aW1lOiAnNG1pbnMnfSxcbiAgICAgICAgeyBpZDogJ3E0JywgbmFtZTogJ0h0dHBzIGV2ZXJ5d2hlcmUnLCB0aW1lOiAnNG1pbnMnfSxcbiAgICAgICAgeyBpZDogJ3E1JywgbmFtZTogJ0xvY2F0aW9uIFNlcnZpY2VzIChwaG9uZSBuZWVkZWQpJywgdGltZTogJzNtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICdxNicsIG5hbWU6ICdUcmFja2VyIGJsb2NrZXInLCB0aW1lOiAnM21pbnMnfSxcbiAgICAgICAgeyBpZDogJ3E3JywgbmFtZTogJ2xvY2F0aW9uIFRyYWNraW5nJywgdGltZTogJzFtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICdxOCcsIG5hbWU6ICdNb2JpbGUga2V5Ym9hcmQnLCB0aW1lOiAnNW1pbnMnfSxcbiAgICAgICAgeyBpZDogJ3E5JywgbmFtZTogJ01lc3NlbmdlciBwbGF0Zm9ybScsIHRpbWU6ICcybWlucyd9LFxuICAgICAgICB7IGlkOiAncTEwJywgbmFtZTogJ2lvdCcsIHRpbWU6ICcybWlucyd9XG4gICAgIF1cbiAgICBsZXQgYWN0aXZlID0gdHJ1ZTtcbiAgICAgZnVuY3Rpb24gaGFuZGxlTW91c2VTaG93KCl7XG4gICAgICAgIGFjdGl2ZSA9IGZhbHNlO1xuXG4gICAgIH1cbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+UXVpeiBPdmVydmlldzwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPGgyPlRoaXMgdGVzdCBjb250YWlucyAxMCB1bmlxdWUgcHJpdmFjeSB0ZXN0cyB0aGF0IHdpbGwgdGFrZSB5b3UgYWJvdXQgMzAgbWludXRlcyB0byBjb21wbGV0ZS4gVGhyb3VnaHQgdGhlIHRlc3QsIHdlIHdpbGwgcHJvdmlkZS4uLjwvaDI+XG48ZGl2PlxuICAgIHsjZWFjaCBxdWl6U3RlcHMgYXMge2lkLCBuYW1lLCB0aW1lLCBkZXNjcmlwdGlvbn0sIGl9XG4gICAgPGRpdiBjbGFzcz0nbnVtJz57aX17bmFtZX0gKHt0aW1lfSk8L2Rpdj48ZGl2IGNsYXNzOmFjdGl2ZT17YWN0aXZlfT57ZGVzY3JpcHRpb259PC9kaXY+XG4gICAgey9lYWNofVxuPC9kaXY+XG5cbjxzdHlsZT5cbiAgICAubnVtIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTAwcHg7XG4gICAgIFxuICAgIH1cbiAgICBkaXYge1xuICAgICAgICBjb2xvcjpibGFjaztcbiAgICB9XG4gICAgLmFjdGl2ZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICBcbjwvc3R5bGU+IiwiPHNjcmlwdD5cbmltcG9ydCB7IG9uTW91bnQsIGFmdGVyVXBkYXRlIH0gZnJvbSAnc3ZlbHRlJztcbmltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5pbXBvcnQgQ29tcGxldGlvbiBmcm9tICcuLi8uLi9jb21wb25lbnRzL0NvbXBsZXRpb24uc3ZlbHRlJ1xuXG5jb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG5mdW5jdGlvbiBjb21wbGV0ZSgpIHtcblx0ZGlzcGF0Y2goJ21lc3NhZ2UnLCB7XG5cdFx0cXVlc3Rpb246IDAsXG5cdFx0Y29tcGxldGU6ICd0cnVlJ1xuXHR9KTtcbn1cblx0bGV0IHExU3RlcHMgPSBbXG5cdHsgc3RlcE51bTogJzEnLCBcblx0aDI6ICdJcyB5b3VyIFdlYmNhbSBDb3ZlcmVkPycsIFxuXHRuYW1lOiAnSW50cm9kdWN0aW9uJywgXG5cdGNsYXNzbjogJ2NvbXBsZXRlJyxcblx0ZDogJzEgLyAzJyxcblx0Y29weTogJ0l04oCZcyBsaWtlbHkgeW91ciBjb21wdXRlciBhbHJlYWR5IGhhcyBhIGJ1aWx0LWluIGNhbWVyYSwgYW5kIGl04oCZcyBwb3NzaWJsZSBmb3IgdGhhdCBjYW1lcmEgdG8gYmUgdXNlZCB0byBzcHkgb24geW91LiAgPGJyPiAgSWYgeW91ciB3ZWJjYW0gZm9yIHdoYXRldmVyIHJlYXNvbiBoYXMgYmVlbiBoYWNrZWQsIHRoZSBwZXJzb24gb24gdGhlIG90aGVyIHNpZGUgY2FuIHRha2UgcGljdHVyZXMgYW5kIHZpZGVvIG9mIGFueXRoaW5nIG9yIGFueW9uZS4gTm8sIHRoaXMgaXNu4oCZdCBqdXN0IHBhcmFub2lh4oCTYSByZWNlbnQgc3VydmV5IGNvbmR1Y3RlZCBieSBIUCBmb3VuZCB0aGF0IDEwJSBpbiB0aGUgVS5TLiBlaXRoZXIga25vdyBzb21lb25lIHdob3NlIHdlYmNhbSB3YXMgaGFja2VkIG9yIGhhdmUgaGFkIHRoZWlyIG93biB3ZWJjYW0gaGFja2VkLid9LFxuXHR7IHN0ZXBOdW06ICcyJywgXG5cdGgyOiAnQUNUSU9OOiBDb3ZlciBZb3VyIFdlYmNhbScsIFxuXHRuYW1lOiAnUGVybWlzc2lvbnMnLCBcblx0Y2xhc3NuOiAnaW5jb21wbGV0ZScsXG5cdGQ6ICcyIC8gMycsXG5cdGNvcHk6ICdQbGVhc2UgaGF2ZSB5b3VyIHdlYmNhbSBjb3ZlcmVkIGFuZCBwcm9jZWVkIHRvIG5leHQgc3RlcC4gV2Ugd2lsbCBhY2Nlc3MgdG8geW91ciB3ZWJjYW0gdG8gbWFrZSBzdXJlIHlvdSBjb3ZlcmVkIHRoZSB3ZWJjYW0gcHJvcGVybHkuIENsaWNrIOKAnFRlc3TigJ0gYnV0dG9uIHRvIHByb2NlZWQgY2hhbGxlbmdlLid9LFxuXHR7IHN0ZXBOdW06ICczJywgXG5cdGgyOiAnR3JlYXQhIEl04oCZcyBwcm9wZXJseSBjb3ZlcmVkLicsIFxuXHRuYW1lOiAnQ292ZXIgeW91ciB3ZWJjYW0nLCBcblx0Y2xhc3NuOiAnaW5jb21wbGV0ZScsXG5cdGQ6ICczIC8gMycsXG5cdGNvcHk6ICdQbGVhc2UgcmVtZW1iZXIgdG8gbGVhdmUgeW91ciB3ZWJjYW0gY292ZXJlZCB3aGlsZSBpdHMgbm90IGJlaW5nIHVzZWQuIFRoaXMgY2FuIHByZXZlbnQuLi4nfSxcblx0e3N0ZXBOdW06ICcnLFxuXHRoMjogJycsXG5cdG5hbWU6ICcnLFxuXHRjbGFzc246ICcnLFxuXHRkOiAnJyxcblx0Y29weTogJyd9XG4gICAgXVxuXHRcblx0JDogcSA9IDA7XG5cdGxldCBpc0FjdGl2ZTtcblx0ZnVuY3Rpb24gc3RlcFVwKCkge1xuXHRcdHErKztcblx0XHRxMVN0ZXBzW3FdLmNsYXNzbiA9ICdjb21wbGV0ZSc7XG5cdFx0aWYgKHEgPT0gMiApe1xuXHRcdFx0aXNBY3RpdmUgPSB0cnVlO1xuXHRcdH1cblx0XHRpZiAocSA+IDIpIHtcblx0XHRcdGNvbXBsZXRlKCk7XG5cdFx0fVxuXHR9XG5cdCQ6IGhlYWRsaW5lID0gcTFTdGVwc1txXS5oMjtcblx0JDogYm9keSA9IHExU3RlcHNbcV0uY29weTtcblx0JDogZnJhY3Rpb24gPSBxMVN0ZXBzW3FdLmQ7XG5cdGxldCB2aWRlb1xuXHRhZnRlclVwZGF0ZSgoKSA9PiB7XG5cdHZpZGVvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN2aWRlb0VsZW1lbnRcIik7XG5cdFxuXHRpZiAobmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpIHtcbiAgXHRuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7IHZpZGVvOiB0cnVlIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24gKHN0cmVhbSkge1xuXHRcdFx0dmlkZW8uc3JjT2JqZWN0ID0gc3RyZWFtO1xuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIwcikge1xuICAgICAgY29uc29sZS5sb2coXCJOb3QgbG9hZGVkXCIpO1xuICAgIH0pO1xuXHRcdH1cbn0pXG5cbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+V2ViY2FtIENoYWxsZW5nZTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPCEtLSBDb21wbGV0aW9uIGNsYXNzPSdzdGVwJy8gLS0+XG48IS0tXG5cdDxoMz5XZWJjYW0gQ2hhbGxlbmdlIHtmcmFjdGlvbn08L2gzPlxuXHQ8dWw+XG5cdFx0eyNlYWNoIHExU3RlcHMgYXMgc3RlcH1cblx0XHRcdDxsaSBjbGFzcz17c3RlcC5jbGFzc259ID57c3RlcC5uYW1lfTwvbGk+XG5cdFx0ey9lYWNofVxuXHQ8L3VsPlxuPC9Qcm9ncmVzcz4gLS0+XG48c2VjdGlvbiBpZD1cInByb2dyZXNzXCI+XG5cdDxoMz5XZWJjYW0gQ2hhbGxlbmdlIHtmcmFjdGlvbn08L2gzPlxuXHQ8dWw+XG5cdFx0eyNlYWNoIHExU3RlcHMgYXMgc3RlcH1cblx0XHRcdDxsaSBjbGFzcz17c3RlcC5jbGFzc259ID57c3RlcC5uYW1lfTwvbGk+XG5cdFx0ey9lYWNofVxuXHQ8L3VsPlxuPC9zZWN0aW9uPlxuPGRpdiBjbGFzcz0ncXVpei1ob2xkZXInPlxuXHQ8aDE+e2hlYWRsaW5lfTwvaDE+XG5cdDxwPntib2R5fTwvcD4gXG5cdDxzZWN0aW9uIGlkPSduZXh0LXNraXAnPiBcbiAgICAgICAgPGJ1dHRvbiBvbjpjbGljaz17c3RlcFVwfSBjbGFzcz0nYnRuLWRhcmsnPk5leHQ8L2J1dHRvbj5cbiAgICA8L3NlY3Rpb24+XG5cdHsjaWYgaXNBY3RpdmV9XG5cdFx0PHZpZGVvIGF1dG9wbGF5PVwidHJ1ZVwiIGlkPVwidmlkZW9FbGVtZW50XCI+PC92aWRlbz5cblx0ey9pZn1cbjwvZGl2PlxuXHRcblx0XG48c3R5bGU+XG5cdG1haW57XG5cdFx0ZmxleC1mbG93OiByb3cgd3JhcDtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG5cdH1cbiAgIC5xdWl6LWhvbGRlciB7XG5cdCAgIGRpc3BsYXk6IGJsb2NrO1xuXHQgICB3aWR0aDogNjV2dzsgLyogNzIuNSBvcmlnaW5hbHkgKi9cblx0ICAgbGVmdDogMjB2dztcblx0ICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgICBwYWRkaW5nOiAyMHB4IDUwcHg7XG4gICB9XG4gICAuc3RlcHtcblx0XHRtYXJnaW4tYm90dG9tOiA1NXB4O1xuICAgfVxuICAgI3Byb2dyZXNzIHtcblx0ICAgbWFyZ2luLXRvcDogNTBweDtcbiAgIH1cbiAgIHVsIHtcblx0ICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDE1cHg7XG4gICB9XG4gICBsaSB7XG5cdCAgIG1hcmdpbjogMzBweCAwcHg7XG4gICB9XG4gICAuaW5jb21wbGV0ZSB7XG4gICAgICAgIGNvbG9yOiAjYTBhMGEwO1xuXHRcdGxpc3Qtc3R5bGUtdHlwZTogY2lyY2xlO1xuXHR9XG5cdC5jb21wbGV0ZSB7XG5cdFx0bGlzdC1zdHlsZS10eXBlOiBkaXNjO1xuXHR9XG5cdC5TaWRlLWhlYWRsaW5lIHtcblx0XHRmb250LXNpemU6IDI0cHg7XG5cdFx0Zm9udC13ZWlnaHQ6IDcwMDtcblx0fVxuXHQjdmlkZW9FbGVtZW50IHtcblx0XHRcblx0fVxuXHQuYnRuLWRhcmsge1xuICAgICAgICBjb2xvcjp3aGl0ZTtcbiAgICAgICAgYmFja2dyb3VuZDogIzBGMjAzMztcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICB3aWR0aDogMzAlO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgIH1cbiAgICBidXR0b24ge1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cblx0aW1wb3J0IHsgb25Nb3VudCwgYWZ0ZXJVcGRhdGUgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuXHQvL2ltcG9ydCBDb21wbGV0aW9uIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQ29tcGxldGlvbi5zdmVsdGUnXG5cdFxuXHRjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXHRcblx0ZnVuY3Rpb24gY29tcGxldGUoKSB7XG5cdFx0ZGlzcGF0Y2goJ21lc3NhZ2UnLCB7XG5cdFx0XHRxdWVzdGlvbjogMSxcblx0XHRcdGNvbXBsZXRlOiAndHJ1ZSdcblx0XHR9KTtcblx0fVxuXHRcdGxldCBxMVN0ZXBzID0gW1xuXHRcdHsgc3RlcE51bTogJzEnLCBcblx0XHRoMjogJ1doYXQgU2VhcmNoIEVuZ2luZSBkbyB5b3UgdXNlPycsIFxuXHRcdG5hbWU6ICdJbnRyb2R1Y3Rpb24nLCBcblx0XHRjbGFzc246ICdjb21wbGV0ZScsXG5cdFx0ZDogJzEgLyAzJyxcblx0XHRicm93c2VyczogWydHb29nbGUgQ2hyb21lJywgJ0R1Y2tEdWNrR28nLCAnQmluZycsICdTb21ldGhpbmcnLCAnU29tZXRoaW5nJ10sXG5cdFx0Y29weTogJ0RpZCB5b3Uga25vdyBldmVyeXRoaW5nIHRpbWUgeW91IGxvb2sgdXAgc29tZXRoaW5nIHVzaW5nIHNlYXJjaCBlbmdpbmUsIHlvdSBhcmUgZ2l2aW5nIHlvdXIgaW5mb3JtYXRpb24gdG8gdGhvdXNhbmRzIG9mIDNyZCBwYXJ0eSBhZHZlcnRpc2Vycz8gVmFzdCBhbW91bnQgb2YgeW91ciBkYXRhIGhhcyBiZWVuIHRha2VuIGZyb20geW91IHdpdGhvdXQgYSBzaW5nbGUgY29uc2VudCBvbmx5IHRvIG1hbmlwdWxhdGUgeW91ciBwdXJjaGFzZSBoYWJpdCBhbmQgbG9uZy10ZXJtIGJlaGF2aW9yLiBJbiB0aGlzIGV4ZXJjaXNlLCB3ZSB3aWxsIHdhbGsgdGhyb3VnaCB3aXRoIHlvdSBob3cgdG8gYXZvaWQuLi4uJ31cblx0XHRdXG5cdFx0bGV0IGJyb3dzZXJDaG9pY2UgPSBbXG5cdFx0XHR7bmFtZTogJ0dvb2dsZSBDaHJvbWUnLFxuXHRcdFx0dmFsdWU6IDEsXG5cdFx0XHRzYWZldHk6JzM3JScsXG5cdFx0XHRib2R5OidHb29nbGUgQ2hyb21lIGNvbGxlY3RlcyBYIG51bWJlciBvZiBpbmRpdmlkdWFsIGRhdGEgcGVyIHllYXIuIEdvb2dsZSBwcm9iYWJseSBrbm93cyBtb3JlIGFib3V0IHlvdSB0aGFuIGV2ZW4gRmFjZWJvb2sgZG9lcywgdGhhbmtzIHRvIHRoZSB0aGluZ3MgeW91IHRlbGwgaXQgd2hlbiB5b3UgdHlwZSBxdWVyaWVzIGludG8gaXRzIHNlYXJjaCBlbmdpbmUuIFRob3VnaCB0aGF04oCZcyBqdXN0IHRoZSB0aXAgb2YgaG93IGl0IHRyYWNrcyB5b3UuIEl0IGFsc28gaGFzIGl0cyB0cmFja2luZyBpbmZyYXN0cnVjdHVyZSBlbWJlZGRlZCBvbiB0aHJlZS1xdWFydGVycyBvZiB0aGUgdG9wIG1pbGxpb24gd2Vic2l0ZXMuIFNvIGNoYW5jZXMgYXJlIGl04oCZcyBmb2xsb3dpbmcgd2hhdCB5b3XigJlyZSBicm93c2luZyBvbmxpbmUuJ30sXG5cdFx0XHR7bmFtZTogJ0R1Y2tEdWNrR28nLFxuXHRcdFx0dmFsdWU6IDIsXG5cdFx0XHRzYWZldHk6JzczJScsXG5cdFx0XHRib2R5OidTb21ldGhpbmcgc29tZXRoaW5nJ30sXG5cdFx0XHR7bmFtZTogJ0R1Y2tEdWNrR28nLFxuXHRcdFx0dmFsdWU6IDMsXG5cdFx0XHRzYWZldHk6MSxcblx0XHRcdGJvZHk6J2R1Y2tkdWNrZ28gaXMgc28gZnJlYWtpbmcgYXdlc29tZS4gb21nLicsfSxcblx0XHRcdHtuYW1lOiAnc29tZXRoaW5nMScsXG5cdFx0XHR2YWx1ZTogNCxcblx0XHRcdHNhZmV0eToxLFxuXHRcdFx0Ym9keTonbWF5YmUgc3dpdGNoIHRvIGR1Y2tkdWNrZ28nLH0sXG5cdFx0XHR7bmFtZTogJ3NvbWV0aGluZzInLFxuXHRcdFx0dmFsdWU6IDUsXG5cdFx0XHRzYWZldHk6MSxcblx0XHRcdGJvZHk6J3Bvb29vb29vciBkZWNpc2lvbnMgIGhhaGFoYWhhaCcsfSxcblx0XHRcdFxuXHRcdF1cblx0XHRcblx0XHQkOiBxID0gMDtcblx0XHRsZXQgc2VjdGlvbiA9MDtcblx0XHRmdW5jdGlvbiBzdGVwVXAoKSB7XG5cdFx0XHRxKys7XG5cdFx0XHRxMVN0ZXBzW3FdLmNsYXNzbiA9ICdjb21wbGV0ZSc7XG5cdFx0XHRpZiAocSA9PSAyICl7XG5cdFx0XHRcdGlzQWN0aXZlID0gdHJ1ZTtcblx0XHRcdH1cblx0XHRcdGlmIChxID4gMikge1xuXHRcdFx0XHRjb21wbGV0ZSgpO1xuXHRcdFx0XHRzdHJlYW0uZ2V0VHJhY2tzKCkuZm9yRWFjaChmdW5jdGlvbih0cmFjaykge1xuICBcdFx0XHRcdFx0dHJhY2suc3RvcCgpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9XG5cdFx0JDogaGVhZGxpbmUgPSBxMVN0ZXBzW3FdLmgyO1xuXHRcdCQ6IGJvZHkgPSBxMVN0ZXBzW3FdLmNvcHk7XG5cdFx0JDogZnJhY3Rpb24gPSBxMVN0ZXBzW3FdLmQ7XG5cdFxuXHRcdGxldCBjaG9pY2UgPSBbJ0dvb2dsZSBDaHJvbWUnXTtcblx0XHRmdW5jdGlvbiBzaG93UmVzdWx0cyhldmVudCkge1xuXHRcdFx0c2VjdGlvbiA9MVxuXHRcdH1cblx0XHRmdW5jdGlvbiBzaG93QWx0ZXJuYXRpdmVzKGV2ZW50KSB7XG5cdFx0XHRzZWN0aW9uPTI7XG5cdFx0fVxuXHQ8L3NjcmlwdD5cblx0PHN2ZWx0ZTpoZWFkPlxuXHRcdDx0aXRsZT5TZWFyY2ggRW5naW5lPC90aXRsZT5cblx0PC9zdmVsdGU6aGVhZD5cblx0PHNlY3Rpb24gaWQ9XCJwcm9ncmVzc1wiPlxuXHRcdDxoMz5TZWFyY2ggRW5naW5lIHtmcmFjdGlvbn08L2gzPlxuXHRcdDx1bD5cblx0XHRcdHsjZWFjaCBxMVN0ZXBzIGFzIHN0ZXB9XG5cdFx0XHRcdDxsaSBjbGFzcz17c3RlcC5jbGFzc259ID57c3RlcC5uYW1lfTwvbGk+XG5cdFx0XHR7L2VhY2h9XG5cdFx0PC91bD5cblx0PC9zZWN0aW9uPlxuXHQ8ZGl2IGNsYXNzPSdxdWl6LWhvbGRlcic+XG5cdFx0eyNpZiBzZWN0aW9uPT0wfVxuXHRcdDxoMT57aGVhZGxpbmV9PC9oMT5cblx0XHQ8cD57Ym9keX08L3A+IFxuXHRcdDxmb3JtPlxuXHRcdFx0eyNlYWNoIGJyb3dzZXJDaG9pY2UgYXMgYnJvd3NlcnMsIGluZGV4fVxuXHRcdFx0XHQ8bGFiZWw+XG5cdFx0XHRcdFx0PGlucHV0IHR5cGU9cmFkaW8gYmluZDpncm91cD17Y2hvaWNlfSB2YWx1ZT17aW5kZXh9PlxuXHRcdFx0XHRcdFx0e2Jyb3dzZXJzLm5hbWV9XG5cdFx0XHRcdDwvbGFiZWw+XG5cdFx0XHR7L2VhY2h9XG5cdFx0PC9mb3JtPlxuXHRcdDxzZWN0aW9uIGlkPSduZXh0LXNraXAnPiBcblx0XHRcdDxidXR0b24gb246Y2xpY2s9e3Nob3dSZXN1bHRzfSBjbGFzcz0nYnRuLWRhcmsnPlN1Ym1pdDwvYnV0dG9uPlxuXHRcdDwvc2VjdGlvbj5cblx0XHR7OmVsc2UgaWYgc2VjdGlvbj09MX1cblx0XHRcdFxuXHRcdFx0PGgyPnticm93c2VyQ2hvaWNlW2Nob2ljZV0ubmFtZX08L2gyPlxuXHRcdFx0PHAgaWQ9J3dhcm5pbmcnPlNhZmV0eSBsZXZlbDoge2Jyb3dzZXJDaG9pY2VbY2hvaWNlXS5zYWZldHl9PC9wPlxuXHRcdFx0PHA+e2Jyb3dzZXJDaG9pY2VbY2hvaWNlXS5ib2R5fTwvcD5cblx0XHRcdDxidXR0b24gY2xhc3M9J2J0bi1kYXJrJyBvbjpjbGljaz17c2hvd0FsdGVybmF0aXZlc30+Q2hlY2sgQWx0ZXJuYXRpdmVzPC9idXR0b24+XG5cdFx0ezplbHNlfVxuXHRcdFx0PGgxPlN3aXRjaCBTZWFyY2ggRW5naW5lPC9oMT5cblx0XHRcdDxoMz5Ib3cgdG8gY2hhbmdlIHlvdXIgZGVmYXVsdCBicm93c2VyIGZvciB3aW5kb3dzPC9oMz4gXG5cdFx0XHQ8aDM+aG93IHRvIGNoYW5nZSB5b3VyIGRlZnVhbHQgYnJvd3NlciBmb3IgbWFjPC9oMz4gXG5cdFx0XHQ8dWw+XG5cdFx0XHRcdDxsaT5PcHRpb24gMTwvbGk+XG5cdFx0XHRcdDxsaT5PcHRpb24gMjwvbGk+XG5cdFx0XHRcdDxsaT5PcHRpb24gMzwvbGk+XG5cdFx0XHRcdDxsaT5PcHRpb24gNDwvbGk+XG5cdFx0XHRcdDxsaT5PcHRpb24gNTwvbGk+XG5cdFx0XHQ8L3VsPlxuXHRcdFx0PGJ1dHRvbiBjbGFzcz0nYnRuLWRhcmsnIG9uOmNsaWNrPXtjb21wbGV0ZX0+Q29tcGxldGUgQ2hhbGxlbmdlPC9idXR0b24+XG5cblx0XHR7L2lmfVxuXG5cdDwvZGl2PlxuXHRcdFxuXHRcdFxuXHQ8c3R5bGU+XG5cdFx0bWFpbntcblx0XHRcdGZsZXgtZmxvdzogcm93IHdyYXA7XG5cdFx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG5cdFx0fVxuXHQgICAucXVpei1ob2xkZXIge1xuXHRcdCAgIGRpc3BsYXk6IGJsb2NrO1xuXHRcdCAgIHdpZHRoOiA2NXZ3OyAvKiA3Mi41IG9yaWdpbmFseSAqL1xuXHRcdCAgIGxlZnQ6IDIwdnc7XG5cdFx0ICAgaGVpZ2h0OiAxMDB2aDtcblx0XHQgICBwYWRkaW5nOiAyMHB4IDUwcHg7XG5cdCAgIH1cblx0ICAgI3dhcm5pbmcge1xuXHRcdFx0Y29sb3I6IHJlZDtcblx0XHRcdGZvbnQtc2l6ZTogMjRweDtcblx0ICAgfVxuXHQgICAuc3RlcHtcblx0XHRcdG1hcmdpbi1ib3R0b206IDU1cHg7XG5cdCAgIH1cblx0ICAgI3Byb2dyZXNzIHtcblx0XHQgICBtYXJnaW4tdG9wOiA1MHB4O1xuXHQgICB9XG5cdCAgIHVsIHtcblx0XHQgICBwYWRkaW5nLWlubGluZS1zdGFydDogMTVweDtcblx0ICAgfVxuXHQgICBsaSB7XG5cdFx0ICAgbWFyZ2luOiAzMHB4IDBweDtcblx0ICAgfVxuXHQgICAuaW5jb21wbGV0ZSB7XG5cdFx0XHRjb2xvcjogI2EwYTBhMDtcblx0XHRcdGxpc3Qtc3R5bGUtdHlwZTogY2lyY2xlO1xuXHRcdH1cblx0XHQuY29tcGxldGUge1xuXHRcdFx0bGlzdC1zdHlsZS10eXBlOiBkaXNjO1xuXHRcdH1cblx0XHQuU2lkZS1oZWFkbGluZSB7XG5cdFx0XHRmb250LXNpemU6IDI0cHg7XG5cdFx0XHRmb250LXdlaWdodDogNzAwO1xuXHRcdH1cblx0XHQuYnRuLWRhcmsge1xuXHRcdFx0Y29sb3I6d2hpdGU7XG5cdFx0XHRiYWNrZ3JvdW5kOiAjMEYyMDMzO1xuXHRcdFx0Ym9yZGVyLXJhZGl1czogNnB4O1xuXHRcdFx0d2lkdGg6IDMwJTtcblx0XHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHRcdHBhZGRpbmc6IDVweCAxMHB4O1xuXHRcdH1cblx0XHRidXR0b24ge1xuXHRcdFx0Ym9yZGVyOiBub25lO1xuXHRcdFx0cGFkZGluZzogNXB4IDEwcHg7XG5cdFx0fVxuXHRcdGZvcm0ge1xuXHRcdFx0ZGlzcGxheTogZmxleDtcblx0XHRcdGZsZXgtZmxvdzogY29sdW1uO1xuXHRcdH1cblx0XHRsYWJlbCB7XG5cdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdH1cblx0PC9zdHlsZT4iLCI8c2NyaXB0PlxuXHRleHBvcnQgbGV0IHNlZ21lbnQ7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuXHRuYXYge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1mbG93OiByb3cgbm93cmFwO1xuXHRcdGhlaWdodDogNTBweDtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjM2U0YjU5O1xuXHRcdC8qYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LDYyLDAsMC4xKTsqL1xuXHRcdGZvbnQtd2VpZ2h0OiAzMDA7XG5cdFx0cGFkZGluZzogMCAxZW07XG5cdH1cblx0dWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0bGlzdC1zdHlsZTogbm9uZTtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuXHRcdG1hcmdpbjogMDtcblx0XHRwYWRkaW5nOiAwO1xuXHRcdGNvbG9yOiAjYzdjN2M3O1xuXHR9XG5cdGltZyB7XG5cdFx0LypkaXNwbGF5OiBibG9jaztcblx0XHRmbG9hdDogbGVmdDsqL1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHRcdGhlaWdodDogMzBweDtcblx0fVxuXHRsaXtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdG1hcmdpbjogMHB4IDIwcHggMHB4IDIwcHg7XG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0fVxuXG5cdFthcmlhLWN1cnJlbnRdIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHR9XG5cblx0W2FyaWEtY3VycmVudF06OmFmdGVyIHtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0Y29udGVudDogJyc7XG5cdFx0d2lkdGg6IGNhbGMoMTAwJSAtIDFlbSk7XG5cdFx0aGVpZ2h0OiAycHg7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjojZTc0ZTQ1O1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdC8qYm90dG9tOiAtMXB4OyovXG5cdH1cblx0YSB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRwYWRkaW5nOiAxZW0gMC41ZW07XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdG1hcmdpbjogMmVtLCAwZW07XG5cblx0fVxuPC9zdHlsZT5cblxuPG5hdj5cblx0PGEgaHJlZj0nL2hvbWUnPjxpbWcgIHNyYz0nLi9NWURsb2dvX3NtYWxsLnBuZycgYWx0PVwiTWluZCB5b3VyIERhdGEgbG9nb1wiPjwvYT5cblx0PHVsIGlkPVwibmF2aWdhdGlvblwiPlxuXHRcdDxsaT48YSBhcmlhLWN1cnJlbnQ9XCJ7c2VnbWVudCA9PT0gdW5kZWZpbmVkID8gJ3BhZ2UnIDogdW5kZWZpbmVkfVwiIGhyZWY9XCIuXCI+aG9tZTwvYT48L2xpPlxuXHRcdDxsaT48YSBhcmlhLWN1cnJlbnQ9XCJ7c2VnbWVudCA9PT0gJ3F1aXonID8gJ3BhZ2UnIDogdW5kZWZpbmVkfVwiIGhyZWY9XCJxdWl6XCI+cXVpejwvYT48L2xpPlxuXHRcdDxsaT48YSBhcmlhLWN1cnJlbnQ9XCJ7c2VnbWVudCA9PT0gJ2Fib3V0JyA/ICdwYWdlJyA6IHVuZGVmaW5lZH1cIiBocmVmPVwiYWJvdXRcIj5hYm91dDwvYT48L2xpPlxuXHRcdDxsaT48YSBhcmlhLWN1cnJlbnQ9XCJ7c2VnbWVudCA9PT0gJ3Jlc291cmNlcycgPyAncGFnZScgOiB1bmRlZmluZWR9XCIgaHJlZj1cInJlc291cmNlc1wiPnJlc291cmNlczwvYT48L2xpPlxuXG5cdFx0PCEtLSBmb3IgdGhlIGJsb2cgbGluaywgd2UncmUgdXNpbmcgcmVsPXByZWZldGNoIHNvIHRoYXQgU2FwcGVyIHByZWZldGNoZXNcblx0XHQgICAgIHRoZSBibG9nIGRhdGEgd2hlbiB3ZSBob3ZlciBvdmVyIHRoZSBsaW5rIG9yIHRhcCBpdCBvbiBhIHRvdWNoc2NyZWVuIC0tPlxuXHQ8IS0tXHQ8bGk+PGEgcmVsPXByZWZldGNoIGFyaWEtY3VycmVudD1cIntzZWdtZW50ID09PSAnYmxvZycgPyAncGFnZScgOiB1bmRlZmluZWR9XCIgaHJlZj1cImJsb2dcIj5ibG9nPC9hPjwvbGk+IC0tPlxuXHQ8L3VsPlxuPC9uYXY+XG4iLCI8c2NyaXB0PlxuICAgIGxldCBzdGVwcz0gW1xuICAgICAgICB7IGlkOicxJywgc3RhdHVzOidhY3RpdmUnfSxcbiAgICAgICAgeyBpZDonMScsIHN0YXR1czonYWN0aXZlJ30sXG4gICAgICAgIHsgaWQ6JzEnLCBzdGF0dXM6J2FjdGl2ZSd9LFxuICAgICAgICB7IGlkOicxJywgc3RhdHVzOidhY3RpdmUnfSxcbiAgICAgICAgeyBpZDonMScsIHN0YXR1czonYWN0aXZlJ30sXG4gICAgICAgIHsgaWQ6JzEnLCBzdGF0dXM6J2FjdGl2ZSd9LFxuICAgICAgICB7IGlkOicxJywgc3RhdHVzOidhY3RpdmUnfSxcbiAgICAgICAgeyBpZDonMScsIHN0YXR1czonYWN0aXZlJ30sXG4gICAgICAgIHsgaWQ6JzEnLCBzdGF0dXM6J2FjdGl2ZSd9LFxuICAgICAgICB7IGlkOicxJywgc3RhdHVzOidhY3RpdmUnfSxcbiAgICBdXG5cbiAgICAvL3RvdGFsIHRpbWUgZm9yIGNvdW50ZG93blxuaW1wb3J0IHsgdHdlZW5lZCB9IGZyb20gJ3N2ZWx0ZS9tb3Rpb24nO1xubGV0IHN0YXJ0PSAzMCAqIDYwO1xubGV0IHRpbWVyID0gdHdlZW5lZChzdGFydCk7XG4gIHNldEludGVydmFsKCgpID0+IHtcbiAgICBpZiAoJHRpbWVyID4gMCkgJHRpbWVyLS07XG4gIH0sIDEwMDApO1xuXG4gICQ6IG1pbnV0ZXMgPSBNYXRoLmZsb29yKCR0aW1lciAvIDYwKTtcbiAgJDogbWlubmFtZSA9IG1pbnV0ZXMgPiAxID8gXCJtaW5zXCIgOiBcIm1pblwiO1xuICAkOiBzZWNvbmRzID0gTWF0aC5mbG9vcigkdGltZXIgLSBtaW51dGVzICogNjApXG5cbjwvc2NyaXB0PlxuPHNlY3Rpb24gaWQ9XCJ0aW1lclwiPlxuICAgIDxzcGFuIGlkPSdyZW1haW5pbmcnPlRpbWUgcmVtYWluaW5nOjwvc3Bhbj4gXG4gICAgPHNwYW4gaWQ9J21pbnV0ZXMnPnttaW51dGVzfTp7c2Vjb25kc308L3NwYW4+XG48L3NlY3Rpb24+XG48c2VjdGlvbiBjbGFzcz0nZG9uZSc+XG4gICAgPGltZyBzcmM9Jy4vbG9jay1hY3RpdmUuc3ZnJyBhbHQ9XCJjb21wbGV0ZWRcIiBjbGFzcz0nYWN0aXZlIGxvY2snIC8+XG4gICAgICAgIDxpbWcgc3JjPScuL0VsbGlwc2UtYWN0aXZlLnBuZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2VsbGlwc2UgYWN0aXZlJyAvPlxuICAgICAgICA8aW1nIHNyYz0nLi9FbGxpcHNlLWluYWN0aXZlLnBuZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2VsbGlwc2UgaW5hY3RpdmUnIC8+XG4gICAgPGltZyBzcmM9Jy4vbG9jay1pbmFjdGl2ZS5zdmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdpbmFjdGl2ZSBsb2NrJyAvPlxuICAgICAgICA8aW1nIHNyYz0nLi9FbGxpcHNlLWluYWN0aXZlLnBuZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2VsbGlwc2UgaW5hY3RpdmUnIC8+XG4gICAgICAgIDxpbWcgc3JjPScuL0VsbGlwc2UtaW5hY3RpdmUucG5nJyBhbHQ9XCJjb21wbGV0ZWRcIiBjbGFzcz0nZWxsaXBzZSBpbmFjdGl2ZScgLz5cbiAgICA8aW1nIHNyYz0nLi9sb2NrLWluYWN0aXZlLnN2ZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2luYWN0aXZlIGxvY2snIC8+IFxuICAgICAgICA8aW1nIHNyYz0nLi9FbGxpcHNlLWluYWN0aXZlLnBuZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2VsbGlwc2UgaW5hY3RpdmUnIC8+XG4gICAgICAgIDxpbWcgc3JjPScuL0VsbGlwc2UtaW5hY3RpdmUucG5nJyBhbHQ9XCJjb21wbGV0ZWRcIiBjbGFzcz0nZWxsaXBzZSBpbmFjdGl2ZScgLz5cbiAgICA8aW1nIHNyYz0nLi9sb2NrLWluYWN0aXZlLnN2ZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2luYWN0aXZlIGxvY2snIC8+XG4gICAgICAgIDxpbWcgc3JjPScuL0VsbGlwc2UtaW5hY3RpdmUucG5nJyBhbHQ9XCJjb21wbGV0ZWRcIiBjbGFzcz0nZWxsaXBzZSBpbmFjdGl2ZScgLz5cbiAgICAgICAgPGltZyBzcmM9Jy4vRWxsaXBzZS1pbmFjdGl2ZS5wbmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdlbGxpcHNlIGluYWN0aXZlJyAvPlxuXG4gICAgPGltZyBzcmM9Jy4vbG9jay1pbmFjdGl2ZS5zdmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdpbmFjdGl2ZSBsb2NrJyAvPlxuICAgICAgICA8aW1nIHNyYz0nLi9FbGxpcHNlLWluYWN0aXZlLnBuZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2VsbGlwc2UgaW5hY3RpdmUnIC8+XG4gICAgICAgIDxpbWcgc3JjPScuL0VsbGlwc2UtaW5hY3RpdmUucG5nJyBhbHQ9XCJjb21wbGV0ZWRcIiBjbGFzcz0nZWxsaXBzZSBpbmFjdGl2ZScgLz5cblxuICAgIDxpbWcgc3JjPScuL2xvY2staW5hY3RpdmUuc3ZnJyBhbHQ9XCJjb21wbGV0ZWRcIiBjbGFzcz0naW5hY3RpdmUgbG9jaycgLz5cbiAgICAgICAgPGltZyBzcmM9Jy4vRWxsaXBzZS1pbmFjdGl2ZS5wbmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdlbGxpcHNlIGluYWN0aXZlJyAvPlxuICAgICA8aW1nIHNyYz0nLi9FbGxpcHNlLWluYWN0aXZlLnBuZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2VsbGlwc2UgaW5hY3RpdmUnIC8+XG5cbiAgICA8aW1nIHNyYz0nLi9sb2NrLWluYWN0aXZlLnN2ZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2luYWN0aXZlIGxvY2snIC8+XG4gICAgICAgIDxpbWcgc3JjPScuL0VsbGlwc2UtaW5hY3RpdmUucG5nJyBhbHQ9XCJjb21wbGV0ZWRcIiBjbGFzcz0nZWxsaXBzZSBpbmFjdGl2ZScgLz5cbiAgICAgICAgPGltZyBzcmM9Jy4vRWxsaXBzZS1pbmFjdGl2ZS5wbmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdlbGxpcHNlIGluYWN0aXZlJyAvPlxuXG4gICAgPGltZyBzcmM9Jy4vbG9jay1pbmFjdGl2ZS5zdmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdpbmFjdGl2ZSBsb2NrJyAvPlxuICAgICAgICA8aW1nIHNyYz0nLi9FbGxpcHNlLWluYWN0aXZlLnBuZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2VsbGlwc2UgaW5hY3RpdmUnIC8+XG4gICAgICAgIDxpbWcgc3JjPScuL0VsbGlwc2UtaW5hY3RpdmUucG5nJyBhbHQ9XCJjb21wbGV0ZWRcIiBjbGFzcz0nZWxsaXBzZSBpbmFjdGl2ZScgLz5cblxuICAgIDxpbWcgc3JjPScuL2xvY2staW5hY3RpdmUuc3ZnJyBhbHQ9XCJjb21wbGV0ZWRcIiBjbGFzcz0naW5hY3RpdmUgbG9jaycgLz5cbiAgICAgICAgPGltZyBzcmM9Jy4vRWxsaXBzZS1pbmFjdGl2ZS5wbmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdlbGxpcHNlIGluYWN0aXZlJyAvPlxuICAgICAgICA8aW1nIHNyYz0nLi9FbGxpcHNlLWluYWN0aXZlLnBuZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2VsbGlwc2UgaW5hY3RpdmUnIC8+XG5cbiAgICA8aW1nIHNyYz0nLi9sb2NrLWluYWN0aXZlLnN2ZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2luYWN0aXZlIGxvY2snIC8+XG48L3NlY3Rpb24+XG48c3R5bGU+XG4gICAgI3RpbWVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgXG4gICAgICAgIHdpZHRoOiAyMHZ3O1xuICAgICAgICBoZWlnaHQ6IDEzNXB4O1xuICAgICAgICAvKmJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYzdjN2M3OyovXG4gICAgfVxuICAgICNyZW1haW5pbmcge1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIHBhZGRpbmc6IDVweCAwcHggMjBweCAwcHg7XG4gICAgICAgIFxuXG4gICAgfVxuICAgICNtaW51dGVzIHtcbiAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgICAgIGJhY2tncm91bmQ6ICMwRjIwMzM7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICAgd2lkdGg6IDkuN3Z3O1xuICAgICAgICBoZWlnaHQ6IDYuN3ZoO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgXG5cbiAgICB9XG4gICAgLmRvbmUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDU1cHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogNDBweDtcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgIH1cbiAgICAubG9jayB7XG4gICAgICAgIHdpZHRoOiAzMnB4O1xuICAgICAgICBtYXJnaW46IDEwcHg7XG4gICAgfVxuICAgIC5lbGxpcHNlIHtcbiAgICAgICAgd2lkdGg6NnB4O1xuICAgICAgICBoZWlnaHQ6NnB4O1xuICAgICAgICBtYXJnaW46IDNweDtcbiAgICB9XG4gICAgLmFjdGl2ZSB7XG5cbiAgICB9XG4gICAgLmluYWN0aXZlIHtcblxuICAgIH1cbjwvc3R5bGU+XG48IS0tXG5cbiAgICAgICAgXG48ZGl2IGNsYXNzPSdkb25lJz5cbiAgICB7aWYgYWN0aXZlfVxuICAgIDxpbWcgc3JjPScuL2xvY2stYWN0aXZlLnN2ZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2FjdGl2ZSBsb2NrJyAvPlxuICAgIFxuICAgICAgICA8aW1nIHNyYz0nLi9FbGxpcHNlLWFjdGl2ZS5wbmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdlbGxpcHNlIGFjdGl2ZScgLz5cbiAgICAgICAgPGltZyBzcmM9Jy4vRWxsaXBzZS1pbmFjdGl2ZS5wbmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdlbGxpcHNlIGluYWN0aXZlJyAvPlxuPC9kaXY+XG48L2Rpdj4tLT4iLCI8c2NyaXB0PlxuXHRpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuXHRjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG5cdC8vY29uZmlybSBjb21sZXRpb24gb2YgcXVpeiB0byBtYXN0ZXIgcXVpeiBjb21wb25lbnRcblx0ZnVuY3Rpb24gY29tcGxldGUoKSB7XG5cdFx0ZGlzcGF0Y2goJ21lc3NhZ2UnLCB7XG5cdFx0XHRxdWVzdGlvbjogMiwgLy9RLTEgYmVjYXVlIG9mIGFycmF5XG5cdFx0XHRjb21wbGV0ZTogJ3RydWUnXG5cdFx0fSk7XG5cdH1cblx0bGV0IHEgPSAwO1xuXHRmdW5jdGlvbiBhZHZhbmNlKCkge1xuXHRcdHErPTI7XG5cdFx0Y29uc29sZS5sb2cocSk7XG5cdH1cbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+SHR0cHMgRXZlcnl3aGVyZTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxueyNpZiBxPT0wfVxuPHNlY3Rpb24+XG5cdDxoMj5IdHRwcyBFdmVyeXdoZXJlPC9oMj4gXG5cdFx0PHA+V2hlbiB5b3UgY29ubmVjdCB0byBhIHdlYnNpdGUgd2l0aCByZWd1bGFyIEhUVFAsIHlvdXIgYnJvd3NlciBsb29rcyB1cCB0aGUgSVAgYWRkcmVzcyB0aGF0IGNvcnJlc3BvbmRzIHRvIHRoZSB3ZWJzaXRlLCBjb25uZWN0cyB0byB0aGF0IElQIGFkZHJlc3MsIGFuZCBhc3N1bWVzIGl04oCZcyBjb25uZWN0ZWQgdG8gdGhlIGNvcnJlY3Qgd2ViIHNlcnZlci4gRGF0YSBpcyBzZW50IG92ZXIgdGhlIGNvbm5lY3Rpb24gaW4gY2xlYXIgdGV4dC4gQW4gZWF2ZXNkcm9wcGVyIG9uIGEgV2ktRmkgbmV0d29yaywgeW91ciBpbnRlcm5ldCBzZXJ2aWNlIHByb3ZpZGVyLCBvciBnb3Zlcm5tZW50IGludGVsbGlnZW5jZSBhZ2VuY2llcywgY2FuIHNlZSB0aGUgd2ViIHBhZ2VzIHlvdeKAmXJlIHZpc2l0aW5nIGFuZCB0aGUgZGF0YSB5b3XigJlyZSB0cmFuc2ZlcnJpbmcgYmFjayBhbmQgZm9ydGguXG5cdFx0PC9wPlxuXHRcdDxwPk1hbnkgc2l0ZXMgb24gdGhlIHdlYiBvZmZlciBzb21lIGxpbWl0ZWQgc3VwcG9ydCBmb3IgZW5jcnlwdGlvbiBvdmVyIEhUVFBTLCBidXQgbWFrZSBpdCBkaWZmaWN1bHQgdG8gdXNlLiBGb3IgaW5zdGFuY2UsIHRoZXkgbWF5IGRlZmF1bHQgdG8gdW5lbmNyeXB0ZWQgSFRUUCwgb3IgZmlsbCBlbmNyeXB0ZWQgcGFnZXMgd2l0aCBsaW5rcyB0aGF0IGdvIGJhY2sgdG8gdGhlIHVuZW5jcnlwdGVkIHNpdGUuIFRoZSBIVFRQUyBFdmVyeXdoZXJlIGV4dGVuc2lvbiBmaXhlcyB0aGVzZSBwcm9ibGVtcyBieSB1c2luZyBjbGV2ZXIgdGVjaG5vbG9neSBtYWtlIGV2ZXJ5IHNpdGUgdXNldG8gcmV3cml0ZSByZXF1ZXN0cyB0byB0aGVzZSBzaXRlcyB0byBIVFRQUy5XaXRoIEhUVFBTLCBwZW9wbGUgcnVubmluZyB0aGUgbmV0d29yayBiZXR3ZWVuIHlvdXIgZGV2aWNlIGFuZCB0aGUgc2VydmVyIGhvc3RpbmcgdGhlIHdlYnNpdGUgeW914oCZcmUgYnJvd3NpbmcsIG9yIG90aGVyIHByeWluZyBleWVzLCBjYW7igJl0IHNlZSB5b3VyIHJlcXVlc3RzIGFuZCB5b3VyIGludGVybmV0IHRyYWZmaWMuIFxuXHRcdDwvcD5cblx0XHQ8YnV0dG9uIG9uOmNsaWNrPXthZHZhbmNlfT5Db250aW51ZSB0byBuZXh0IHBhZ2U8L2J1dHRvbj5cbjwvc2VjdGlvbj5cbns6ZWxzZX1cbjxzZWN0aW9uPlxuXHQ8aDI+RG93bmxvYWQgSFRUUFMgRXZlcnl3aGVyZSBleHRlbnNpb248L2gyPlxuXHQ8cD5JbmZvcm1haXRvbiBhYm91dCB0aGlzIGV4dGVuc2lvbi4gV2hhdCBpdCBkb2VzIGV4YWN0bHkuIEhvdyBpdCB3b3Jrcy4gV2hhdCBiZW5lZml0cyB1c2VycyBnZXQgZnJvbSBoYXZpbmcgdGhpcyBleHRlbnNpb24uIFRoZSBFRkYgaGFzIGRldmVsb3BlZCBhIGJyb3dzZXIgZXh0ZW5zaW9uIHRoYXQgbWFrZXMgc3VyZSB0aGF0IHlvdSBhY2Nlc3MgYWxsIHdlYnNpdGVzIHRoYXQgb2ZmZXIgSFRUUFMgdXNpbmfigKYgSFRUUFMuPC9wPlxuPC9zZWN0aW9uPlxuPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0PGJ1dHRvbj5Eb3dubG9hZCBleHRlbnNpb24gbm93PC9idXR0b24+XG5cdDxidXR0b24+QWxyZWFkeSBIYXZlIGl0PC9idXR0b24+XG5cdDxidXR0b24+RG9uJ3Qgd2FudCB0byBkb3dubG9hZCBpdDwvYnV0dG9uPlxuXHQ8YnV0dG9uIG9uOmNsaWNrPXtjb21wbGV0ZX0+U3VibWl0PC9idXR0b24+XG48L2Rpdj5cbnsvaWZ9XG48c3R5bGU+XG4gICAuYnV0dG9uLWhvbGRlciB7XG5cdHdpZHRoOiAyN3Z3O1xuXHRkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgIH1cbiAgIGJ1dHRvbiB7XG5cdCAgIHBhZGRpbmc6IDEwcHggMjBweDtcblx0ICAgbWFyZ2luOiAxMHB4O1xuXHQgICBib3JkZXI6IGJsYWNrIHNvbGlkIDBweDtcblx0ICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuXHRpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuXHRjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG5cdC8vY29uZmlybSBjb21sZXRpb24gb2YgcXVpeiB0byBtYXN0ZXIgcXVpeiBjb21wb25lbnRcblx0ZnVuY3Rpb24gY29tcGxldGUoKSB7XG5cdFx0ZGlzcGF0Y2goJ21lc3NhZ2UnLCB7XG5cdFx0XHRxdWVzdGlvbjogMiwgLy9RLTEgYmVjYXVlIG9mIGFycmF5XG5cdFx0XHRjb21wbGV0ZTogJ3RydWUnXG5cdFx0fSk7XG5cdH1cblx0ZnVuY3Rpb24gaW5jb21wbGV0ZSgpIHtcblx0XHRkaXNwYXRjaCgnbWVzc2FnZScsIHtcblx0XHRcdHF1ZXN0aW9uOiAyLCAvL1EtMSBiZWNhdWUgb2YgYXJyYXlcblx0XHRcdGNvbXBsZXRlOiAnZmFsc2UnXG5cdFx0fSk7XG5cdH1cblx0bGV0IHEgPSAwO1xuXHRmdW5jdGlvbiBhZHZhbmNlKCkge1xuXHRcdHErKztcblx0XHRjb25zb2xlLmxvZyhxKTtcblx0fVxuXHRmdW5jdGlvbiBhZHZhbmNlVHdvKCkge1xuXHRcdHErPTI7XG5cdFx0Y29uc29sZS5sb2cocSk7XG5cdH1cbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+TG9jYXRpb24gVHJhY2tpbmc8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbnsjaWYgcT09MH1cbjxzZWN0aW9uPlxuXHQ8aDI+TG9jYXRpb24gVHJhY2tpbmc8L2gyPiBcblx0XHQ8cD5QZXJ2YXNpdmUgdHJhY2tpbmcgb2YgbG9jYXRpb24gYXQgdGhlIHZlcnkgbGVhc3Qgcmlza3MgcHV0dGluZyB5b3UgYXQgYSBkaXNhZHZhbnRhZ2UgYXMgYSBjb25zdW1lci4gQ2VydGFpbmx5IGlmIHlvdSBsaXZlIHNvbWV3aGVyZSB3aXRob3V0IGEgcHJvcGVyIHJlZ3VsYXRvcnkgZnJhbWV3b3JrIGZvciBwcml2YWN5LiBJdOKAmXMgYWxzbyB3b3J0aCBiZWFyaW5nIGluIG1pbmQgaG93IGxheCB0ZWNoIGdpYW50cyBjYW4gYmUgd2hlcmUgbG9jYXRpb24gcHJpdmFjeSBpcyBjb25jZXJuZWQg4oCUIHdoZXRoZXIgaXTigJlzIFViZXLigJlzIGluZmFtb3VzIOKAmGdvZCB2aWV34oCZIHRvb2wgb3IgU25hcGNoYXQgbGVha2luZyBzY2hvb2xraWRz4oCZIGxvY2F0aW9uIG9yIFN0cmF2YSBhY2NpZGVudGFsbHkgcmV2ZWFsaW5nIHRoZSBsb2NhdGlvbnMgb2YgbWlsaXRhcnkgYmFzZXMuIFRoZWlyIHJlY29yZCBpcyBwcmV0dHkgdGVycmlibGUuPC9wPlx0XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17YWR2YW5jZX0+Q29udGludWUgdG8gbmV4dCBwYWdlPC9idXR0b24+XG48L3NlY3Rpb24+XG57OmVsc2UgaWYgcT09MX1cbjxzZWN0aW9uPlxuXHQ8aDI+V2hhdCBtb2JpbGUgZGV2aWNlIGRvIHlvdSB1c2U/PC9oMj5cblx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8YnV0dG9uIG9uOmNsaWNrPXthZHZhbmNlfT5pT1M8L2J1dHRvbj5cblx0XHQ8YnV0dG9uIG9uOmNsaWNrPXthZHZhbmNlVHdvfT5hbmRyb2lkPC9idXR0b24+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlIGlmIHE9PTJ9XG48c2VjdGlvbj5cblx0PGgyPlR1cm4gbG9jYWl0b24gb2ZmIG9uIElPUyBkZXZpY2U8L2gyPlxuXHQ8cD5TdGVwIDEuIEdvIHRvIFNldHRpbmdzID4gUHJpdmFjeSA+IExvY2F0aW9uIFNlcnZpY2VzLjwvcD5cblx0PHA+U3RlcCAyLiBNYWtlIHN1cmUgdGhhdCBMb2NhdGlvbiBTZXJ2aWNlcyBpcyBvbi48L3A+XG5cdDxwPlN0ZXAgMy4gU2Nyb2xsIGRvd24gdG8gZmluZCB0aGUgYXBwLjwvcD5cblx0PHA+U3RlcCA0LiBUYXAgdGhlIGFwcCBhbmQgc2VsZWN0IGFuIG9wdGlvbjo8L3A+XG5cdDx1bD5cblx0XHQ8bGk+TmV2ZXI6IFByZXZlbnRzIGFjY2VzcyB0byBMb2NhdGlvbiBTZXJ2aWNlcyBpbmZvcm1hdGlvbi48L2xpPlxuXHRcdDxsaT5Bc2sgTmV4dCBUaW1lOiBUaGlzIGFsbG93cyB5b3UgdG8gY2hvb3NlIEFsd2F5cyBXaGlsZSBVc2luZyBBcHAsIEFsbG93IE9uY2UsIG9yIERvbid0IEFsbG93LjwvbGk+XG5cdFx0PGxpPldoaWxlIFVzaW5nIHRoZSBBcHA6IEFsbG93cyBhY2Nlc3MgdG8gTG9jYXRpb24gU2VydmljZXMgb25seSB3aGVuIHRoZSBhcHAgb3Igb25lIG9mIGl0cyBmZWF0dXJlcyBpcyB2aXNpYmxlIG9uIHNjcmVlbi4gSWYgYW4gYXBwIGlzIHNldCB0byBXaGlsZSBVc2luZyB0aGUgQXBwLCB5b3UgbWlnaHQgc2VlIHlvdXIgc3RhdHVzIGJhciB0dXJuIGJsdWUgd2l0aCBhIG1lc3NhZ2UgdGhhdCBhbiBhcHAgaXMgYWN0aXZlbHkgdXNpbmcgeW91ciBsb2NhdGlvbi48L2xpPlxuXHRcdDxsaT5BbHdheXM6IEFsbG93cyBhY2Nlc3MgdG8geW91ciBsb2NhdGlvbiBldmVuIHdoZW4gdGhlIGFwcCBpcyBpbiB0aGUgYmFja2dyb3VuZC48L2xpPlxuXHQ8L3VsPlxuXHQ8aDM+RGlkIHlvdSB0dXJuIG9mZiBsb2NhdGlvbiBvbiB5b3VyIGRldmljZT48L2gzPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxidXR0b24gb246Y2xpY2s9e2NvbXBsZXRlfT5ZZXMsIEkgZGlkPC9idXR0b24+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17aW5jb21wbGV0ZX0+Tm8sIEkgZGlkbid0PC9idXR0b24+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlfVxuPHNlY3Rpb24+XG5cdDxoMj5UdXJuIGxvY2FpdG9uIG9mZiBvbiBhbmQgQW5kcm9pZCBEZXZpY2U8L2gyPlxuXHQ8cD5TdGVwIDEuIEdvIHRvIFNldHRpbmdzID4gUHJpdmFjeSA+IExvY2F0aW9uIFNlcnZpY2VzLjwvcD5cblx0PHA+U3RlcCAyLiBNYWtlIHN1cmUgdGhhdCBMb2NhdGlvbiBTZXJ2aWNlcyBpcyBvbi48L3A+XG5cdDxwPlN0ZXAgMy4gU2Nyb2xsIGRvd24gdG8gZmluZCB0aGUgYXBwLjwvcD5cblx0PHA+U3RlcCA0LiBUYXAgdGhlIGFwcCBhbmQgc2VsZWN0IGFuIG9wdGlvbjo8L3A+XG5cdDx1bD5cblx0XHQ8bGk+TmV2ZXI6IFByZXZlbnRzIGFjY2VzcyB0byBMb2NhdGlvbiBTZXJ2aWNlcyBpbmZvcm1hdGlvbi48L2xpPlxuXHRcdDxsaT5Bc2sgTmV4dCBUaW1lOiBUaGlzIGFsbG93cyB5b3UgdG8gY2hvb3NlIEFsd2F5cyBXaGlsZSBVc2luZyBBcHAsIEFsbG93IE9uY2UsIG9yIERvbid0IEFsbG93LjwvbGk+XG5cdFx0PGxpPldoaWxlIFVzaW5nIHRoZSBBcHA6IEFsbG93cyBhY2Nlc3MgdG8gTG9jYXRpb24gU2VydmljZXMgb25seSB3aGVuIHRoZSBhcHAgb3Igb25lIG9mIGl0cyBmZWF0dXJlcyBpcyB2aXNpYmxlIG9uIHNjcmVlbi4gSWYgYW4gYXBwIGlzIHNldCB0byBXaGlsZSBVc2luZyB0aGUgQXBwLCB5b3UgbWlnaHQgc2VlIHlvdXIgc3RhdHVzIGJhciB0dXJuIGJsdWUgd2l0aCBhIG1lc3NhZ2UgdGhhdCBhbiBhcHAgaXMgYWN0aXZlbHkgdXNpbmcgeW91ciBsb2NhdGlvbi48L2xpPlxuXHRcdDxsaT5BbHdheXM6IEFsbG93cyBhY2Nlc3MgdG8geW91ciBsb2NhdGlvbiBldmVuIHdoZW4gdGhlIGFwcCBpcyBpbiB0aGUgYmFja2dyb3VuZC48L2xpPlxuXHQ8L3VsPlxuXHQ8aDM+RGlkIHlvdSB0dXJuIG9mZiBsb2NhdGlvbiBvbiB5b3VyIGRldmljZT48L2gzPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxidXR0b24gb246Y2xpY2s9e2NvbXBsZXRlfT5ZZXMsIEkgZGlkPC9idXR0b24+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17aW5jb21wbGV0ZX0+Tm8sIEkgZGlkbid0PC9idXR0b24+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuey9pZn1cbjxzdHlsZT5cbiAgIC5idXR0b24taG9sZGVyIHtcblx0d2lkdGg6IDI3dnc7XG5cdGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgfVxuICAgYnV0dG9uIHtcblx0ICAgcGFkZGluZzogMTBweCAyMHB4O1xuXHQgICBtYXJnaW46IDEwcHg7XG5cdCAgIGJvcmRlcjogYmxhY2sgc29saWQgMHB4O1xuXHQgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cblx0Ly9jb25maXJtIGNvbWxldGlvbiBvZiBxdWl6IHRvIG1hc3RlciBxdWl6IGNvbXBvbmVudFxuXHRmdW5jdGlvbiBjb21wbGV0ZSgpIHtcblx0XHRkaXNwYXRjaCgnbWVzc2FnZScsIHtcblx0XHRcdHF1ZXN0aW9uOiAyLCAvL1EtMSBiZWNhdWUgb2YgYXJyYXlcblx0XHRcdGNvbXBsZXRlOiAndHJ1ZSdcblx0XHR9KTtcblx0fVxuXHRmdW5jdGlvbiBpbmNvbXBsZXRlKCkge1xuXHRcdGRpc3BhdGNoKCdtZXNzYWdlJywge1xuXHRcdFx0cXVlc3Rpb246IDIsIC8vUS0xIGJlY2F1ZSBvZiBhcnJheVxuXHRcdFx0Y29tcGxldGU6ICdmYWxzZSdcblx0XHR9KTtcblx0fVxuXHRsZXQgcSA9IDA7XG5cdGZ1bmN0aW9uIGFkdmFuY2UoKSB7XG5cdFx0cSsrO1xuXHRcdGNvbnNvbGUubG9nKHEpO1xuXHR9XG5cdGZ1bmN0aW9uIGFkdmFuY2VUd28oKSB7XG5cdFx0cSs9Mjtcblx0XHRjb25zb2xlLmxvZyhxKTtcblx0fVxuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5UcmFja2VyIGJsb2NrZXI8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbnsjaWYgcT09MH1cbjxzZWN0aW9uPlxuXHQ8aDI+VHJhY2tlciBibG9ja2VyPC9oMj4gXG5cdDxwPkFyZSB5b3UgYmVpbmcgdHJhY2tlZCBvbiB0aGUgd2ViPyBBbG1vc3QgZGVmaW5pdGVseS48L3A+XG5cdDxwPldoaWxlIGNvb2tpZXMgYXJlIHRoZSBsaXR0bGUgaWRlbnRpZmllcnMgZm9yIHdlYnNpdGVzIHRvIHJlY29nbml6ZSB5b3UgdGhyb3VnaCBtdWx0aXBsZSB2aXNpdHMsIHRyYWNrZXJzIHVzZSB0aG9zZSBjb29raWVzIHRvIHJlY29nbml6ZSB5b3UgYW5kIGFuYWx5emUgeW91ciBiZWhhdmlvci4gVHJhY2tlcnMgd2lsbCBsb2cgdGhlIHNpdGUgeW91IHZpc2l0LCB0aGUgZGF0ZSBhbmQgdGltZSwgYW5kIHlvdXIgY29tcHV0ZXIgc2V0dGluZ3MgKG1vcmUgcG93ZXJmdWwgdHJhY2tlcnMgY2FuIGV2ZW4gd2F0Y2ggeW91ciBtb3VzZSBtb3ZlbWVudCkuIDwvcD5cblx0PHA+QSB0cmFja2VyIGxpa2UgR29vZ2xlIGFkc2Vuc2UgaXMgd2F0Y2hpbmcgeW91IG92ZXIgbXVsdGlwbGUgc2l0ZXMgdG8gYW5hbHl6ZSB5b3VyIGludGVyZXN0cy4gWW91IHZpc2l0ZWQgYSBjYXIgc2FsZSBzaXRlIHllc3RlcmRheT8gVG9kYXkgd2Ugc2hvdyB5b3UgQWRzIG9mIGNhcnMuIFRoZSBjaGFuY2UgaXMgaGlnaGVyIHRoYXQgeW91IGxpa2UgdGhlIGFkIGFuZCBjbGljayBpdCBpbnN0ZWFkIG9mIGFuIGFkIHdpdGggY2F0cy4gKGJhZCBleGFtcGxlLi4uIEV2ZXJ5b25lIGNsaWNrcyBjYXQgYWRzLi4uKVxuXHQ8L3A+XG5cdDxwPklmIHlvdSBjaGFuZ2UgdGhlIHNpdGUgKGVnIGZyb20gdGhlIGZyb250IHBhZ2UgdG8gdGhlIG5ld3MgYXJlYSkgdGhlIHRyYWNrZXIgcmVjb2duaXplIHlvdSBhbmQgY29tYmluZXMgdGhlIGRhdGEgLSBcInVzZXIgQUJDIHN0YXllZCAzM3MgaW4gdGhlIGZyb250IHBhZ2UgYW5kIHN3aXRjaGVkIHRvIHRoZSBuZXdzIGFyZWEgYW5kIHN0YXllZCB0aGVyZSBmb3IgM21pblwiLiBGb3Igd2VibWFzdGVyIHBvd2VyZnVsIGRhdGEgYmVjYXVzZSB0aGV5IGtub3cgaG93IGltcG9ydGFudCB0aGVpciBmcm9udCBwYWdlIGlzIGFuZCB3aGVyZSB0aGV5IGhhdmUgdG9vIGNoYW5nZSBzb21ldGhpbmcuIFxuXHQ8L3A+XG5cdDxwPlRyYWNrZXJzIGFyZSBpbnN0YWxsZWQgb24gbWFueSB3ZWJzaXRlcyB0byBsb2cgeW91ciBiZWhhdmlvci4gRWFjaCB0aW1lIHlvdSBvcGVuIGEgd2Vic2l0ZSB3aXRoIGEgdHJhY2tlciAob2YgY291cnNlIGV2ZXJ5IHN1Yi1zaXRlIG9mIGEgd2Vic2l0ZSB0b28pLiBUcmFja2VycyBhcmUgaW5jbHVkZWQgaW4gdGhlIHdlYnNpdGUgY29kZSBhbmQgYXJlIGFjdGl2YXRlZCBlYWNoIHRpbWUgeW91IHZpc2l0IHRoZSBzaXRlLjwvcD5cblx0PGJ1dHRvbiBvbjpjbGljaz17YWR2YW5jZX0+Q29udGludWU8L2J1dHRvbj5cbjwvc2VjdGlvbj5cbns6ZWxzZX1cbjxzZWN0aW9uPlxuXHQ8aDI+RG93bmxvYWQgUHJpdmFjeSBCYWRnZXIgZXh0ZW50aW9uPC9oMj5cblx0PHA+V2hlbiB5b3UgdmlldyBhIHdlYnBhZ2UsIHRoYXQgcGFnZSB3aWxsIG9mdGVuIGJlIG1hZGUgdXAgb2YgY29udGVudCBmcm9tIG1hbnkgZGlmZmVyZW50IHNvdXJjZXMuIFByaXZhY3kgQmFkZ2VyIGtlZXBzIHRyYWNrIG9mIGFsbCBvZiB0aGlzLiBJZiBhcyB5b3UgYnJvd3NlIHRoZSB3ZWIsIHRoZSBzYW1lIHNvdXJjZSBzZWVtcyB0byBiZSB0cmFja2luZyB5b3VyIGJyb3dzZXIgYWNyb3NzIGRpZmZlcmVudCB3ZWJzaXRlcywgdGhlbiBQcml2YWN5IEJhZGdlciBzcHJpbmdzIGludG8gYWN0aW9uLCB0ZWxsaW5nIHlvdXIgYnJvd3NlciBub3QgdG8gbG9hZCBhbnkgbW9yZSBjb250ZW50IGZyb20gdGhhdCBzb3VyY2UuIEFuZCB3aGVuIHlvdXIgYnJvd3NlciBzdG9wcyBsb2FkaW5nIGNvbnRlbnQgZnJvbSBhIHNvdXJjZSwgdGhhdCBzb3VyY2UgY2FuIG5vIGxvbmdlciB0cmFjayB5b3UuIFZvaWxhITwvcD5cblx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8YnV0dG9uIG9uOmNsaWNrPXtjb21wbGV0ZX0+RG93bmxvYWQgZXh0ZW5zaW9uIG5vdzwvYnV0dG9uPlxuXHRcdDxidXR0b24gb246Y2xpY2s9e2NvbXBsZXRlfT5BbHJlYWR5IEhhdmUgaXQ8L2J1dHRvbj5cblx0XHQ8YnV0dG9uIG9uOmNsaWNrPXtpbmNvbXBsZXRlfT5Eb24ndCB3YW50IHRvIGRvd25sb2FkIGl0PC9idXR0b24+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuey9pZn1cbjxzdHlsZT5cbiAgIC5idXR0b24taG9sZGVyIHtcblx0d2lkdGg6IDI3dnc7XG5cdGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgfVxuICAgYnV0dG9uIHtcblx0ICAgcGFkZGluZzogMTBweCAyMHB4O1xuXHQgICBtYXJnaW46IDEwcHg7XG5cdCAgIGJvcmRlcjogYmxhY2sgc29saWQgMHB4O1xuXHQgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cblx0Ly9jb25maXJtIGNvbWxldGlvbiBvZiBxdWl6IHRvIG1hc3RlciBxdWl6IGNvbXBvbmVudFxuXHRmdW5jdGlvbiBjb21wbGV0ZSgpIHtcblx0XHRkaXNwYXRjaCgnbWVzc2FnZScsIHtcblx0XHRcdHF1ZXN0aW9uOiAyLCAvL1EtMSBiZWNhdWUgb2YgYXJyYXlcblx0XHRcdGNvbXBsZXRlOiAndHJ1ZSdcblx0XHR9KTtcblx0fVxuXHRmdW5jdGlvbiBpbmNvbXBsZXRlKCkge1xuXHRcdGRpc3BhdGNoKCdtZXNzYWdlJywge1xuXHRcdFx0cXVlc3Rpb246IDIsIC8vUS0xIGJlY2F1ZSBvZiBhcnJheVxuXHRcdFx0Y29tcGxldGU6ICdmYWxzZSdcblx0XHR9KTtcblx0fVxuXHRsZXQgcSA9IDA7XG5cdGZ1bmN0aW9uIGFkdmFuY2UoKSB7XG5cdFx0cSsrO1xuXHRcdGNvbnNvbGUubG9nKHEpO1xuXHR9XG5cdGZ1bmN0aW9uIGFkdmFuY2VUd28oKSB7XG5cdFx0cSs9Mjtcblx0XHRjb25zb2xlLmxvZyhxKTtcblx0fVxuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5Eb21haW4gTmFtZSBTZXJ2aWNlPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG57I2lmIHE9PTB9XG48c2VjdGlvbj5cblx0PGgyPkRvbWFpbiBOYW1lIFNlcnZpY2U8L2gyPiBcblx0PHA+V2hlbiB5b3UgdHlwZSBhbiBhZGRyZXNzIGluIHRoZSBhZGRyZXNzIGJhciAoc3VjaCBhcyBtaW5keW91cmRhdGEub3JnKSwgeW91ciBkZXZpY2UgYXNrcyBhIERvbWFpbiBOYW1lIFNlcnZlciB0byB0cmFuc2xhdGUgdGhhdCBhZGRyZXNzIGludG8gYW4gSVAgYWRkcmVzcyAoYSB1bmlxdWUgY29tYmluYXRpb24gb2YgbnVtYmVycyBhbmQgZG90cykuIEJ5IGRlZmF1bHQsIHlvdXIgSVNQIG9yIHlvdXIgbW9iaWxlIGNhcnJpZXIgcnVucyBhIEROUyBmb3IgdGhlaXIgdXNlcnMuIEl0IG1lYW5zIHRoYXQgdGhleSBjYW4gc2VlIGFsbCB5b3VyIHdlYiBoaXN0b3J5LiBCaWcgdGVsZWNvbSBjb21wYW5pZXMgYXJlIGdvaW5nIHRvIHRha2UgYWR2YW50YWdlIG9mIHRoYXQgdG8gcmFtcCB1cCB0aGVpciBhZHZlcnRpc2luZyBlZmZvcnRzLiBCeSBkZWZhdWx0LCB5b3VyIEROUyBxdWVyeSBpcyBhbHNvIHVuZW5jcnlwdGVkIGFuZCBjYW4gYmUgaW50ZXJjZXB0ZWQgYnkgcGVvcGxlIHJ1bm5pbmcgdGhlIG5ldHdvcmsuIFNvbWUgZ292ZXJubWVudHMgYWxzbyBhc2sgdGVsZWNvbSBjb21wYW5pZXMgdG8gYmxvY2sgc29tZSB3ZWJzaXRlcyBvbiB0aGVpciBETlMgc2VydmVycyDigJQgc29tZSBjb3VudHJpZXMgYmxvY2sgRmFjZWJvb2sgZm9yIGNlbnNvcnNoaXAgcmVhc29ucywgb3RoZXJzIGJsb2NrIFRoZSBQaXJhdGUgQmF5IGZvciBvbmxpbmUgcGlyYWN5IHJlYXNvbnMuPC9wPlxuXHQ8YnV0dG9uIG9uOmNsaWNrPXthZHZhbmNlfT5Db250aW51ZTwvYnV0dG9uPlxuPC9zZWN0aW9uPlxuezplbHNlfVxuPHNlY3Rpb24+XG5cdDxoMj5Db25maWd1cmUgZWFjaCBvZiB5b3VyIGRldmljZXMgdG8gdXNlIGFub3RoZXIgcHVibGljIEROUzwvaDI+XG5cdDxwPllvdSBjYW4gY29uZmlndXJlIGVhY2ggb2YgeW91ciBkZXZpY2VzIHRvIHVzZSBhbm90aGVyIHB1YmxpYyBETlMuIEJ1dCBkb27igJl0IHVzZSBHb29nbGXigJlzIHB1YmxpYyBETlMhIFJlbWVtYmVyLCBpdOKAmXMgYW4gYWQgY29tcGFueSwgc28gdGhleSByZWFsbHkgd2FudCB0byBzZWUgeW91ciB3ZWIgaGlzdG9yeS4gQm90aCBRdWFkOSBhbmQgQ2xvdWRmbGFyZeKAmXMgMS4xLjEuMSBoYXZlIHN0cm9uZyBwcml2YWN5IHBvbGljaWVzLiBCdXQgUXVhZDkgaXMgYSBub3QtZm9yLXByb2ZpdCBvcmdhbml6YXRpb24sIHNvIGl04oCZcyBhIGxpdHRsZSBlYXNpZXIgdG8gdHJ1c3QgdGhlbS48L3A+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17Y29tcGxldGV9PkxpbmsxPC9idXR0b24+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17Y29tcGxldGV9PkxpbmsyPC9idXR0b24+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17Y29tcGxldGV9PkFscmVhZHkgZGlkIGl0PC9idXR0b24+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17aW5jb21wbGV0ZX0+RG9uJ3QgY2FyZSwgbGV0IHRoZW4gc25vb3A8L2J1dHRvbj5cblx0PC9kaXY+XG48L3NlY3Rpb24+XG57L2lmfVxuPHN0eWxlPlxuICAgLmJ1dHRvbi1ob2xkZXIge1xuXHR3aWR0aDogMjd2dztcblx0ZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICB9XG4gICBidXR0b24ge1xuXHQgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdCAgIG1hcmdpbjogMTBweDtcblx0ICAgYm9yZGVyOiBibGFjayBzb2xpZCAwcHg7XG5cdCAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cblx0aW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcblx0Y29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblxuXHQvL2NvbmZpcm0gY29tbGV0aW9uIG9mIHF1aXogdG8gbWFzdGVyIHF1aXogY29tcG9uZW50XG5cdGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xuXHRcdGRpc3BhdGNoKCdtZXNzYWdlJywge1xuXHRcdFx0cXVlc3Rpb246IDIsIC8vUS0xIGJlY2F1ZSBvZiBhcnJheVxuXHRcdFx0Y29tcGxldGU6ICd0cnVlJ1xuXHRcdH0pO1xuXHR9XG5cdGZ1bmN0aW9uIGluY29tcGxldGUoKSB7XG5cdFx0ZGlzcGF0Y2goJ21lc3NhZ2UnLCB7XG5cdFx0XHRxdWVzdGlvbjogMiwgLy9RLTEgYmVjYXVlIG9mIGFycmF5XG5cdFx0XHRjb21wbGV0ZTogJ2ZhbHNlJ1xuXHRcdH0pO1xuXHR9XG5cdGxldCBxID0gMDtcblx0ZnVuY3Rpb24gYWR2YW5jZSgpIHtcblx0XHRxKys7XG5cdFx0Y29uc29sZS5sb2cocSk7XG5cdH1cblx0ZnVuY3Rpb24gYWR2YW5jZVR3bygpIHtcblx0XHRxKz0yO1xuXHRcdGNvbnNvbGUubG9nKHEpO1xuXHR9XG5cdGxldCBjdXJyZW50ID0gJ2luaXRpYWwnO1xuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5JbnRlcm5ldCBvZiB0aGluZ3MoIEFsZXhhLCBIb21lIGRldmljZXMpPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG57I2lmIHE9PTB9XG48c2VjdGlvbj5cblx0PGgyPkludGVybmV0IG9mIHRoaW5ncyggQWxleGEsIEhvbWUgZGV2aWNlcyk8L2gyPiBcblx0PHA+SXQgc2hvdWxkIGJlIGNsZWFyIGJ5IG5vdyB0aGF0IHlvdXIgZGFpbHkgaW50ZXJhY3Rpb25zIHRlY2hub2xvZ3ksIGxldCBhbG9uZSB5b3VyIHNtYXJ0IHNwZWFrZXIgYXJlIGFueXRoaW5nIGJ1dCBwcml2YXRlLiBBIHNlcmllcyBvZiBpbnZlc3RpZ2F0aXZlIHJlcG9ydHMgaGF2ZSBzaG93biB0aGF0IG90aGVyIHBlb3BsZSBhcmUgcmV2aWV3aW5nIHJlY29yZGluZ3Mgb3IgdHJhbnNjcmlwdHMgb2YgeW91ciBjb252ZXJzYXRpb25zLiBcblx0PC9wPlxuXHQ8cD5UaGUgdGhyZWUgYmlnIG1ha2VycyBvZiBzbWFydCBzcGVha2Vyc+KAlEFtYXpvbiwgQXBwbGUsIGFuZCBHb29nbGXigJRzYXkgdGhleSBkbyB0aGlzIHRvIGltcHJvdmUgdGhlIGRldmljZeKAmXMgcGVyZm9ybWFuY2UsIG5vdCBmb3IgdGFyZ2V0aW5nIGFkcy4gQnV0IHByaXZhY3kgYWR2b2NhdGVzIGFyZ3VlIHRoYXQsIHdpdGhvdXQgcHJpb3Igbm90aWNlLCBhbnkgbGlzdGVuaW5nIGZyb20gZW1wbG95ZWVzIGFuZCBjb250cmFjdG9ycyBpcyB1bmZhaXIgdG8gY29uc3VtZXJzLjwvcD5cblx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8YnV0dG9uIG9uOmNsaWNrPXthZHZhbmNlfT5JIG93biBhIHNtYXJ0IHNwZWFrZXI8L2J1dHRvbj5cblx0XHQ8YnV0dG9uIG9uOmNsaWNrPXthZHZhbmNlVHdvfT5JIGRvbid0IG93biBhIHNtYXJ0IHNwZWFrZXI8L2J1dHRvbj5cblx0PC9kaXY+XG48L3NlY3Rpb24+XG57OmVsc2UgaWYgcT09MX1cbjxzZWN0aW9uPlxuXHQ8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAnYW1hem9uJ31cIlxuXHRvbjpjbGljaz1cInsoKSA9PiBjdXJyZW50ID0gJ2FtYXpvbid9XCI+XG5cdFx0PHA+QW1hem9uIEFsZXhhPC9wPlxuXHRcdHsjaWYgY3VycmVudD09PSdhbWF6b24nfVxuXHRcdDx1bD5cblx0XHRcdDxsaT5TdGVwIDE6IE9wZW4gdGhlIEFsZXhhIGFwcCBvbiB5b3VyIHNtYXJ0cGhvbmUgYW5kIHRhcCB0aGUgbWVudSBidXR0b24gb24gdGhlIHRvcC1sZWZ0IG9mIHRoZSBzY3JlZW4uPC9saT5cblx0XHRcdDxsaT5TdGVwIDI6IFNlbGVjdCBTZXR0aW5ncyA+IEFsZXhhIFByaXZhY3kgPiBNYW5hZ2UgSG93IFlvdXIgRGF0YSBJbXByb3ZlcyBBbGV4YS48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgMzogU3dpdGNoIG9mZiB0aGUgdG9nZ2xlIG5leHQgdG8gSGVscCBJbXByb3ZlIEFtYXpvbiBTZXJ2aWNlcyBhbmQgRGV2ZWxvcCBOZXcgRmVhdHVyZXMuPC9saT5cblx0XHRcdDxsaT5TdGVwIDQ6IFRoZW4gc3dpdGNoIG9mZiB0aGUgdG9nZ2xlIG5leHQgdG8geW91ciBuYW1lIHVuZGVyIFVzZSBNZXNzYWdlcyB0byBJbXByb3ZlIFRyYW5zY3JpcHRpb25zLjwvbGk+XG5cdFx0PC91bD5cblx0XHR7L2lmfVxuXHQ8L2Rpdj5cblx0XG5cdDxocj5cblx0PGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ2dvb2dsZSd9XCJcblx0b246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICdnb29nbGUnfVwiPlxuXHRcdDxwPkdvb2dsZSBBc3Npc3RhbnQ8L3A+XG5cdFx0eyNpZiBjdXJyZW50PT09J2dvb2dsZSd9XG5cdFx0PHVsPlxuXHRcdFx0PGxpPlN0ZXAgMTogT3BlbiB0aGUgQWxleGEgYXBwIG9uIHlvdXIgc21hcnRwaG9uZSBhbmQgdGFwIHRoZSBtZW51IGJ1dHRvbiBvbiB0aGUgdG9wLWxlZnQgb2YgdGhlIHNjcmVlbi48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgMjogU2VsZWN0IFNldHRpbmdzID4gQWxleGEgUHJpdmFjeSA+IE1hbmFnZSBIb3cgWW91ciBEYXRhIEltcHJvdmVzIEFsZXhhLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCAzOiBTd2l0Y2ggb2ZmIHRoZSB0b2dnbGUgbmV4dCB0byBIZWxwIEltcHJvdmUgQW1hem9uIFNlcnZpY2VzIGFuZCBEZXZlbG9wIE5ldyBGZWF0dXJlcy48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgNDogVGhlbiBzd2l0Y2ggb2ZmIHRoZSB0b2dnbGUgbmV4dCB0byB5b3VyIG5hbWUgdW5kZXIgVXNlIE1lc3NhZ2VzIHRvIEltcHJvdmUgVHJhbnNjcmlwdGlvbnMuPC9saT5cblx0XHQ8L3VsPlxuXHRcdHsvaWZ9XG5cdDwvZGl2PlxuXHRcblx0PGhyPlxuXHQ8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAnYXBwbGUnfVwiXG5cdG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAnYXBwbGUnfVwiPlxuXHRcdDxwPkFwcGxlIFNpcmk8L3A+XG5cdFx0eyNpZiBjdXJyZW50PT09J2FwcGxlJ31cblx0XHQ8dWw+XG5cdFx0XHQ8bGk+U3RlcCAxOiBPcGVuIHRoZSBBbGV4YSBhcHAgb24geW91ciBzbWFydHBob25lIGFuZCB0YXAgdGhlIG1lbnUgYnV0dG9uIG9uIHRoZSB0b3AtbGVmdCBvZiB0aGUgc2NyZWVuLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCAyOiBTZWxlY3QgU2V0dGluZ3MgPiBBbGV4YSBQcml2YWN5ID4gTWFuYWdlIEhvdyBZb3VyIERhdGEgSW1wcm92ZXMgQWxleGEuPC9saT5cblx0XHRcdDxsaT5TdGVwIDM6IFN3aXRjaCBvZmYgdGhlIHRvZ2dsZSBuZXh0IHRvIEhlbHAgSW1wcm92ZSBBbWF6b24gU2VydmljZXMgYW5kIERldmVsb3AgTmV3IEZlYXR1cmVzLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCA0OiBUaGVuIHN3aXRjaCBvZmYgdGhlIHRvZ2dsZSBuZXh0IHRvIHlvdXIgbmFtZSB1bmRlciBVc2UgTWVzc2FnZXMgdG8gSW1wcm92ZSBUcmFuc2NyaXB0aW9ucy48L2xpPlxuXHRcdDwvdWw+XG5cdFx0ey9pZn1cblx0PC9kaXY+XG5cdFxuXHQ8aHI+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG5cdFx0PGgzPkRpZCB5b3Ugc2V0dXAgcHJpdmFjeSBtb2RlPC9oMz5cblx0XHQ8YnV0dG9uIG9uOmNsaWNrPXtjb21wbGV0ZX0+WWVzLCBJIERpZDwvYnV0dG9uPlxuXHRcdDxidXR0b24gb246Y2xpY2s9e2luY29tcGxldGV9Pk5vIEkgZG9uJ3Qgd2FudCB0bzwvYnV0dG9uPlxuXHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbns6ZWxzZX1cblx0PHNlY3Rpb24+XG5cdFx0PGgyPkhvb29yYXkhPC9oMj5cblx0XHQ8cD5PbmUgbGVzcyB3YXkgcGVvcGxlIGNhbiBzbm9vcCBvbiB5b3VyIHByaXZhY3kuPC9wPlxuXHRcdFx0PGJ1dHRvbiBvbjpjbGljaz17Y29tcGxldGV9Pk5leHQgQ2hhbGxlbmdlPC9idXR0b24+XG5cdDwvc2VjdGlvbj5cbnsvaWZ9XG48c3R5bGU+XG4gICAuYnV0dG9uLWhvbGRlciB7XG5cdHdpZHRoOiAyN3Z3O1xuXHRkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgIH1cbiAgIGJ1dHRvbiB7XG5cdCAgIHBhZGRpbmc6IDEwcHggMjBweDtcblx0ICAgbWFyZ2luOiAxMHB4O1xuXHQgICBib3JkZXI6IGJsYWNrIHNvbGlkIDBweDtcblx0ICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgfVxuPC9zdHlsZT4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUMsSUFBSSxlQUFDLENBQUMsQUFDTCxnQkFBZ0IsQ0FBRSxLQUFLLENBQ3ZCLFVBQVUsQ0FBRSxVQUFVLEFBQ3ZCLENBQUM7QUNERCxnQkFBRSxDQUFFLENBQUMsY0FBQyxDQUFDLEFBQ04sTUFBTSxDQUFFLENBQUMsQ0FBQyxJQUFJLEFBQ2YsQ0FBQyxBQUVELEVBQUUsY0FBQyxDQUFDLEFBQ0gsU0FBUyxDQUFFLEtBQUssQ0FDaEIsV0FBVyxDQUFFLEdBQUcsQ0FDaEIsTUFBTSxDQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQUFDcEIsQ0FBQyxBQUVELENBQUMsY0FBQyxDQUFDLEFBQ0YsTUFBTSxDQUFFLEdBQUcsQ0FBQyxJQUFJLEFBQ2pCLENBQUMsQUFFRCxNQUFNLEFBQUMsWUFBWSxLQUFLLENBQUMsQUFBQyxDQUFDLEFBQzFCLEVBQUUsY0FBQyxDQUFDLEFBQ0gsU0FBUyxDQUFFLEdBQUcsQUFDZixDQUFDLEFBQ0YsQ0FBQztBQ3RCRCxnQ0FBRSxDQUFVLENBQUMsOEJBQUMsQ0FBQyxBQUNkLFVBQVUsQ0FBRSxNQUFNLENBQ2xCLE1BQU0sQ0FBRSxDQUFDLENBQUMsSUFBSSxBQUNmLENBQUMsQUFFRCxLQUFLLDhCQUFDLENBQUMsQUFDTixnQkFBZ0IsQ0FBRSxPQUFPLENBQ3pCLFlBQVksQ0FBRSxJQUFJLENBQ2xCLFdBQVcsQ0FBRSxJQUFJLENBQ2pCLEtBQUssQ0FBRSxJQUFJLENBQ1gsTUFBTSxDQUFFLElB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RCxjQUFjLGNBQUMsQ0FBQyxBQUNsQixLQUFLLENBQUUsSUFBSSxDQUNYLE9BQU8sQ0FBRSxJQUFJLENBQ1YsU0FBUyxDQUFFLE1BQU0sQ0FBQyxNQUFNLEFBQ3pCLENBQUMsQUFDRCxNQUFNLGNBQUMsQ0FBQyxBQUNQLE9BQU8sQ0FBRSxJQUFJLENBQUMsSUFBSSxDQUNsQixNQUFNLENBQUUsSUFBSSxDQUNaLE1BQU0sQ0FBRSxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FDdkIsYUFBYSxDQUFFLEdBQUcsQUFDbkIsQ0FBQztBQ3lDRCxjQUFjLGNBQUMsQ0FBQyxBQUNsQixLQUFLLENBQUUsSUFBSSxDQUNYLE9BQU8sQ0FBRSxJQUFJLENBQ1YsU0FBUyxDQUFFLE1BQU0sQ0FBQyxNQUFNLEFBQ3pCLENBQUMsQUFDRCxNQUFNLGNBQUMsQ0FBQyxBQUNQLE9BQU8sQ0FBRSxJQUFJLENBQUMsSUFBSSxDQUNsQixNQUFNLENBQUUsSUFBSSxDQUNaLE1BQU0sQ0FBRSxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FDdkIsYUFBYSxDQUFFLEdBQUcsQUFDbkIsQ0FBQyJ9 */