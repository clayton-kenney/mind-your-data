import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, o as createEventDispatcher, v as validate_slots, p as globals, a as space, T as empty, q as query_selector_all, b as detach_dev, c as claim_space, l as insert_dev, n as noop, e as element, t as text, f as claim_element, g as children, h as claim_text, k as add_location, j as attr_dev, O as null_to_empty, R as toggle_class, m as append_dev, P as listen_dev, U as run_all } from './client.85dc224d.js';

/* src/routes/quiz/q7.svelte generated by Svelte v3.23.2 */

const { console: console_1 } = globals;
const file = "src/routes/quiz/q7.svelte";

// (43:0) {:else}
function create_else_block(ctx) {
	let section;
	let div0;
	let p0;
	let t0;
	let t1;
	let ul0;
	let li0;
	let t2;
	let t3;
	let li1;
	let t4;
	let t5;
	let li2;
	let t6;
	let t7;
	let li3;
	let t8;
	let ul0_class_value;
	let t9;
	let hr0;
	let t10;
	let div1;
	let p1;
	let t11;
	let t12;
	let ul1;
	let li4;
	let t13;
	let t14;
	let li5;
	let t15;
	let t16;
	let li6;
	let t17;
	let t18;
	let li7;
	let t19;
	let ul1_class_value;
	let t20;
	let hr1;
	let t21;
	let div2;
	let p2;
	let t22;
	let t23;
	let ul2;
	let li8;
	let t24;
	let t25;
	let li9;
	let t26;
	let t27;
	let li10;
	let t28;
	let t29;
	let li11;
	let t30;
	let ul2_class_value;
	let t31;
	let hr2;
	let t32;
	let div3;
	let h3;
	let t33;
	let t34;
	let button0;
	let t35;
	let t36;
	let button1;
	let t37;
	let t38;
	let button2;
	let t39;
	let t40;
	let button3;
	let t41;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			section = element("section");
			div0 = element("div");
			p0 = element("p");
			t0 = text("Amazon Alexa");
			t1 = space();
			ul0 = element("ul");
			li0 = element("li");
			t2 = text("Step 1: Open the Alexa app on your smartphone and tap the menu button on the top-left of the screen.");
			t3 = space();
			li1 = element("li");
			t4 = text("Step 2: Select Settings > Alexa Privacy > Manage How Your Data Improves Alexa.");
			t5 = space();
			li2 = element("li");
			t6 = text("Step 3: Switch off the toggle next to Help Improve Amazon Services and Develop New Features.");
			t7 = space();
			li3 = element("li");
			t8 = text("Step 4: Then switch off the toggle next to your name under Use Messages to Improve Transcriptions.");
			t9 = space();
			hr0 = element("hr");
			t10 = space();
			div1 = element("div");
			p1 = element("p");
			t11 = text("Google Assistant");
			t12 = space();
			ul1 = element("ul");
			li4 = element("li");
			t13 = text("Step 1: Open the Alexa app on your smartphone and tap the menu button on the top-left of the screen.");
			t14 = space();
			li5 = element("li");
			t15 = text("Step 2: Select Settings > Alexa Privacy > Manage How Your Data Improves Alexa.");
			t16 = space();
			li6 = element("li");
			t17 = text("Step 3: Switch off the toggle next to Help Improve Amazon Services and Develop New Features.");
			t18 = space();
			li7 = element("li");
			t19 = text("Step 4: Then switch off the toggle next to your name under Use Messages to Improve Transcriptions.");
			t20 = space();
			hr1 = element("hr");
			t21 = space();
			div2 = element("div");
			p2 = element("p");
			t22 = text("Apple Siri");
			t23 = space();
			ul2 = element("ul");
			li8 = element("li");
			t24 = text("Step 1: Open the Alexa app on your smartphone and tap the menu button on the top-left of the screen.");
			t25 = space();
			li9 = element("li");
			t26 = text("Step 2: Select Settings > Alexa Privacy > Manage How Your Data Improves Alexa.");
			t27 = space();
			li10 = element("li");
			t28 = text("Step 3: Switch off the toggle next to Help Improve Amazon Services and Develop New Features.");
			t29 = space();
			li11 = element("li");
			t30 = text("Step 4: Then switch off the toggle next to your name under Use Messages to Improve Transcriptions.");
			t31 = space();
			hr2 = element("hr");
			t32 = space();
			div3 = element("div");
			h3 = element("h3");
			t33 = text("Did you setup privacy mode");
			t34 = space();
			button0 = element("button");
			t35 = text("Link1");
			t36 = space();
			button1 = element("button");
			t37 = text("Link2");
			t38 = space();
			button2 = element("button");
			t39 = text("Already did it");
			t40 = space();
			button3 = element("button");
			t41 = text("Don't care, let then snoop");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", {});
			var section_nodes = children(section);
			div0 = claim_element(section_nodes, "DIV", {});
			var div0_nodes = children(div0);
			p0 = claim_element(div0_nodes, "P", {});
			var p0_nodes = children(p0);
			t0 = claim_text(p0_nodes, "Amazon Alexa");
			p0_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			ul0 = claim_element(div0_nodes, "UL", { class: true });
			var ul0_nodes = children(ul0);
			li0 = claim_element(ul0_nodes, "LI", {});
			var li0_nodes = children(li0);
			t2 = claim_text(li0_nodes, "Step 1: Open the Alexa app on your smartphone and tap the menu button on the top-left of the screen.");
			li0_nodes.forEach(detach_dev);
			t3 = claim_space(ul0_nodes);
			li1 = claim_element(ul0_nodes, "LI", {});
			var li1_nodes = children(li1);
			t4 = claim_text(li1_nodes, "Step 2: Select Settings > Alexa Privacy > Manage How Your Data Improves Alexa.");
			li1_nodes.forEach(detach_dev);
			t5 = claim_space(ul0_nodes);
			li2 = claim_element(ul0_nodes, "LI", {});
			var li2_nodes = children(li2);
			t6 = claim_text(li2_nodes, "Step 3: Switch off the toggle next to Help Improve Amazon Services and Develop New Features.");
			li2_nodes.forEach(detach_dev);
			t7 = claim_space(ul0_nodes);
			li3 = claim_element(ul0_nodes, "LI", {});
			var li3_nodes = children(li3);
			t8 = claim_text(li3_nodes, "Step 4: Then switch off the toggle next to your name under Use Messages to Improve Transcriptions.");
			li3_nodes.forEach(detach_dev);
			ul0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t9 = claim_space(section_nodes);
			hr0 = claim_element(section_nodes, "HR", {});
			t10 = claim_space(section_nodes);
			div1 = claim_element(section_nodes, "DIV", {});
			var div1_nodes = children(div1);
			p1 = claim_element(div1_nodes, "P", {});
			var p1_nodes = children(p1);
			t11 = claim_text(p1_nodes, "Google Assistant");
			p1_nodes.forEach(detach_dev);
			t12 = claim_space(div1_nodes);
			ul1 = claim_element(div1_nodes, "UL", { class: true });
			var ul1_nodes = children(ul1);
			li4 = claim_element(ul1_nodes, "LI", {});
			var li4_nodes = children(li4);
			t13 = claim_text(li4_nodes, "Step 1: Open the Alexa app on your smartphone and tap the menu button on the top-left of the screen.");
			li4_nodes.forEach(detach_dev);
			t14 = claim_space(ul1_nodes);
			li5 = claim_element(ul1_nodes, "LI", {});
			var li5_nodes = children(li5);
			t15 = claim_text(li5_nodes, "Step 2: Select Settings > Alexa Privacy > Manage How Your Data Improves Alexa.");
			li5_nodes.forEach(detach_dev);
			t16 = claim_space(ul1_nodes);
			li6 = claim_element(ul1_nodes, "LI", {});
			var li6_nodes = children(li6);
			t17 = claim_text(li6_nodes, "Step 3: Switch off the toggle next to Help Improve Amazon Services and Develop New Features.");
			li6_nodes.forEach(detach_dev);
			t18 = claim_space(ul1_nodes);
			li7 = claim_element(ul1_nodes, "LI", {});
			var li7_nodes = children(li7);
			t19 = claim_text(li7_nodes, "Step 4: Then switch off the toggle next to your name under Use Messages to Improve Transcriptions.");
			li7_nodes.forEach(detach_dev);
			ul1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t20 = claim_space(section_nodes);
			hr1 = claim_element(section_nodes, "HR", {});
			t21 = claim_space(section_nodes);
			div2 = claim_element(section_nodes, "DIV", {});
			var div2_nodes = children(div2);
			p2 = claim_element(div2_nodes, "P", {});
			var p2_nodes = children(p2);
			t22 = claim_text(p2_nodes, "Apple Siri");
			p2_nodes.forEach(detach_dev);
			t23 = claim_space(div2_nodes);
			ul2 = claim_element(div2_nodes, "UL", { class: true });
			var ul2_nodes = children(ul2);
			li8 = claim_element(ul2_nodes, "LI", {});
			var li8_nodes = children(li8);
			t24 = claim_text(li8_nodes, "Step 1: Open the Alexa app on your smartphone and tap the menu button on the top-left of the screen.");
			li8_nodes.forEach(detach_dev);
			t25 = claim_space(ul2_nodes);
			li9 = claim_element(ul2_nodes, "LI", {});
			var li9_nodes = children(li9);
			t26 = claim_text(li9_nodes, "Step 2: Select Settings > Alexa Privacy > Manage How Your Data Improves Alexa.");
			li9_nodes.forEach(detach_dev);
			t27 = claim_space(ul2_nodes);
			li10 = claim_element(ul2_nodes, "LI", {});
			var li10_nodes = children(li10);
			t28 = claim_text(li10_nodes, "Step 3: Switch off the toggle next to Help Improve Amazon Services and Develop New Features.");
			li10_nodes.forEach(detach_dev);
			t29 = claim_space(ul2_nodes);
			li11 = claim_element(ul2_nodes, "LI", {});
			var li11_nodes = children(li11);
			t30 = claim_text(li11_nodes, "Step 4: Then switch off the toggle next to your name under Use Messages to Improve Transcriptions.");
			li11_nodes.forEach(detach_dev);
			ul2_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t31 = claim_space(section_nodes);
			hr2 = claim_element(section_nodes, "HR", {});
			t32 = claim_space(section_nodes);
			div3 = claim_element(section_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			h3 = claim_element(div3_nodes, "H3", {});
			var h3_nodes = children(h3);
			t33 = claim_text(h3_nodes, "Did you setup privacy mode");
			h3_nodes.forEach(detach_dev);
			t34 = claim_space(div3_nodes);
			button0 = claim_element(div3_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t35 = claim_text(button0_nodes, "Link1");
			button0_nodes.forEach(detach_dev);
			t36 = claim_space(div3_nodes);
			button1 = claim_element(div3_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);
			t37 = claim_text(button1_nodes, "Link2");
			button1_nodes.forEach(detach_dev);
			t38 = claim_space(div3_nodes);
			button2 = claim_element(div3_nodes, "BUTTON", { class: true });
			var button2_nodes = children(button2);
			t39 = claim_text(button2_nodes, "Already did it");
			button2_nodes.forEach(detach_dev);
			t40 = claim_space(div3_nodes);
			button3 = claim_element(div3_nodes, "BUTTON", { class: true });
			var button3_nodes = children(button3);
			t41 = claim_text(button3_nodes, "Don't care, let then snoop");
			button3_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(p0, file, 46, 2, 1512);
			add_location(li0, file, 48, 3, 1558);
			add_location(li1, file, 49, 3, 1671);
			add_location(li2, file, 50, 3, 1762);
			add_location(li3, file, 51, 3, 1867);
			attr_dev(ul0, "class", ul0_class_value = "" + (null_to_empty(/*current*/ ctx[1]) + " svelte-7to5p"));
			add_location(ul0, file, 47, 2, 1534);
			toggle_class(div0, "active", /*current*/ ctx[1] === "amazon");
			add_location(div0, file, 44, 1, 1427);
			add_location(hr0, file, 55, 1, 1994);
			add_location(p1, file, 58, 2, 2085);
			add_location(li4, file, 60, 3, 2135);
			add_location(li5, file, 61, 3, 2248);
			add_location(li6, file, 62, 3, 2339);
			add_location(li7, file, 63, 3, 2444);
			attr_dev(ul1, "class", ul1_class_value = "" + (null_to_empty(/*current*/ ctx[1]) + " svelte-7to5p"));
			add_location(ul1, file, 59, 2, 2111);
			toggle_class(div1, "active", /*current*/ ctx[1] === "google");
			add_location(div1, file, 56, 1, 2000);
			add_location(hr1, file, 67, 1, 2571);
			add_location(p2, file, 70, 2, 2660);
			add_location(li8, file, 72, 3, 2704);
			add_location(li9, file, 73, 3, 2817);
			add_location(li10, file, 74, 3, 2908);
			add_location(li11, file, 75, 3, 3013);
			attr_dev(ul2, "class", ul2_class_value = "" + (null_to_empty(/*current*/ ctx[1]) + " svelte-7to5p"));
			add_location(ul2, file, 71, 2, 2680);
			toggle_class(div2, "active", /*current*/ ctx[1] === "apple");
			add_location(div2, file, 68, 1, 2577);
			add_location(hr2, file, 79, 1, 3140);
			add_location(h3, file, 81, 2, 3176);
			attr_dev(button0, "class", "svelte-7to5p");
			add_location(button0, file, 82, 2, 3214);
			attr_dev(button1, "class", "svelte-7to5p");
			add_location(button1, file, 83, 2, 3259);
			attr_dev(button2, "class", "svelte-7to5p");
			add_location(button2, file, 84, 2, 3304);
			attr_dev(button3, "class", "svelte-7to5p");
			add_location(button3, file, 85, 2, 3358);
			attr_dev(div3, "class", "button-holder svelte-7to5p");
			add_location(div3, file, 80, 1, 3146);
			add_location(section, file, 43, 0, 1416);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div0);
			append_dev(div0, p0);
			append_dev(p0, t0);
			append_dev(div0, t1);
			append_dev(div0, ul0);
			append_dev(ul0, li0);
			append_dev(li0, t2);
			append_dev(ul0, t3);
			append_dev(ul0, li1);
			append_dev(li1, t4);
			append_dev(ul0, t5);
			append_dev(ul0, li2);
			append_dev(li2, t6);
			append_dev(ul0, t7);
			append_dev(ul0, li3);
			append_dev(li3, t8);
			append_dev(section, t9);
			append_dev(section, hr0);
			append_dev(section, t10);
			append_dev(section, div1);
			append_dev(div1, p1);
			append_dev(p1, t11);
			append_dev(div1, t12);
			append_dev(div1, ul1);
			append_dev(ul1, li4);
			append_dev(li4, t13);
			append_dev(ul1, t14);
			append_dev(ul1, li5);
			append_dev(li5, t15);
			append_dev(ul1, t16);
			append_dev(ul1, li6);
			append_dev(li6, t17);
			append_dev(ul1, t18);
			append_dev(ul1, li7);
			append_dev(li7, t19);
			append_dev(section, t20);
			append_dev(section, hr1);
			append_dev(section, t21);
			append_dev(section, div2);
			append_dev(div2, p2);
			append_dev(p2, t22);
			append_dev(div2, t23);
			append_dev(div2, ul2);
			append_dev(ul2, li8);
			append_dev(li8, t24);
			append_dev(ul2, t25);
			append_dev(ul2, li9);
			append_dev(li9, t26);
			append_dev(ul2, t27);
			append_dev(ul2, li10);
			append_dev(li10, t28);
			append_dev(ul2, t29);
			append_dev(ul2, li11);
			append_dev(li11, t30);
			append_dev(section, t31);
			append_dev(section, hr2);
			append_dev(section, t32);
			append_dev(section, div3);
			append_dev(div3, h3);
			append_dev(h3, t33);
			append_dev(div3, t34);
			append_dev(div3, button0);
			append_dev(button0, t35);
			append_dev(div3, t36);
			append_dev(div3, button1);
			append_dev(button1, t37);
			append_dev(div3, t38);
			append_dev(div3, button2);
			append_dev(button2, t39);
			append_dev(div3, t40);
			append_dev(div3, button3);
			append_dev(button3, t41);

			if (!mounted) {
				dispose = [
					listen_dev(div0, "click", /*click_handler*/ ctx[6], false, false, false),
					listen_dev(div1, "click", /*click_handler_1*/ ctx[7], false, false, false),
					listen_dev(div2, "click", /*click_handler_2*/ ctx[8], false, false, false),
					listen_dev(button0, "click", /*complete*/ ctx[2], false, false, false),
					listen_dev(button1, "click", /*complete*/ ctx[2], false, false, false),
					listen_dev(button2, "click", /*complete*/ ctx[2], false, false, false),
					listen_dev(button3, "click", /*incomplete*/ ctx[3], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (dirty & /*current*/ 2 && ul0_class_value !== (ul0_class_value = "" + (null_to_empty(/*current*/ ctx[1]) + " svelte-7to5p"))) {
				attr_dev(ul0, "class", ul0_class_value);
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div0, "active", /*current*/ ctx[1] === "amazon");
			}

			if (dirty & /*current*/ 2 && ul1_class_value !== (ul1_class_value = "" + (null_to_empty(/*current*/ ctx[1]) + " svelte-7to5p"))) {
				attr_dev(ul1, "class", ul1_class_value);
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div1, "active", /*current*/ ctx[1] === "google");
			}

			if (dirty & /*current*/ 2 && ul2_class_value !== (ul2_class_value = "" + (null_to_empty(/*current*/ ctx[1]) + " svelte-7to5p"))) {
				attr_dev(ul2, "class", ul2_class_value);
			}

			if (dirty & /*current*/ 2) {
				toggle_class(div2, "active", /*current*/ ctx[1] === "apple");
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(43:0) {:else}",
		ctx
	});

	return block;
}

// (32:0) {#if q==0}
function create_if_block(ctx) {
	let section;
	let h2;
	let t0;
	let t1;
	let p0;
	let t2;
	let t3;
	let p1;
	let t4;
	let t5;
	let div;
	let button0;
	let t6;
	let t7;
	let button1;
	let t8;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			section = element("section");
			h2 = element("h2");
			t0 = text("Internet of things( Alexa, Home devices)");
			t1 = space();
			p0 = element("p");
			t2 = text("It should be clear by now that your daily interactions technology, let alone your smart speaker are anything but private. A series of investigative reports have shown that other people are reviewing recordings or transcripts of your conversations.");
			t3 = space();
			p1 = element("p");
			t4 = text("The three big makers of smart speakers—Amazon, Apple, and Google—say they do this to improve the device’s performance, not for targeting ads. But privacy advocates argue that, without prior notice, any listening from employees and contractors is unfair to consumers.");
			t5 = space();
			div = element("div");
			button0 = element("button");
			t6 = text("I own a smart speaker");
			t7 = space();
			button1 = element("button");
			t8 = text("I don't own a smart speaker");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", {});
			var section_nodes = children(section);
			h2 = claim_element(section_nodes, "H2", {});
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "Internet of things( Alexa, Home devices)");
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			p0 = claim_element(section_nodes, "P", {});
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, "It should be clear by now that your daily interactions technology, let alone your smart speaker are anything but private. A series of investigative reports have shown that other people are reviewing recordings or transcripts of your conversations.");
			p0_nodes.forEach(detach_dev);
			t3 = claim_space(section_nodes);
			p1 = claim_element(section_nodes, "P", {});
			var p1_nodes = children(p1);
			t4 = claim_text(p1_nodes, "The three big makers of smart speakers—Amazon, Apple, and Google—say they do this to improve the device’s performance, not for targeting ads. But privacy advocates argue that, without prior notice, any listening from employees and contractors is unfair to consumers.");
			p1_nodes.forEach(detach_dev);
			t5 = claim_space(section_nodes);
			div = claim_element(section_nodes, "DIV", { class: true });
			var div_nodes = children(div);
			button0 = claim_element(div_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t6 = claim_text(button0_nodes, "I own a smart speaker");
			button0_nodes.forEach(detach_dev);
			t7 = claim_space(div_nodes);
			button1 = claim_element(div_nodes, "BUTTON", { class: true });
			var button1_nodes = children(button1);
			t8 = claim_text(button1_nodes, "I don't own a smart speaker");
			button1_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h2, file, 33, 1, 646);
			add_location(p0, file, 34, 1, 698);
			add_location(p1, file, 36, 1, 957);
			attr_dev(button0, "class", "svelte-7to5p");
			add_location(button0, file, 38, 2, 1262);
			attr_dev(button1, "class", "svelte-7to5p");
			add_location(button1, file, 39, 2, 1322);
			attr_dev(div, "class", "button-holder svelte-7to5p");
			add_location(div, file, 37, 1, 1232);
			add_location(section, file, 32, 0, 635);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, h2);
			append_dev(h2, t0);
			append_dev(section, t1);
			append_dev(section, p0);
			append_dev(p0, t2);
			append_dev(section, t3);
			append_dev(section, p1);
			append_dev(p1, t4);
			append_dev(section, t5);
			append_dev(section, div);
			append_dev(div, button0);
			append_dev(button0, t6);
			append_dev(div, t7);
			append_dev(div, button1);
			append_dev(button1, t8);

			if (!mounted) {
				dispose = [
					listen_dev(button0, "click", /*advance*/ ctx[4], false, false, false),
					listen_dev(button1, "click", /*advanceTwo*/ ctx[5], false, false, false)
				];

				mounted = true;
			}
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(32:0) {#if q==0}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t;
	let if_block_anchor;

	function select_block_type(ctx, dirty) {
		if (/*q*/ ctx[0] == 0) return create_if_block;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx);
	let if_block = current_block_type(ctx);

	const block = {
		c: function create() {
			t = space();
			if_block.c();
			if_block_anchor = empty();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-3r29dh\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			if_block.l(nodes);
			if_block_anchor = empty();
			this.h();
		},
		h: function hydrate() {
			document.title = "Internet of things( Alexa, Home devices)";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const dispatch = createEventDispatcher();

	//confirm comletion of quiz to master quiz component
	function complete() {
		dispatch("message", {
			question: 2, //Q-1 becaue of array
			complete: "true"
		});
	}

	function incomplete() {
		dispatch("message", {
			question: 2, //Q-1 becaue of array
			complete: "false"
		});
	}

	let q = 0;

	function advance() {
		$$invalidate(0, q++, q);
		console.log(q);
	}

	function advanceTwo() {
		$$invalidate(0, q++, q);
		console.log(q);
	}

	let current = "initial";
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Q7> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Q7", $$slots, []);
	const click_handler = () => $$invalidate(1, current = "amazon");
	const click_handler_1 = () => $$invalidate(1, current = "google");
	const click_handler_2 = () => $$invalidate(1, current = "apple");

	$$self.$capture_state = () => ({
		createEventDispatcher,
		dispatch,
		complete,
		incomplete,
		q,
		advance,
		advanceTwo,
		current
	});

	$$self.$inject_state = $$props => {
		if ("q" in $$props) $$invalidate(0, q = $$props.q);
		if ("current" in $$props) $$invalidate(1, current = $$props.current);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		q,
		current,
		complete,
		incomplete,
		advance,
		advanceTwo,
		click_handler,
		click_handler_1,
		click_handler_2
	];
}

class Q7 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Q7",
			options,
			id: create_fragment.name
		});
	}
}

export default Q7;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicTcuZjRhYjcyZDQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvcXVpei9xNy5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cblx0aW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcblx0Y29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblxuXHQvL2NvbmZpcm0gY29tbGV0aW9uIG9mIHF1aXogdG8gbWFzdGVyIHF1aXogY29tcG9uZW50XG5cdGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xuXHRcdGRpc3BhdGNoKCdtZXNzYWdlJywge1xuXHRcdFx0cXVlc3Rpb246IDIsIC8vUS0xIGJlY2F1ZSBvZiBhcnJheVxuXHRcdFx0Y29tcGxldGU6ICd0cnVlJ1xuXHRcdH0pO1xuXHR9XG5cdGZ1bmN0aW9uIGluY29tcGxldGUoKSB7XG5cdFx0ZGlzcGF0Y2goJ21lc3NhZ2UnLCB7XG5cdFx0XHRxdWVzdGlvbjogMiwgLy9RLTEgYmVjYXVlIG9mIGFycmF5XG5cdFx0XHRjb21wbGV0ZTogJ2ZhbHNlJ1xuXHRcdH0pO1xuXHR9XG5cdGxldCBxID0gMDtcblx0ZnVuY3Rpb24gYWR2YW5jZSgpIHtcblx0XHRxKys7XG5cdFx0Y29uc29sZS5sb2cocSk7XG5cdH1cblx0ZnVuY3Rpb24gYWR2YW5jZVR3bygpIHtcblx0XHRxKys7XG5cdFx0Y29uc29sZS5sb2cocSk7XG5cdH1cblx0bGV0IGN1cnJlbnQgPSAnaW5pdGlhbCc7XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkludGVybmV0IG9mIHRoaW5ncyggQWxleGEsIEhvbWUgZGV2aWNlcyk8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbnsjaWYgcT09MH1cbjxzZWN0aW9uPlxuXHQ8aDI+SW50ZXJuZXQgb2YgdGhpbmdzKCBBbGV4YSwgSG9tZSBkZXZpY2VzKTwvaDI+IFxuXHQ8cD5JdCBzaG91bGQgYmUgY2xlYXIgYnkgbm93IHRoYXQgeW91ciBkYWlseSBpbnRlcmFjdGlvbnMgdGVjaG5vbG9neSwgbGV0IGFsb25lIHlvdXIgc21hcnQgc3BlYWtlciBhcmUgYW55dGhpbmcgYnV0IHByaXZhdGUuIEEgc2VyaWVzIG9mIGludmVzdGlnYXRpdmUgcmVwb3J0cyBoYXZlIHNob3duIHRoYXQgb3RoZXIgcGVvcGxlIGFyZSByZXZpZXdpbmcgcmVjb3JkaW5ncyBvciB0cmFuc2NyaXB0cyBvZiB5b3VyIGNvbnZlcnNhdGlvbnMuIFxuXHQ8L3A+XG5cdDxwPlRoZSB0aHJlZSBiaWcgbWFrZXJzIG9mIHNtYXJ0IHNwZWFrZXJz4oCUQW1hem9uLCBBcHBsZSwgYW5kIEdvb2dsZeKAlHNheSB0aGV5IGRvIHRoaXMgdG8gaW1wcm92ZSB0aGUgZGV2aWNl4oCZcyBwZXJmb3JtYW5jZSwgbm90IGZvciB0YXJnZXRpbmcgYWRzLiBCdXQgcHJpdmFjeSBhZHZvY2F0ZXMgYXJndWUgdGhhdCwgd2l0aG91dCBwcmlvciBub3RpY2UsIGFueSBsaXN0ZW5pbmcgZnJvbSBlbXBsb3llZXMgYW5kIGNvbnRyYWN0b3JzIGlzIHVuZmFpciB0byBjb25zdW1lcnMuPC9wPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxidXR0b24gb246Y2xpY2s9e2FkdmFuY2V9Pkkgb3duIGEgc21hcnQgc3BlYWtlcjwvYnV0dG9uPlxuXHRcdDxidXR0b24gb246Y2xpY2s9e2FkdmFuY2VUd299PkkgZG9uJ3Qgb3duIGEgc21hcnQgc3BlYWtlcjwvYnV0dG9uPlxuXHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbns6ZWxzZX1cbjxzZWN0aW9uPlxuXHQ8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAnYW1hem9uJ31cIlxuXHRvbjpjbGljaz1cInsoKSA9PiBjdXJyZW50ID0gJ2FtYXpvbid9XCI+XG5cdFx0PHA+QW1hem9uIEFsZXhhPC9wPlxuXHRcdDx1bCBjbGFzcz17Y3VycmVudH0+XG5cdFx0XHQ8bGk+U3RlcCAxOiBPcGVuIHRoZSBBbGV4YSBhcHAgb24geW91ciBzbWFydHBob25lIGFuZCB0YXAgdGhlIG1lbnUgYnV0dG9uIG9uIHRoZSB0b3AtbGVmdCBvZiB0aGUgc2NyZWVuLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCAyOiBTZWxlY3QgU2V0dGluZ3MgPiBBbGV4YSBQcml2YWN5ID4gTWFuYWdlIEhvdyBZb3VyIERhdGEgSW1wcm92ZXMgQWxleGEuPC9saT5cblx0XHRcdDxsaT5TdGVwIDM6IFN3aXRjaCBvZmYgdGhlIHRvZ2dsZSBuZXh0IHRvIEhlbHAgSW1wcm92ZSBBbWF6b24gU2VydmljZXMgYW5kIERldmVsb3AgTmV3IEZlYXR1cmVzLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCA0OiBUaGVuIHN3aXRjaCBvZmYgdGhlIHRvZ2dsZSBuZXh0IHRvIHlvdXIgbmFtZSB1bmRlciBVc2UgTWVzc2FnZXMgdG8gSW1wcm92ZSBUcmFuc2NyaXB0aW9ucy48L2xpPlxuXHRcdDwvdWw+XG5cdDwvZGl2PlxuXHRcblx0PGhyPlxuXHQ8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAnZ29vZ2xlJ31cIlxuXHRvbjpjbGljaz1cInsoKSA9PiBjdXJyZW50ID0gJ2dvb2dsZSd9XCI+XG5cdFx0PHA+R29vZ2xlIEFzc2lzdGFudDwvcD5cblx0XHQ8dWwgY2xhc3M9e2N1cnJlbnR9PlxuXHRcdFx0PGxpPlN0ZXAgMTogT3BlbiB0aGUgQWxleGEgYXBwIG9uIHlvdXIgc21hcnRwaG9uZSBhbmQgdGFwIHRoZSBtZW51IGJ1dHRvbiBvbiB0aGUgdG9wLWxlZnQgb2YgdGhlIHNjcmVlbi48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgMjogU2VsZWN0IFNldHRpbmdzID4gQWxleGEgUHJpdmFjeSA+IE1hbmFnZSBIb3cgWW91ciBEYXRhIEltcHJvdmVzIEFsZXhhLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCAzOiBTd2l0Y2ggb2ZmIHRoZSB0b2dnbGUgbmV4dCB0byBIZWxwIEltcHJvdmUgQW1hem9uIFNlcnZpY2VzIGFuZCBEZXZlbG9wIE5ldyBGZWF0dXJlcy48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgNDogVGhlbiBzd2l0Y2ggb2ZmIHRoZSB0b2dnbGUgbmV4dCB0byB5b3VyIG5hbWUgdW5kZXIgVXNlIE1lc3NhZ2VzIHRvIEltcHJvdmUgVHJhbnNjcmlwdGlvbnMuPC9saT5cblx0XHQ8L3VsPlxuXHQ8L2Rpdj5cblx0XG5cdDxocj5cblx0PGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ2FwcGxlJ31cIlxuXHRvbjpjbGljaz1cInsoKSA9PiBjdXJyZW50ID0gJ2FwcGxlJ31cIj5cblx0XHQ8cD5BcHBsZSBTaXJpPC9wPlxuXHRcdDx1bCBjbGFzcz17Y3VycmVudH0+XG5cdFx0XHQ8bGk+U3RlcCAxOiBPcGVuIHRoZSBBbGV4YSBhcHAgb24geW91ciBzbWFydHBob25lIGFuZCB0YXAgdGhlIG1lbnUgYnV0dG9uIG9uIHRoZSB0b3AtbGVmdCBvZiB0aGUgc2NyZWVuLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCAyOiBTZWxlY3QgU2V0dGluZ3MgPiBBbGV4YSBQcml2YWN5ID4gTWFuYWdlIEhvdyBZb3VyIERhdGEgSW1wcm92ZXMgQWxleGEuPC9saT5cblx0XHRcdDxsaT5TdGVwIDM6IFN3aXRjaCBvZmYgdGhlIHRvZ2dsZSBuZXh0IHRvIEhlbHAgSW1wcm92ZSBBbWF6b24gU2VydmljZXMgYW5kIERldmVsb3AgTmV3IEZlYXR1cmVzLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCA0OiBUaGVuIHN3aXRjaCBvZmYgdGhlIHRvZ2dsZSBuZXh0IHRvIHlvdXIgbmFtZSB1bmRlciBVc2UgTWVzc2FnZXMgdG8gSW1wcm92ZSBUcmFuc2NyaXB0aW9ucy48L2xpPlxuXHRcdDwvdWw+XG5cdDwvZGl2PlxuXHRcblx0PGhyPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxoMz5EaWQgeW91IHNldHVwIHByaXZhY3kgbW9kZTwvaDM+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17Y29tcGxldGV9PkxpbmsxPC9idXR0b24+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17Y29tcGxldGV9PkxpbmsyPC9idXR0b24+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17Y29tcGxldGV9PkFscmVhZHkgZGlkIGl0PC9idXR0b24+XG5cdFx0PGJ1dHRvbiBvbjpjbGljaz17aW5jb21wbGV0ZX0+RG9uJ3QgY2FyZSwgbGV0IHRoZW4gc25vb3A8L2J1dHRvbj5cblx0PC9kaXY+XG48L3NlY3Rpb24+XG57L2lmfVxuPHN0eWxlPlxuICAgLmJ1dHRvbi1ob2xkZXIge1xuXHR3aWR0aDogMjd2dztcblx0ZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICB9XG4gICBidXR0b24ge1xuXHQgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdCAgIG1hcmdpbjogMTBweDtcblx0ICAgYm9yZGVyOiBibGFjayBzb2xpZCAwcHg7XG5cdCAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgIH1cbiAgIC5pbml0aWFse1xuXHQgICBkaXNwbGF5OiBub25lO1xuICAgfVxuICAgLmdvb2dsZSB7XG5cdCAgIGRpc3BsYXk6IGJsb2NrO1xuICAgfVxuICAgLmFwcGxlIHtcblx0ICAgZGlzcGxheTogYmxvY2s7XG4gICB9XG4gICAuYW1hem9uIHtcblx0ICAgZGlzcGxheTogYmxvY2s7XG4gICB9XG48L3N0eWxlPiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NEVBK0NhLEdBQU87OzRDQUhDLEdBQU8sUUFBSyxRQUFROzs7Ozs7Ozs0RUFlNUIsR0FBTzs7NENBSEMsR0FBTyxRQUFLLFFBQVE7Ozs7Ozs7OzRFQWU1QixHQUFPOzs0Q0FIQyxHQUFPLFFBQUssT0FBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytDQWNwQixHQUFROytDQUNSLEdBQVE7K0NBQ1IsR0FBUTtpREFDUixHQUFVOzs7Ozs7O3VHQXRDakIsR0FBTzs7Ozs7NkNBSEMsR0FBTyxRQUFLLFFBQVE7Ozt1R0FlNUIsR0FBTzs7Ozs7NkNBSEMsR0FBTyxRQUFLLFFBQVE7Ozt1R0FlNUIsR0FBTzs7Ozs7NkNBSEMsR0FBTyxRQUFLLE9BQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OENBOUJwQixHQUFPO2lEQUNQLEdBQVU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztZQVJ6QixHQUFDLE9BQUUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztPQTdCRixRQUFRLEdBQUcscUJBQXFCOzs7VUFHN0IsUUFBUTtFQUNoQixRQUFRLENBQUMsU0FBUztHQUNqQixRQUFRLEVBQUUsQ0FBQztHQUNYLFFBQVEsRUFBRSxNQUFNOzs7O1VBR1QsVUFBVTtFQUNsQixRQUFRLENBQUMsU0FBUztHQUNqQixRQUFRLEVBQUUsQ0FBQztHQUNYLFFBQVEsRUFBRSxPQUFPOzs7O0tBR2YsQ0FBQyxHQUFHLENBQUM7O1VBQ0EsT0FBTztrQkFDZixDQUFDO0VBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs7VUFFTCxVQUFVO2tCQUNsQixDQUFDO0VBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs7S0FFVixPQUFPLEdBQUcsU0FBUzs7Ozs7Ozs7OzZDQW1CTixPQUFPLEdBQUcsUUFBUTsrQ0FZbEIsT0FBTyxHQUFHLFFBQVE7K0NBWWxCLE9BQU8sR0FBRyxPQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
