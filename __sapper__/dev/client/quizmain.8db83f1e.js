import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, P as Progress, v as validate_slots, a as space, o as create_component, q as query_selector_all, b as detach_dev, c as claim_space, p as claim_component, l as insert_dev, r as mount_component, u as transition_out, w as check_outros, x as transition_in, y as destroy_component, z as group_outros } from './client.1933660b.js';
import Q0 from './q0.cc40b90a.js';
import Q1 from './q1.ade716a0.js';
import Q2 from './q2.65445256.js';
import Q3 from './q3.533887b9.js';
import Q4 from './q4.b08b1174.js';
import Q5 from './q5.24ad615b.js';
import Q6 from './q6.147cc77b.js';
import Q7 from './q7.8680f0b3.js';
import Q8 from './q8.a7cf9abc.js';
import Q9 from './q9.24a058ef.js';

/* src/routes/quizmain.svelte generated by Svelte v3.23.2 */

function create_fragment(ctx) {
	let t0;
	let switch_instance;
	let t1;
	let progress;
	let current;
	var switch_value = /*selected*/ ctx[0].component;

	function switch_props(ctx) {
		return { $$inline: true };
	}

	if (switch_value) {
		switch_instance = new switch_value(switch_props());
	}

	progress = new Progress({
			props: {
				current: /*selected*/ ctx[0].name,
				next: /*next*/ ctx[1].name
			},
			$$inline: true
		});

	progress.$on("message", /*handleMessage*/ ctx[2]);

	const block = {
		c: function create() {
			t0 = space();
			if (switch_instance) create_component(switch_instance.$$.fragment);
			t1 = space();
			create_component(progress.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-7q3d4x\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			if (switch_instance) claim_component(switch_instance.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(progress.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Test your knowledge";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);

			if (switch_instance) {
				mount_component(switch_instance, target, anchor);
			}

			insert_dev(target, t1, anchor);
			mount_component(progress, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (switch_value !== (switch_value = /*selected*/ ctx[0].component)) {
				if (switch_instance) {
					group_outros();
					const old_component = switch_instance;

					transition_out(old_component.$$.fragment, 1, 0, () => {
						destroy_component(old_component, 1);
					});

					check_outros();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props());
					create_component(switch_instance.$$.fragment);
					transition_in(switch_instance.$$.fragment, 1);
					mount_component(switch_instance, t1.parentNode, t1);
				} else {
					switch_instance = null;
				}
			}

			const progress_changes = {};
			if (dirty & /*selected*/ 1) progress_changes.current = /*selected*/ ctx[0].name;
			if (dirty & /*next*/ 2) progress_changes.next = /*next*/ ctx[1].name;
			progress.$set(progress_changes);
		},
		i: function intro(local) {
			if (current) return;
			if (switch_instance) transition_in(switch_instance.$$.fragment, local);
			transition_in(progress.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
			transition_out(progress.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (switch_instance) destroy_component(switch_instance, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(progress, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const quizSteps = [
		{
			id: "1",
			component: Q0,
			name: "Webcam Challenge",
			time: "2mins",
			description: "If your computer has a built-in camera, also known as a webcam, you should know that it can be used to spy on you. And no, this is not just science fiction as a recent survey conducted by HP shows that 10% in the U.S. either know someone whose webcam was hacked or have had their own webcam hacked. In this challenge, we are going to walk you through the best practice to avoid this risk."
		},
		{
			id: "2",
			component: Q1,
			name: "Browser Choice",
			time: "3mins"
		},
		{
			id: "3",
			component: Q2,
			name: "Privacy Setting",
			time: "4mins"
		},
		{
			id: "4",
			component: Q3,
			name: "Https everywhere",
			time: "4mins"
		},
		{
			id: "5",
			component: Q4,
			name: "Location Services (phone needed)",
			time: "3mins"
		},
		{
			id: "6",
			component: Q5,
			name: "Tracker blocker",
			time: "3mins"
		},
		{
			id: "7",
			component: Q6,
			name: "location Tracking",
			time: "1mins"
		},
		{
			id: "8",
			component: Q7,
			name: "Mobile keyboard",
			time: "5mins"
		},
		{
			id: "9",
			component: Q8,
			name: "Messenger platform",
			time: "2mins"
		},
		{
			id: "10",
			component: Q9,
			name: "iot",
			time: "2mins"
		}
	];

	let selected = quizSteps[0];
	let next = quizSteps[0];

	function handleMessage(event) {
		$$invalidate(0, selected = quizSteps[event.detail.number]);
		$$invalidate(1, next = quizSteps[event.detail.number + 1]);
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Quizmain> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Quizmain", $$slots, []);

	$$self.$capture_state = () => ({
		Quiz1: Q0,
		Quiz2: Q1,
		Quiz3: Q2,
		Quiz4: Q3,
		Quiz5: Q4,
		Quiz6: Q5,
		Quiz7: Q6,
		Quiz8: Q7,
		Quiz9: Q8,
		Quiz10: Q9,
		Progress,
		quizSteps,
		selected,
		next,
		handleMessage
	});

	$$self.$inject_state = $$props => {
		if ("selected" in $$props) $$invalidate(0, selected = $$props.selected);
		if ("next" in $$props) $$invalidate(1, next = $$props.next);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [selected, next, handleMessage];
}

class Quizmain extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Quizmain",
			options,
			id: create_fragment.name
		});
	}
}

export default Quizmain;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpem1haW4uOGRiODNmMWUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvcXVpem1haW4uc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gaW1wb3J0IFF1aXoxIGZyb20gJy4vcXVpei9xMC5zdmVsdGUnXG4gaW1wb3J0IFF1aXoyIGZyb20gJy4vcXVpei9xMS5zdmVsdGUnXG4gaW1wb3J0IFF1aXozIGZyb20gJy4vcXVpei9xMi5zdmVsdGUnXG4gaW1wb3J0IFF1aXo0IGZyb20gJy4vcXVpei9xMy5zdmVsdGUnXG4gaW1wb3J0IFF1aXo1IGZyb20gJy4vcXVpei9xNC5zdmVsdGUnXG4gaW1wb3J0IFF1aXo2IGZyb20gJy4vcXVpei9xNS5zdmVsdGUnXG4gaW1wb3J0IFF1aXo3IGZyb20gJy4vcXVpei9xNi5zdmVsdGUnXG4gaW1wb3J0IFF1aXo4IGZyb20gJy4vcXVpei9xNy5zdmVsdGUnXG4gaW1wb3J0IFF1aXo5IGZyb20gJy4vcXVpei9xOC5zdmVsdGUnXG4gaW1wb3J0IFF1aXoxMCBmcm9tICcuL3F1aXovcTkuc3ZlbHRlJ1xuIGltcG9ydCBQcm9ncmVzcyBmcm9tICcuLi9jb21wb25lbnRzL1Byb2dyZXNzLnN2ZWx0ZSdcblxuIGNvbnN0IHF1aXpTdGVwcyA9ICBbXG4gICAgICAgIHsgaWQ6JzEnLCBjb21wb25lbnQ6IFF1aXoxLCBuYW1lOiAnV2ViY2FtIENoYWxsZW5nZScsIHRpbWU6ICcybWlucycsIGRlc2NyaXB0aW9uOlwiSWYgeW91ciBjb21wdXRlciBoYXMgYSBidWlsdC1pbiBjYW1lcmEsIGFsc28ga25vd24gYXMgYSB3ZWJjYW0sIHlvdSBzaG91bGQga25vdyB0aGF0IGl0IGNhbiBiZSB1c2VkIHRvIHNweSBvbiB5b3UuIEFuZCBubywgdGhpcyBpcyBub3QganVzdCBzY2llbmNlIGZpY3Rpb24gYXMgYSByZWNlbnQgc3VydmV5IGNvbmR1Y3RlZCBieSBIUCBzaG93cyB0aGF0IDEwJSBpbiB0aGUgVS5TLiBlaXRoZXIga25vdyBzb21lb25lIHdob3NlIHdlYmNhbSB3YXMgaGFja2VkIG9yIGhhdmUgaGFkIHRoZWlyIG93biB3ZWJjYW0gaGFja2VkLiBJbiB0aGlzIGNoYWxsZW5nZSwgd2UgYXJlIGdvaW5nIHRvIHdhbGsgeW91IHRocm91Z2ggdGhlIGJlc3QgcHJhY3RpY2UgdG8gYXZvaWQgdGhpcyByaXNrLlwifSxcbiAgICAgICAgeyBpZDogJzInLCBjb21wb25lbnQ6IFF1aXoyLCBuYW1lOiAnQnJvd3NlciBDaG9pY2UnLCB0aW1lOiAnM21pbnMnfSxcbiAgICAgICAgeyBpZDogJzMnLCBjb21wb25lbnQ6IFF1aXozLCBuYW1lOiAnUHJpdmFjeSBTZXR0aW5nJywgdGltZTogJzRtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICc0JywgY29tcG9uZW50OiBRdWl6NCwgbmFtZTogJ0h0dHBzIGV2ZXJ5d2hlcmUnLCB0aW1lOiAnNG1pbnMnfSxcbiAgICAgICAgeyBpZDogJzUnLCBjb21wb25lbnQ6IFF1aXo1LCBuYW1lOiAnTG9jYXRpb24gU2VydmljZXMgKHBob25lIG5lZWRlZCknLCB0aW1lOiAnM21pbnMnfSxcbiAgICAgICAgeyBpZDogJzYnLCBjb21wb25lbnQ6IFF1aXo2LCBuYW1lOiAnVHJhY2tlciBibG9ja2VyJywgdGltZTogJzNtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICc3JywgY29tcG9uZW50OiBRdWl6NywgbmFtZTogJ2xvY2F0aW9uIFRyYWNraW5nJywgdGltZTogJzFtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICc4JywgY29tcG9uZW50OiBRdWl6OCwgbmFtZTogJ01vYmlsZSBrZXlib2FyZCcsIHRpbWU6ICc1bWlucyd9LFxuICAgICAgICB7IGlkOiAnOScsIGNvbXBvbmVudDogUXVpejksIG5hbWU6ICdNZXNzZW5nZXIgcGxhdGZvcm0nLCB0aW1lOiAnMm1pbnMnfSxcbiAgICAgICAgeyBpZDogJzEwJywgY29tcG9uZW50OiBRdWl6MTAsIG5hbWU6ICdpb3QnLCB0aW1lOiAnMm1pbnMnfVxuXVxuXG5sZXQgc2VsZWN0ZWQgPSBxdWl6U3RlcHNbMF07XG5sZXQgbmV4dCA9IHF1aXpTdGVwc1swXTtcbmZ1bmN0aW9uIGhhbmRsZU1lc3NhZ2UoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RlZCA9IHF1aXpTdGVwc1soZXZlbnQuZGV0YWlsLm51bWJlcildO1xuICAgICAgICAgICAgICAgIG5leHQ9IHF1aXpTdGVwc1soZXZlbnQuZGV0YWlsLm51bWJlcikgKyAxXVxuICAgICAgICB9XG4vL2V0IHNlbGVjdGVkPSBxdWl6U3RlcHNbcV07ICAgXG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPlRlc3QgeW91ciBrbm93bGVkZ2U8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxzdmVsdGU6Y29tcG9uZW50IHRoaXM9e3NlbGVjdGVkLmNvbXBvbmVudH0vPlxuXG48IS0tPHNlbGVjdCBiaW5kOnZhbHVlPXtzZWxlY3RlZH0+XG4gICAgICAgIHsjZWFjaCBxdWl6U3RlcHMgYXMgcX1cblx0XHQ8b3B0aW9uIHZhbHVlPXtxfT5RdWVzdGlvbiB7cS5pZH08L29wdGlvbj5cblx0ey9lYWNofVxuPC9zZWxlY3Q+LS0+XG48IS0tPGJ1dHRvbiBvbjpjbGljaz17aGFuZGxlQ2xpY2t9PkNsaWNrIG1lPC9idXR0b24+LS0+XG48IS0tPFByb2dyZXNzIHBhc3Q9e3Bhc3QubmFtZX0gY3VycmVudD17c2VsZWN0ZWQubmFtZX0gbmV4dD17bmV4dC5uYW1lfS8+LS0+XG48UHJvZ3Jlc3MgY3VycmVudD17c2VsZWN0ZWQubmFtZX0gbmV4dD17bmV4dC5uYW1lfSBvbjptZXNzYWdlPXtoYW5kbGVNZXNzYWdlfSAvPlxuPHN0eWxlPlxuXG48L3N0eWxlPiJdLCJuYW1lcyI6WyJRdWl6MSIsIlF1aXoyIiwiUXVpejMiLCJRdWl6NCIsIlF1aXo1IiwiUXVpejYiLCJRdWl6NyIsIlF1aXo4IiwiUXVpejkiLCJRdWl6MTAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lDQXFDd0IsR0FBUSxJQUFDLFNBQVM7Ozs7Ozs7Ozs7OzswQkFTdkIsR0FBUSxJQUFDLElBQUk7bUJBQVEsR0FBSSxJQUFDLElBQUk7Ozs7OzJDQUFjLEdBQWE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7cURBVHBELEdBQVEsSUFBQyxTQUFTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1RUFTdkIsR0FBUSxJQUFDLElBQUk7NERBQVEsR0FBSSxJQUFDLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0FqQzFDLFNBQVM7O0dBQ04sRUFBRSxFQUFDLEdBQUc7R0FBRSxTQUFTLEVBQUVBLEVBQUs7R0FBRSxJQUFJLEVBQUUsa0JBQWtCO0dBQUUsSUFBSSxFQUFFLE9BQU87R0FBRSxXQUFXLEVBQUMsc1lBQXNZOzs7R0FDcmQsRUFBRSxFQUFFLEdBQUc7R0FBRSxTQUFTLEVBQUVDLEVBQUs7R0FBRSxJQUFJLEVBQUUsZ0JBQWdCO0dBQUUsSUFBSSxFQUFFLE9BQU87OztHQUNoRSxFQUFFLEVBQUUsR0FBRztHQUFFLFNBQVMsRUFBRUMsRUFBSztHQUFFLElBQUksRUFBRSxpQkFBaUI7R0FBRSxJQUFJLEVBQUUsT0FBTzs7O0dBQ2pFLEVBQUUsRUFBRSxHQUFHO0dBQUUsU0FBUyxFQUFFQyxFQUFLO0dBQUUsSUFBSSxFQUFFLGtCQUFrQjtHQUFFLElBQUksRUFBRSxPQUFPOzs7R0FDbEUsRUFBRSxFQUFFLEdBQUc7R0FBRSxTQUFTLEVBQUVDLEVBQUs7R0FBRSxJQUFJLEVBQUUsa0NBQWtDO0dBQUUsSUFBSSxFQUFFLE9BQU87OztHQUNsRixFQUFFLEVBQUUsR0FBRztHQUFFLFNBQVMsRUFBRUMsRUFBSztHQUFFLElBQUksRUFBRSxpQkFBaUI7R0FBRSxJQUFJLEVBQUUsT0FBTzs7O0dBQ2pFLEVBQUUsRUFBRSxHQUFHO0dBQUUsU0FBUyxFQUFFQyxFQUFLO0dBQUUsSUFBSSxFQUFFLG1CQUFtQjtHQUFFLElBQUksRUFBRSxPQUFPOzs7R0FDbkUsRUFBRSxFQUFFLEdBQUc7R0FBRSxTQUFTLEVBQUVDLEVBQUs7R0FBRSxJQUFJLEVBQUUsaUJBQWlCO0dBQUUsSUFBSSxFQUFFLE9BQU87OztHQUNqRSxFQUFFLEVBQUUsR0FBRztHQUFFLFNBQVMsRUFBRUMsRUFBSztHQUFFLElBQUksRUFBRSxvQkFBb0I7R0FBRSxJQUFJLEVBQUUsT0FBTzs7O0dBQ3BFLEVBQUUsRUFBRSxJQUFJO0dBQUUsU0FBUyxFQUFFQyxFQUFNO0dBQUUsSUFBSSxFQUFFLEtBQUs7R0FBRSxJQUFJLEVBQUUsT0FBTzs7OztLQUc3RCxRQUFRLEdBQUcsU0FBUyxDQUFDLENBQUM7S0FDdEIsSUFBSSxHQUFHLFNBQVMsQ0FBQyxDQUFDOztVQUNiLGFBQWEsQ0FBQyxLQUFLO2tCQUNaLFFBQVEsR0FBRyxTQUFTLENBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNO2tCQUN6QyxJQUFJLEdBQUUsU0FBUyxDQUFFLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFJLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
