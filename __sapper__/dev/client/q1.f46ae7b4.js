import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, y as validate_each_argument, v as validate_slots, o as create_component, p as claim_component, r as mount_component, n as noop, u as transition_in, w as transition_out, x as destroy_component, a as space, e as element, t as text, z as empty, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, g as children, h as claim_text, k as add_location, j as attr_dev, l as insert_dev, m as append_dev, A as check_outros, B as destroy_each, C as group_outros } from './client.5d0c8af6.js';
import Progress from './Progress.a99049d0.js';

/* src/routes/quiz/q1.svelte generated by Svelte v3.23.2 */
const file = "src/routes/quiz/q1.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (16:0) {#each q1Steps as step }
function create_each_block(ctx) {
	let progress;
	let current;

	progress = new Progress({
			props: { step: /*step*/ ctx[1].name },
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(progress.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(progress.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(progress, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(progress.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(progress.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(progress, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(16:0) {#each q1Steps as step }",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let div;
	let h2;
	let t1;
	let t2;
	let p;
	let t3;
	let t4;
	let each_1_anchor;
	let current;
	let each_value = /*q1Steps*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			t0 = space();
			div = element("div");
			h2 = element("h2");
			t1 = text("Webcam Challenge");
			t2 = space();
			p = element("p");
			t3 = text("If your computer has a built-in camera, also known as a webcam, you should know that it can be used to spy on you. And no, this is not just science fiction as a recent survey conducted by HP shows that 10% in the U.S. either know someone whose webcam was hacked or have had their own webcam hacked.");
			t4 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-11mvzac\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h2 = claim_element(div_nodes, "H2", {});
			var h2_nodes = children(h2);
			t1 = claim_text(h2_nodes, "Webcam Challenge");
			h2_nodes.forEach(detach_dev);
			t2 = claim_space(div_nodes);
			p = claim_element(div_nodes, "P", {});
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, "If your computer has a built-in camera, also known as a webcam, you should know that it can be used to spy on you. And no, this is not just science fiction as a recent survey conducted by HP shows that 10% in the U.S. either know someone whose webcam was hacked or have had their own webcam hacked.");
			p_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = empty();
			this.h();
		},
		h: function hydrate() {
			document.title = "Webcam Challenge";
			add_location(h2, file, 12, 0, 321);
			add_location(p, file, 13, 0, 348);
			attr_dev(div, "class", "quiz-holder svelte-1r47thd");
			add_location(div, file, 11, 0, 295);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div, anchor);
			append_dev(div, h2);
			append_dev(h2, t1);
			append_dev(div, t2);
			append_dev(div, p);
			append_dev(p, t3);
			insert_dev(target, t4, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*q1Steps*/ 1) {
				each_value = /*q1Steps*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div);
			if (detaching) detach_dev(t4);
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(each_1_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const q1Steps = [
		{
			stepNum: "1",
			component: "#",
			name: "Intro"
		},
		{
			stepNum: "2",
			component: "#",
			name: "Permissions"
		},
		{
			stepNum: "3",
			component: "#",
			name: "Test"
		}
	];

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Q1> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Q1", $$slots, []);
	$$self.$capture_state = () => ({ Progress, q1Steps });
	return [q1Steps];
}

class Q1 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Q1",
			options,
			id: create_fragment.name
		});
	}
}

export default Q1;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicTEuZjQ2YWU3YjQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvcXVpei9xMS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbmltcG9ydCBQcm9ncmVzcyBmcm9tICcuL1Byb2dyZXNzLnN2ZWx0ZSdcblx0Y29uc3QgcTFTdGVwcyA9IFtcblx0eyBzdGVwTnVtOiAnMScsIGNvbXBvbmVudDogJyMnLCBuYW1lOiAnSW50cm8nfSxcblx0eyBzdGVwTnVtOiAnMicsIGNvbXBvbmVudDogJyMnLCBuYW1lOiAnUGVybWlzc2lvbnMnfSxcblx0eyBzdGVwTnVtOiAnMycsIGNvbXBvbmVudDogJyMnLCBuYW1lOiAnVGVzdCd9XG5cdF1cbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+V2ViY2FtIENoYWxsZW5nZTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPGRpdiBjbGFzcz0ncXVpei1ob2xkZXInPlxuPGgyPldlYmNhbSBDaGFsbGVuZ2U8L2gyPiBcbjxwPklmIHlvdXIgY29tcHV0ZXIgaGFzIGEgYnVpbHQtaW4gY2FtZXJhLCBhbHNvIGtub3duIGFzIGEgd2ViY2FtLCB5b3Ugc2hvdWxkIGtub3cgdGhhdCBpdCBjYW4gYmUgdXNlZCB0byBzcHkgb24geW91LiBBbmQgbm8sIHRoaXMgaXMgbm90IGp1c3Qgc2NpZW5jZSBmaWN0aW9uIGFzIGEgcmVjZW50IHN1cnZleSBjb25kdWN0ZWQgYnkgSFAgc2hvd3MgdGhhdCAxMCUgaW4gdGhlIFUuUy4gZWl0aGVyIGtub3cgc29tZW9uZSB3aG9zZSB3ZWJjYW0gd2FzIGhhY2tlZCBvciBoYXZlIGhhZCB0aGVpciBvd24gd2ViY2FtIGhhY2tlZC48L3A+IFxuPC9kaXY+XG57I2VhY2ggcTFTdGVwcyBhcyBzdGVwIH1cblx0PFByb2dyZXNzIHN0ZXA9e3N0ZXAubmFtZX0vPlxuey9lYWNofVxuPHN0eWxlPlxuICAgLnF1aXotaG9sZGVyIHtcblx0ICAgd2lkdGg6IDcwJTtcbiAgICAgICBwYWRkaW5nOiAyMHB4IDQwcHg7XG4gICB9XG48L3N0eWxlPiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBZ0JpQixHQUFJLElBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs4QkFEbkIsR0FBTzs7OztnQ0FBWixNQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2QkFBQyxHQUFPOzs7OytCQUFaLE1BQUk7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBQUosTUFBSTs7Ozs7Ozs7OztrQ0FBSixNQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7T0FiQyxPQUFPOztHQUNYLE9BQU8sRUFBRSxHQUFHO0dBQUUsU0FBUyxFQUFFLEdBQUc7R0FBRSxJQUFJLEVBQUUsT0FBTzs7O0dBQzNDLE9BQU8sRUFBRSxHQUFHO0dBQUUsU0FBUyxFQUFFLEdBQUc7R0FBRSxJQUFJLEVBQUUsYUFBYTs7O0dBQ2pELE9BQU8sRUFBRSxHQUFHO0dBQUUsU0FBUyxFQUFFLEdBQUc7R0FBRSxJQUFJLEVBQUUsTUFBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
