main.svelte-o5lmjh{position:relative;background-color:white;box-sizing:border-box}
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
h1.svelte-1acdip2.svelte-1acdip2,p.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:0 auto}.hero.svelte-1acdip2.svelte-1acdip2{background-color:#3e4b59;padding-left:80px;padding-top:30vh;width:100%;height:60vh}.hero.svelte-1acdip2 p.svelte-1acdip2{margin:1em auto;color:white}h1.svelte-1acdip2.svelte-1acdip2{font-size:2.8em;text-align:left;text-transform:uppercase;font-weight:700;margin:0 0 0.5em 0;color:white;letter-spacing:25%}h2.svelte-1acdip2.svelte-1acdip2{text-align:left;margin:auto;text-transform:uppercase}h3.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:auto}.bigImg.svelte-1acdip2.svelte-1acdip2{max-width:1400px;background-color:grey}button.svelte-1acdip2.svelte-1acdip2{background:#7AAF54;text-transform:uppercase;padding:10px 20px 10px 20px;font-size:30px;line-height:38px;border:none;border-radius:10px;color:white;box-shadow:0px 4px 4px rgba(0, 0, 0, 0.25)}img.svelte-1acdip2.svelte-1acdip2{width:100%;max-width:400px;margin:0 0 1em 0}.about.svelte-1acdip2.svelte-1acdip2{padding:1.5em}p.svelte-1acdip2.svelte-1acdip2{color:black;text-align:left}ul.svelte-1acdip2.svelte-1acdip2{display:flex;flex-direction:row;list-style:none;margin-block-start:0px;margin-block-end:0px;padding-inline-start:0px}li.svelte-1acdip2.svelte-1acdip2{justify-content:space-around;margin:auto}.why.svelte-1acdip2.svelte-1acdip2{padding-left:80px;margin:1em auto}a.svelte-1acdip2.svelte-1acdip2{text-decoration:none;padding:4px 30px}@media(min-width: 480px){h1.svelte-1acdip2.svelte-1acdip2{font-size:4em}}
a.svelte-earzo7{text-decoration:none}#agree.svelte-earzo7{float:right}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
aside.svelte-50f2g{position:fixed;top:55px;right:0;width:25%;height:100%;background-color:#e4e4e4;border:2px solid #c7c7c7}section.svelte-50f2g{padding:10px 10px 20px 10px}#timer.svelte-50f2g{display:flex;flex-direction:column;border-bottom:1px solid #c7c7c7;margin-left:15px}#remaining.svelte-50f2g{font-size:20px;padding:5px 0px 20px 0px;margin-left:15px}#minutes.svelte-50f2g{color:white;background:#0F2033;border-radius:6px;width:30%;text-align:center;padding:5px 10px;margin-left:15px}.btn-dark.svelte-50f2g{color:white;background:#0F2033;border-radius:6px;width:30%;text-align:center;padding:5px 10px}button.svelte-50f2g{border:none;padding:5px 10px}#next-skip.svelte-50f2g{margin:5px 10px;padding:5px 0px 20px 0px}
.num.svelte-m0bqhn{padding-right:100px}div.svelte-m0bqhn{color:black}.active.svelte-m0bqhn{display:block}
.quiz-holder.svelte-1u03q0h{width:70%;padding:20px 40px}.incomplete.svelte-1u03q0h{color:#a0a0a0}
nav.svelte-lsy7z7{display:flex;flex-flow:row wrap;justify-content:space-between;align-items:center;background-color:#3e4b59;font-weight:300;padding:0 1em}ul.svelte-lsy7z7{display:flex;list-style:none;justify-content:flex-end;margin:0;padding:0;color:#c7c7c7}img.svelte-lsy7z7{display:flex;justify-content:flex-start;height:40px}li.svelte-lsy7z7{display:flex;margin:0px 20px 0px 20px;text-transform:uppercase}[aria-current].svelte-lsy7z7{position:relative;display:inline-block}[aria-current].svelte-lsy7z7::after{position:absolute;content:'';width:calc(100% - 1em);height:2px;background-color:#e74e45;display:block}a.svelte-lsy7z7{display:flex;padding:1em 0.5em;text-decoration:none;margin:2em, 0em}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */