import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, o as createEventDispatcher, p as globals, a as space, e as element, r as create_component, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, g as children, u as claim_component, j as attr_dev, k as add_location, l as insert_dev, w as mount_component, m as append_dev, x as transition_out, y as check_outros, z as transition_in, A as destroy_component, B as group_outros } from './client.ee6fada2.js';
import Q0 from './q0.4c1b0bf8.js';
import Q1 from './q1.0f012175.js';
import Q2 from './q2.36007fcd.js';
import Q3 from './q3.71e3e010.js';
import Q4 from './q4.713d04d1.js';
import Q5 from './q5.55338c8f.js';
import Q6 from './q6.049a4725.js';
import Q7 from './q7.8aa4f9b8.js';
import Q8 from './q8.f7c99802.js';
import Q9 from './q9.428191b0.js';
import { C as Completion } from './Completion.c63f6eda.js';

function quintOut(t) {
    return --t * t * t * t * t + 1;
}

/* src/routes/quizmain.svelte generated by Svelte v3.23.2 */

const { Object: Object_1, console: console_1 } = globals;
const file = "src/routes/quizmain.svelte";

function create_fragment(ctx) {
	let t0;
	let main;
	let completion;
	let t1;
	let section;
	let switch_instance;
	let current;
	completion = new Completion({ props: { class: "step" }, $$inline: true });
	var switch_value = /*quizSteps*/ ctx[0][/*quizNum*/ ctx[1]].component;

	function switch_props(ctx) {
		return { $$inline: true };
	}

	if (switch_value) {
		switch_instance = new switch_value(switch_props());
		switch_instance.$on("message", /*handleMessage*/ ctx[2]);
	}

	const block = {
		c: function create() {
			t0 = space();
			main = element("main");
			create_component(completion.$$.fragment);
			t1 = space();
			section = element("section");
			if (switch_instance) create_component(switch_instance.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-7q3d4x\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			claim_component(completion.$$.fragment, main_nodes);
			t1 = claim_space(main_nodes);
			section = claim_element(main_nodes, "SECTION", { id: true, class: true });
			var section_nodes = children(section);
			if (switch_instance) claim_component(switch_instance.$$.fragment, section_nodes);
			section_nodes.forEach(detach_dev);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Test your knowledge";
			attr_dev(section, "id", "main-content");
			attr_dev(section, "class", "svelte-2y5a9m");
			add_location(section, file, 48, 7, 1919);
			attr_dev(main, "class", "svelte-2y5a9m");
			add_location(main, file, 46, 0, 1871);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, main, anchor);
			mount_component(completion, main, null);
			append_dev(main, t1);
			append_dev(main, section);

			if (switch_instance) {
				mount_component(switch_instance, section, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (switch_value !== (switch_value = /*quizSteps*/ ctx[0][/*quizNum*/ ctx[1]].component)) {
				if (switch_instance) {
					group_outros();
					const old_component = switch_instance;

					transition_out(old_component.$$.fragment, 1, 0, () => {
						destroy_component(old_component, 1);
					});

					check_outros();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props());
					switch_instance.$on("message", /*handleMessage*/ ctx[2]);
					create_component(switch_instance.$$.fragment);
					transition_in(switch_instance.$$.fragment, 1);
					mount_component(switch_instance, section, null);
				} else {
					switch_instance = null;
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(completion.$$.fragment, local);
			if (switch_instance) transition_in(switch_instance.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(completion.$$.fragment, local);
			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(main);
			destroy_component(completion);
			if (switch_instance) destroy_component(switch_instance);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const quizSteps = [
		{
			id: "1",
			component: Q0,
			name: "Webcam Challenge",
			complete: false
		},
		{
			id: "2",
			component: Q1,
			name: "Browser Choice",
			complete: false
		},
		{
			id: "3",
			component: Q2,
			name: "Privacy Setting",
			complete: false
		},
		{
			id: "4",
			component: Q3,
			name: "Https everywhere",
			complete: false
		},
		{
			id: "5",
			component: Q4,
			name: "Location Services (phone needed)",
			complete: false
		},
		{
			id: "6",
			component: Q5,
			name: "Tracker blocker",
			complete: false
		},
		{
			id: "7",
			component: Q6,
			name: "location Tracking",
			complete: false
		},
		{
			id: "8",
			component: Q7,
			name: "Mobile keyboard",
			complete: false
		},
		{
			id: "9",
			component: Q8,
			name: "Messenger platform",
			complete: false
		},
		{
			id: "10",
			component: Q9,
			name: "iot",
			time: "2mins"
		}
	];

	function handleMessage(event) {
		$$invalidate(1, quizNum++, quizNum);

		//quizSteps[Object.values(event.detail[0])].complete = object.values(event.detail[1])
		let status = Object.values(event.detail);

		console.log(status);
		let location = status[0];
		$$invalidate(0, quizSteps[location].complete = status[1], quizSteps);
		console.log(quizSteps[location]);
	}

	const writable_props = [];

	Object_1.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Quizmain> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Quizmain", $$slots, []);

	$$self.$capture_state = () => ({
		Quiz1: Q0,
		Quiz2: Q1,
		Quiz3: Q2,
		Quiz4: Q3,
		Quiz5: Q4,
		Quiz6: Q5,
		Quiz7: Q6,
		Quiz8: Q7,
		Quiz9: Q8,
		Quiz10: Q9,
		Completion,
		createEventDispatcher,
		quintOut,
		quizSteps,
		handleMessage,
		quizNum
	});

	$$self.$inject_state = $$props => {
		if ("quizNum" in $$props) $$invalidate(1, quizNum = $$props.quizNum);
	};

	let quizNum;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	 $$invalidate(1, quizNum = 1);
	return [quizSteps, quizNum, handleMessage];
}

class Quizmain extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Quizmain",
			options,
			id: create_fragment.name
		});
	}
}

export default Quizmain;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
