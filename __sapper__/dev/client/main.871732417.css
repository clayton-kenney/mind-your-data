h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
main.svelte-19axu57{background-color:white;box-sizing:border-box}
#logo-holder.svelte-hm3in1{background-color:#f5f4f4;display:flex;flex-flow:column nowrap;align-items:center}img.svelte-hm3in1{width:800px}
h1.svelte-1acdip2.svelte-1acdip2,p.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:0 auto}.hero.svelte-1acdip2.svelte-1acdip2{background-color:#3e4b59;padding-left:80px;padding-top:30vh;width:100%;height:60vh}.hero.svelte-1acdip2 p.svelte-1acdip2{margin:1em auto;color:white}h1.svelte-1acdip2.svelte-1acdip2{font-size:2.8em;text-align:left;text-transform:uppercase;font-weight:700;margin:0 0 0.5em 0;color:white;letter-spacing:25%}h2.svelte-1acdip2.svelte-1acdip2{text-align:left;margin:auto;text-transform:uppercase}h3.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:auto}.bigImg.svelte-1acdip2.svelte-1acdip2{max-width:1400px;background-color:grey}button.svelte-1acdip2.svelte-1acdip2{background:#7AAF54;text-transform:uppercase;padding:10px 20px 10px 20px;font-size:30px;line-height:38px;border:none;border-radius:10px;color:white;box-shadow:0px 4px 4px rgba(0, 0, 0, 0.25)}img.svelte-1acdip2.svelte-1acdip2{width:100%;max-width:400px;margin:0 0 1em 0}.about.svelte-1acdip2.svelte-1acdip2{padding:1.5em}p.svelte-1acdip2.svelte-1acdip2{color:black;text-align:left}ul.svelte-1acdip2.svelte-1acdip2{display:flex;flex-direction:row;list-style:none;margin-block-start:0px;margin-block-end:0px;padding-inline-start:0px}li.svelte-1acdip2.svelte-1acdip2{justify-content:space-around;margin:auto}.why.svelte-1acdip2.svelte-1acdip2{padding-left:80px;margin:1em auto}a.svelte-1acdip2.svelte-1acdip2{text-decoration:none;padding:4px 30px}@media(min-width: 480px){h1.svelte-1acdip2.svelte-1acdip2{font-size:4em}}
main.svelte-pffqqm{display:flex;flex-flow:row;background:#303538}#main-content.svelte-pffqqm{background:#38424D;border-radius:15px;border:0px;margin:12px 22px 40px 20px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF;width:100%;background-image:url('../bg-vector.png');background-blend-mode:darken}#checkpoint.svelte-pffqqm{}
main.svelte-imo9h5{background-color:#303538}.review.svelte-imo9h5{width:50vw;background-color:#38424d;display:flex;flex-flow:column;margin:auto;color:#ffffff;padding:65px 100px 65px 65px}#complete.svelte-imo9h5{background-color:#38424D;color:#ffffff;font-weight:500;margin:5px}#incomplete.svelte-imo9h5{background-color:#ffffff;color:#e94040;font-weight:500;margin:5px}.caret.svelte-imo9h5{display:flex;flex-flow:row nowrap;align-items:center;justify-content:space-between}div.caret.svelte-imo9h5{border-radius:6px;border:none;margin:10px;padding:10px 20px}.prize1.svelte-imo9h5{color:#ffffff;display:flex;flex-flow:column nowrap;align-items:center;text-align:center}img.svelte-imo9h5{width:100%;border-radius:6px}
main.svelte-b8tydx{display:flex;flex-flow:row;justify-content:center;margin-top:15px;background:#303538}section.svelte-b8tydx{background:#38424D;width:65vw;border-radius:15px;border:0px;margin:auto;padding:15vh 9vw;color:#FFFFFF;text-align:center;max-width:62%;background-image:url(/bg-lock.png);background-repeat:no-repeat;background-blend-mode:darken;background-position:center}#welcome.svelte-b8tydx{padding-bottom:40px}p.svelte-b8tydx{text-align:left}.welcome-text.svelte-b8tydx{text-align:center}#headline.svelte-b8tydx{font-weight:600;margin-bottom:25px;font-size:20px}#start.svelte-b8tydx{background-color:#73ef7b;margin-top:50px}#start-challenge.svelte-b8tydx{margin-top:75px}a.svelte-b8tydx{text-decoration:none}.caret.svelte-b8tydx{display:flex;flex-flow:row nowrap;align-items:center;justify-content:space-between}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
aside.svelte-n0ypaq{display:block;top:50px;left:0;width:27.77vw;height:100vh;padding-left:50px}section.svelte-n0ypaq{padding:10px 10px 20px 10px}
nav.svelte-ufiipd{display:flex;flex-flow:row nowrap;height:50px;justify-content:space-between;align-items:center;background-color:#303538;font-weight:300;padding:0 1em;position:sticky;top:0px;left:0px;z-index:1}ul.svelte-ufiipd{display:flex;list-style:none;justify-content:flex-end;margin:0;padding:0}img.svelte-ufiipd{display:flex;justify-content:flex-start;height:30px;margin-left:25px}li.svelte-ufiipd{display:flex;margin:0px 20px 0px 20px;text-transform:uppercase}[aria-current].svelte-ufiipd{position:relative;display:inline-block}[aria-current].svelte-ufiipd::after{position:absolute;content:'';width:calc(100% - 1em);height:2px;background-color:#e83e40;display:block}a.svelte-ufiipd{display:flex;padding:1em 0.5em;text-decoration:none;margin:2em, 0em}.home.svelte-ufiipd{background-color:#f5f4f4;color:#303538}.other.svelte-ufiipd{color:#c7c7c7}#hidden.svelte-ufiipd{opacity:0%}
canvas.svelte-1qzoqa3{position:absolute;top:100px;left:525px}.alert.svelte-1qzoqa3{color:red;font-weight:700;font-size:24px}#not-covered.svelte-1qzoqa3{color:red;background:#FFEEEE;border-radius:6px;border:none;padding:15px}
.button-holder.svelte-leh4oa{width:27vw;display:flex;flex-flow:column nowrap}a.svelte-leh4oa{text-decoration:none}
a.svelte-toxb71{text-decoration:underline}
.video-holder.svelte-3iqsue{width:100%}
.button-holder.svelte-h4ab6b{width:27vw;display:flex;flex-flow:column nowrap}.caret.svelte-h4ab6b{display:flex;flex-flow:row nowrap;align-items:center;justify-content:space-between}
a.svelte-1x8vj0q{text-decoration:none}
.button-holder.svelte-1omauo6{width:27vw;display:flex;flex-flow:column nowrap}#cookie-buttons.svelte-1omauo6{margin:40px 0px 0px 0px}
section.svelte-1fien2q{width:100%;background-image:url(https://images.unsplash.com/photo-1535376472810-5d229c65da09?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2600&q=80);background-size:contain;padding-top:15px}div.svelte-1fien2q{width:50%;margin:auto;background:#38424D;border:none;border-radius:15px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF}strong.svelte-1fien2q{font-weight:700;font-size:22px}
#main-content.svelte-su6n7t{width:100%;background-image:url(https://images.unsplash.com/photo-1558697524-5a2d1e8a93d1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80);background-size:contain;padding-top:15px}div.svelte-su6n7t{width:50%;margin:auto;background:#38424D;border:none;border-radius:15px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF}strong.svelte-su6n7t{font-weight:700;font-size:22px}
.caret.svelte-b0zxsu{display:flex;flex-flow:row nowrap;align-items:center;justify-content:space-between}
section.svelte-17t364p{width:100%}
section.svelte-1yt86zy{width:100vw;height:100vh;background-image:url(https://images.unsplash.com/photo-1557411732-1797a9171fcf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80);background-size:contain;padding-top:15px;text-align:center}div.svelte-1yt86zy{width:50%;margin:auto;background:#38424D;border:none;border-radius:15px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF}
.green.svelte-b2lwl2{background-color:#73ef7b;color:#2C3C4E}.yellow.svelte-b2lwl2{background-color:#F1C330;color:#2C3C4E}.red.svelte-b2lwl2{background-color:#E74E45;color:#FFFFFF}
aside.svelte-dt6280{display:flex;flex-direction:column;justify-content:space-between;align-items:center;width:33.75vw;height:86vh;background-color:#38424D;border-radius:15px;border:0px;margin:12px 0px 40px 20px;min-width:33vw;position:sticky;top:50px}#timer.svelte-dt6280{display:flex;flex-flow:row wrap;margin-block-start:30px;align-items:center;justify-content:center}#minutes.svelte-dt6280{color:white;background:#0F2033;border-radius:6px;max-width:150px;height:60px;text-align:center;font-size:24px;margin:12px 40px;display:grid;align-content:center;padding:2px 30px}.done.svelte-dt6280{display:flex;flex-flow:row nowrap;align-items:center;width:95%;margin-bottom:20px
    }progress.svelte-dt6280{-webkit-appearance:none;border:none;display:block;width:22vw;position:relative;bottom:33px;height:6px;z-index:-1;margin-left:1.9vw}progress.svelte-dt6280::-webkit-progress-bar{background:#303538}progress.bg1.svelte-dt6280::-webkit-progress-value{background:#74ef7b}progress.bg2.svelte-dt6280::-webkit-progress-value{background:#F1C330}progress.bg3.svelte-dt6280::-webkit-progress-value{background:#E94040}.bg1.svelte-dt6280{background-image:url('../bg-group1.png');background-blend-mode:normal;background-size:cover;background-position:top;color:#74ef7b;font-size:20px}.bg2.svelte-dt6280{background-image:url('../bg-group2.png');background-blend-mode:normal;background-size:cover;background-position:top;color:#F1C330;font-size:20px}.bg3.svelte-dt6280{background-image:url('../bg-group3.png');background-blend-mode:normal;background-size:cover;background-position:top;color:#E94040;font-size:20px}#progress-holder.svelte-dt6280{width:80%}#challenge-name.svelte-dt6280{font-size:40px;color:white;margin:auto;min-width:150px}
button.svelte-c2wm0k{}.green.svelte-c2wm0k{background-color:#73ef7b;color:#2C3C4E}.yellow.svelte-c2wm0k{background-color:#F1C330;color:#2C3C4E}.red.svelte-c2wm0k{background-color:#E74E45;color:#FFFFFF}
#back.svelte-1x5om3e{display:flex;position:inherit;bottom:72px;flex-flow:row nowrap;align-items:center;color:#757575;margin:20px 0px}svg.svelte-1x5om3e{margin-right:20px;fill:#757575}
.lock.svelte-n4s916{margin:auto}
strong.svelte-1qffeqo{font-weight:600;font-size:22px;text-decoration:underline}
body.svelte-1kse6g9{background:#303538}section.svelte-1kse6g9{background:#f5f4f4;border-radius:15px;border:0px;margin:auto;padding:15vh 9vw;text-align:center;max-width:62%;height:100%
}h2.svelte-1kse6g9{color:#e83e40}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */