import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, o as validate_store, p as component_subscribe, v as validate_slots, e as element, t as text, f as claim_element, g as children, h as claim_text, b as detach_dev, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, T as listen_dev, n as noop, M as empty, P as set_store_value } from './client.f56d2879.js';
import { c as count, q as quizSteps, s as step } from './store.131a1510.js';

/* src/components/Back.svelte generated by Svelte v3.23.2 */
const file = "src/components/Back.svelte";

// (16:0) {#if $count >= 1}
function create_if_block(ctx) {
	let button;
	let t;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			button = element("button");
			t = text("Back");
			this.h();
		},
		l: function claim(nodes) {
			button = claim_element(nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t = claim_text(button_nodes, "Back");
			button_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button, "class", "svelte-96bmx6");
			add_location(button, file, 16, 0, 466);
		},
		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			append_dev(button, t);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*click_handler*/ ctx[2], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(16:0) {#if $count >= 1}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let if_block = /*$count*/ ctx[0] >= 1 && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (/*$count*/ ctx[0] >= 1) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $count;
	let $quizSteps;
	validate_store(count, "count");
	component_subscribe($$self, count, $$value => $$invalidate(0, $count = $$value));
	validate_store(quizSteps, "quizSteps");
	component_subscribe($$self, quizSteps, $$value => $$invalidate(3, $quizSteps = $$value));

	function goBack() {
		if ($count >= 1) {
			alert("Are you sure you want to go back?");

			//$quizSteps[$count].complete = true;
			count.update(n => n - 1);

			set_store_value(quizSteps, $quizSteps[$count + 1].status = 0, $quizSteps);
			set_store_value(quizSteps, $quizSteps[$count].status = 1, $quizSteps);
			step.set($quizSteps[$count].steps);
		} else {
			alert("Going back to " + $quizSteps[$count].steps);
		}
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Back> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Back", $$slots, []);
	const click_handler = () => goBack();

	$$self.$capture_state = () => ({
		count,
		step,
		quizSteps,
		goBack,
		$count,
		$quizSteps
	});

	return [$count, goBack, click_handler];
}

class Back extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Back",
			options,
			id: create_fragment.name
		});
	}
}

export { Back as B };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmFjay4zNzQwYWYxOC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQmFjay5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbmltcG9ydCB7IGNvdW50LCBzdGVwLCBxdWl6U3RlcHMgfSBmcm9tICcuLi9zdG9yZS5qcydcbmZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBpZigkY291bnQgPj0gMSkge1xuICAgICAgICBhbGVydCgnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGdvIGJhY2s/JylcbiAgICAgICAgLy8kcXVpelN0ZXBzWyRjb3VudF0uY29tcGxldGUgPSB0cnVlO1xuICAgICAgICBjb3VudC51cGRhdGUobiA9PiBuIC0gMSlcbiAgICAgICAgJHF1aXpTdGVwc1skY291bnQrMV0uc3RhdHVzID0gMDtcbiAgICAgICAgJHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDE7XG4gICAgICAgIHN0ZXAuc2V0KCRxdWl6U3RlcHNbJGNvdW50XS5zdGVwcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgYWxlcnQoJ0dvaW5nIGJhY2sgdG8gJyArICRxdWl6U3RlcHNbJGNvdW50XS5zdGVwcylcbiAgICB9XG59XG48L3NjcmlwdD5cbnsjaWYgJGNvdW50ID49IDF9XG48YnV0dG9uIG9uOmNsaWNrPXsoKSA9PiBnb0JhY2soKX0+XG4gICAgQmFja1xuPC9idXR0b24+XG57L2lmfVxuPHN0eWxlPlxuICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdFx0XHRtYXJnaW46IDEwcHg7XG5cdFx0XHRib3JkZXI6IGJsYWNrIHNvbGlkIDBweDtcblx0XHRcdGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgICAgICAgIGJvdHRvbTogMTBweDtcbiAgICB9XG48L3N0eWxlPiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBZUssR0FBTSxPQUFJLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7a0JBQVgsR0FBTSxPQUFJLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7VUFiUCxNQUFNO01BQ1IsTUFBTSxJQUFJLENBQUM7R0FDVixLQUFLLENBQUMsbUNBQW1DOzs7R0FFekMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7OzhCQUN2QixVQUFVLENBQUMsTUFBTSxHQUFDLENBQUMsRUFBRSxNQUFNLEdBQUcsQ0FBQzs4QkFDL0IsVUFBVSxDQUFDLE1BQU0sRUFBRSxNQUFNLEdBQUcsQ0FBQztHQUM3QixJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsS0FBSzs7R0FFakMsS0FBSyxDQUFDLGdCQUFnQixHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsS0FBSzs7Ozs7Ozs7Ozs7OzZCQUtqQyxNQUFNOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
