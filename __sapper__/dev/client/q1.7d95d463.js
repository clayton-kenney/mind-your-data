import { C as writable, D as identity, E as assign, F as now, G as loop, S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, H as validate_store, I as component_subscribe, J as set_store_value, v as validate_slots, e as element, t as text, a as space, f as claim_element, g as children, h as claim_text, b as detach_dev, c as claim_space, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, K as set_data_dev, n as noop, L as validate_each_argument, o as createEventDispatcher, M as afterUpdate, N as onMount, p as globals, O as null_to_empty, q as query_selector_all, P as listen_dev, Q as destroy_each } from './client.502d9b0b.js';

function is_date(obj) {
    return Object.prototype.toString.call(obj) === '[object Date]';
}

function get_interpolator(a, b) {
    if (a === b || a !== a)
        return () => a;
    const type = typeof a;
    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {
        throw new Error('Cannot interpolate values of different type');
    }
    if (Array.isArray(a)) {
        const arr = b.map((bi, i) => {
            return get_interpolator(a[i], bi);
        });
        return t => arr.map(fn => fn(t));
    }
    if (type === 'object') {
        if (!a || !b)
            throw new Error('Object cannot be null');
        if (is_date(a) && is_date(b)) {
            a = a.getTime();
            b = b.getTime();
            const delta = b - a;
            return t => new Date(a + t * delta);
        }
        const keys = Object.keys(b);
        const interpolators = {};
        keys.forEach(key => {
            interpolators[key] = get_interpolator(a[key], b[key]);
        });
        return t => {
            const result = {};
            keys.forEach(key => {
                result[key] = interpolators[key](t);
            });
            return result;
        };
    }
    if (type === 'number') {
        const delta = b - a;
        return t => a + t * delta;
    }
    throw new Error(`Cannot interpolate ${type} values`);
}
function tweened(value, defaults = {}) {
    const store = writable(value);
    let task;
    let target_value = value;
    function set(new_value, opts) {
        if (value == null) {
            store.set(value = new_value);
            return Promise.resolve();
        }
        target_value = new_value;
        let previous_task = task;
        let started = false;
        let { delay = 0, duration = 400, easing = identity, interpolate = get_interpolator } = assign(assign({}, defaults), opts);
        if (duration === 0) {
            if (previous_task) {
                previous_task.abort();
                previous_task = null;
            }
            store.set(value = target_value);
            return Promise.resolve();
        }
        const start = now() + delay;
        let fn;
        task = loop(now => {
            if (now < start)
                return true;
            if (!started) {
                fn = interpolate(value, new_value);
                if (typeof duration === 'function')
                    duration = duration(value, new_value);
                started = true;
            }
            if (previous_task) {
                previous_task.abort();
                previous_task = null;
            }
            const elapsed = now - start;
            if (elapsed > duration) {
                store.set(value = new_value);
                return false;
            }
            // @ts-ignore
            store.set(value = fn(easing(elapsed / duration)));
            return true;
        });
        return task.promise;
    }
    return {
        set,
        update: (fn, opts) => set(fn(target_value, value), opts),
        subscribe: store.subscribe
    };
}

/* src/components/Completion.svelte generated by Svelte v3.23.2 */
const file = "src/components/Completion.svelte";

function create_fragment(ctx) {
	let section0;
	let span0;
	let t0;
	let t1;
	let span1;
	let t2;
	let t3;
	let t4;
	let t5;
	let section1;
	let img0;
	let img0_src_value;
	let t6;
	let img1;
	let img1_src_value;
	let t7;
	let img2;
	let img2_src_value;
	let t8;
	let img3;
	let img3_src_value;
	let t9;
	let img4;
	let img4_src_value;
	let t10;
	let img5;
	let img5_src_value;
	let t11;
	let img6;
	let img6_src_value;
	let t12;
	let img7;
	let img7_src_value;
	let t13;
	let img8;
	let img8_src_value;
	let t14;
	let img9;
	let img9_src_value;
	let t15;
	let img10;
	let img10_src_value;
	let t16;
	let img11;
	let img11_src_value;
	let t17;
	let img12;
	let img12_src_value;
	let t18;
	let img13;
	let img13_src_value;
	let t19;
	let img14;
	let img14_src_value;
	let t20;
	let img15;
	let img15_src_value;
	let t21;
	let img16;
	let img16_src_value;
	let t22;
	let img17;
	let img17_src_value;
	let t23;
	let img18;
	let img18_src_value;
	let t24;
	let img19;
	let img19_src_value;
	let t25;
	let img20;
	let img20_src_value;
	let t26;
	let img21;
	let img21_src_value;
	let t27;
	let img22;
	let img22_src_value;
	let t28;
	let img23;
	let img23_src_value;
	let t29;
	let img24;
	let img24_src_value;
	let t30;
	let img25;
	let img25_src_value;
	let t31;
	let img26;
	let img26_src_value;
	let t32;
	let img27;
	let img27_src_value;

	const block = {
		c: function create() {
			section0 = element("section");
			span0 = element("span");
			t0 = text("Time remaining:");
			t1 = space();
			span1 = element("span");
			t2 = text(/*minutes*/ ctx[0]);
			t3 = text(":");
			t4 = text(/*seconds*/ ctx[1]);
			t5 = space();
			section1 = element("section");
			img0 = element("img");
			t6 = space();
			img1 = element("img");
			t7 = space();
			img2 = element("img");
			t8 = space();
			img3 = element("img");
			t9 = space();
			img4 = element("img");
			t10 = space();
			img5 = element("img");
			t11 = space();
			img6 = element("img");
			t12 = space();
			img7 = element("img");
			t13 = space();
			img8 = element("img");
			t14 = space();
			img9 = element("img");
			t15 = space();
			img10 = element("img");
			t16 = space();
			img11 = element("img");
			t17 = space();
			img12 = element("img");
			t18 = space();
			img13 = element("img");
			t19 = space();
			img14 = element("img");
			t20 = space();
			img15 = element("img");
			t21 = space();
			img16 = element("img");
			t22 = space();
			img17 = element("img");
			t23 = space();
			img18 = element("img");
			t24 = space();
			img19 = element("img");
			t25 = space();
			img20 = element("img");
			t26 = space();
			img21 = element("img");
			t27 = space();
			img22 = element("img");
			t28 = space();
			img23 = element("img");
			t29 = space();
			img24 = element("img");
			t30 = space();
			img25 = element("img");
			t31 = space();
			img26 = element("img");
			t32 = space();
			img27 = element("img");
			this.h();
		},
		l: function claim(nodes) {
			section0 = claim_element(nodes, "SECTION", { id: true, class: true });
			var section0_nodes = children(section0);
			span0 = claim_element(section0_nodes, "SPAN", { id: true, class: true });
			var span0_nodes = children(span0);
			t0 = claim_text(span0_nodes, "Time remaining:");
			span0_nodes.forEach(detach_dev);
			t1 = claim_space(section0_nodes);
			span1 = claim_element(section0_nodes, "SPAN", { id: true, class: true });
			var span1_nodes = children(span1);
			t2 = claim_text(span1_nodes, /*minutes*/ ctx[0]);
			t3 = claim_text(span1_nodes, ":");
			t4 = claim_text(span1_nodes, /*seconds*/ ctx[1]);
			span1_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t5 = claim_space(nodes);
			section1 = claim_element(nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			img0 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t6 = claim_space(section1_nodes);
			img1 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t7 = claim_space(section1_nodes);
			img2 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t8 = claim_space(section1_nodes);
			img3 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t9 = claim_space(section1_nodes);
			img4 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t10 = claim_space(section1_nodes);
			img5 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t11 = claim_space(section1_nodes);
			img6 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t12 = claim_space(section1_nodes);
			img7 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t13 = claim_space(section1_nodes);
			img8 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t14 = claim_space(section1_nodes);
			img9 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t15 = claim_space(section1_nodes);
			img10 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t16 = claim_space(section1_nodes);
			img11 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t17 = claim_space(section1_nodes);
			img12 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t18 = claim_space(section1_nodes);
			img13 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t19 = claim_space(section1_nodes);
			img14 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t20 = claim_space(section1_nodes);
			img15 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t21 = claim_space(section1_nodes);
			img16 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t22 = claim_space(section1_nodes);
			img17 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t23 = claim_space(section1_nodes);
			img18 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t24 = claim_space(section1_nodes);
			img19 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t25 = claim_space(section1_nodes);
			img20 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t26 = claim_space(section1_nodes);
			img21 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t27 = claim_space(section1_nodes);
			img22 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t28 = claim_space(section1_nodes);
			img23 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t29 = claim_space(section1_nodes);
			img24 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t30 = claim_space(section1_nodes);
			img25 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t31 = claim_space(section1_nodes);
			img26 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			t32 = claim_space(section1_nodes);
			img27 = claim_element(section1_nodes, "IMG", { src: true, alt: true, class: true });
			section1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span0, "id", "remaining");
			attr_dev(span0, "class", "svelte-99wito");
			add_location(span0, file, 28, 4, 748);
			attr_dev(span1, "id", "minutes");
			attr_dev(span1, "class", "svelte-99wito");
			add_location(span1, file, 29, 4, 797);
			attr_dev(section0, "id", "timer");
			attr_dev(section0, "class", "svelte-99wito");
			add_location(section0, file, 27, 0, 723);
			if (img0.src !== (img0_src_value = "./lock-active.svg")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "alt", "completed");
			attr_dev(img0, "class", "active lock svelte-99wito");
			add_location(img0, file, 32, 4, 881);
			if (img1.src !== (img1_src_value = "./Ellipse-active.png")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "alt", "completed");
			attr_dev(img1, "class", "ellipse active svelte-99wito");
			add_location(img1, file, 33, 8, 957);
			if (img2.src !== (img2_src_value = "./Ellipse-inactive.png")) attr_dev(img2, "src", img2_src_value);
			attr_dev(img2, "alt", "completed");
			attr_dev(img2, "class", "ellipse inactive svelte-99wito");
			add_location(img2, file, 34, 8, 1039);
			if (img3.src !== (img3_src_value = "./lock-inactive.svg")) attr_dev(img3, "src", img3_src_value);
			attr_dev(img3, "alt", "completed");
			attr_dev(img3, "class", "inactive lock svelte-99wito");
			add_location(img3, file, 35, 4, 1121);
			if (img4.src !== (img4_src_value = "./Ellipse-inactive.png")) attr_dev(img4, "src", img4_src_value);
			attr_dev(img4, "alt", "completed");
			attr_dev(img4, "class", "ellipse inactive svelte-99wito");
			add_location(img4, file, 36, 8, 1201);
			if (img5.src !== (img5_src_value = "./Ellipse-inactive.png")) attr_dev(img5, "src", img5_src_value);
			attr_dev(img5, "alt", "completed");
			attr_dev(img5, "class", "ellipse inactive svelte-99wito");
			add_location(img5, file, 37, 8, 1287);
			if (img6.src !== (img6_src_value = "./lock-inactive.svg")) attr_dev(img6, "src", img6_src_value);
			attr_dev(img6, "alt", "completed");
			attr_dev(img6, "class", "inactive lock svelte-99wito");
			add_location(img6, file, 38, 4, 1369);
			if (img7.src !== (img7_src_value = "./Ellipse-inactive.png")) attr_dev(img7, "src", img7_src_value);
			attr_dev(img7, "alt", "completed");
			attr_dev(img7, "class", "ellipse inactive svelte-99wito");
			add_location(img7, file, 39, 8, 1450);
			if (img8.src !== (img8_src_value = "./Ellipse-inactive.png")) attr_dev(img8, "src", img8_src_value);
			attr_dev(img8, "alt", "completed");
			attr_dev(img8, "class", "ellipse inactive svelte-99wito");
			add_location(img8, file, 40, 8, 1536);
			if (img9.src !== (img9_src_value = "./lock-inactive.svg")) attr_dev(img9, "src", img9_src_value);
			attr_dev(img9, "alt", "completed");
			attr_dev(img9, "class", "inactive lock svelte-99wito");
			add_location(img9, file, 41, 4, 1618);
			if (img10.src !== (img10_src_value = "./Ellipse-inactive.png")) attr_dev(img10, "src", img10_src_value);
			attr_dev(img10, "alt", "completed");
			attr_dev(img10, "class", "ellipse inactive svelte-99wito");
			add_location(img10, file, 42, 8, 1698);
			if (img11.src !== (img11_src_value = "./Ellipse-inactive.png")) attr_dev(img11, "src", img11_src_value);
			attr_dev(img11, "alt", "completed");
			attr_dev(img11, "class", "ellipse inactive svelte-99wito");
			add_location(img11, file, 43, 8, 1784);
			if (img12.src !== (img12_src_value = "./lock-inactive.svg")) attr_dev(img12, "src", img12_src_value);
			attr_dev(img12, "alt", "completed");
			attr_dev(img12, "class", "inactive lock svelte-99wito");
			add_location(img12, file, 45, 4, 1867);
			if (img13.src !== (img13_src_value = "./Ellipse-inactive.png")) attr_dev(img13, "src", img13_src_value);
			attr_dev(img13, "alt", "completed");
			attr_dev(img13, "class", "ellipse inactive svelte-99wito");
			add_location(img13, file, 46, 8, 1947);
			if (img14.src !== (img14_src_value = "./Ellipse-inactive.png")) attr_dev(img14, "src", img14_src_value);
			attr_dev(img14, "alt", "completed");
			attr_dev(img14, "class", "ellipse inactive svelte-99wito");
			add_location(img14, file, 47, 8, 2033);
			if (img15.src !== (img15_src_value = "./lock-inactive.svg")) attr_dev(img15, "src", img15_src_value);
			attr_dev(img15, "alt", "completed");
			attr_dev(img15, "class", "inactive lock svelte-99wito");
			add_location(img15, file, 49, 4, 2116);
			if (img16.src !== (img16_src_value = "./Ellipse-inactive.png")) attr_dev(img16, "src", img16_src_value);
			attr_dev(img16, "alt", "completed");
			attr_dev(img16, "class", "ellipse inactive svelte-99wito");
			add_location(img16, file, 50, 8, 2196);
			if (img17.src !== (img17_src_value = "./Ellipse-inactive.png")) attr_dev(img17, "src", img17_src_value);
			attr_dev(img17, "alt", "completed");
			attr_dev(img17, "class", "ellipse inactive svelte-99wito");
			add_location(img17, file, 51, 5, 2279);
			if (img18.src !== (img18_src_value = "./lock-inactive.svg")) attr_dev(img18, "src", img18_src_value);
			attr_dev(img18, "alt", "completed");
			attr_dev(img18, "class", "inactive lock svelte-99wito");
			add_location(img18, file, 53, 4, 2362);
			if (img19.src !== (img19_src_value = "./Ellipse-inactive.png")) attr_dev(img19, "src", img19_src_value);
			attr_dev(img19, "alt", "completed");
			attr_dev(img19, "class", "ellipse inactive svelte-99wito");
			add_location(img19, file, 54, 8, 2442);
			if (img20.src !== (img20_src_value = "./Ellipse-inactive.png")) attr_dev(img20, "src", img20_src_value);
			attr_dev(img20, "alt", "completed");
			attr_dev(img20, "class", "ellipse inactive svelte-99wito");
			add_location(img20, file, 55, 8, 2528);
			if (img21.src !== (img21_src_value = "./lock-inactive.svg")) attr_dev(img21, "src", img21_src_value);
			attr_dev(img21, "alt", "completed");
			attr_dev(img21, "class", "inactive lock svelte-99wito");
			add_location(img21, file, 57, 4, 2611);
			if (img22.src !== (img22_src_value = "./Ellipse-inactive.png")) attr_dev(img22, "src", img22_src_value);
			attr_dev(img22, "alt", "completed");
			attr_dev(img22, "class", "ellipse inactive svelte-99wito");
			add_location(img22, file, 58, 8, 2691);
			if (img23.src !== (img23_src_value = "./Ellipse-inactive.png")) attr_dev(img23, "src", img23_src_value);
			attr_dev(img23, "alt", "completed");
			attr_dev(img23, "class", "ellipse inactive svelte-99wito");
			add_location(img23, file, 59, 8, 2777);
			if (img24.src !== (img24_src_value = "./lock-inactive.svg")) attr_dev(img24, "src", img24_src_value);
			attr_dev(img24, "alt", "completed");
			attr_dev(img24, "class", "inactive lock svelte-99wito");
			add_location(img24, file, 61, 4, 2860);
			if (img25.src !== (img25_src_value = "./Ellipse-inactive.png")) attr_dev(img25, "src", img25_src_value);
			attr_dev(img25, "alt", "completed");
			attr_dev(img25, "class", "ellipse inactive svelte-99wito");
			add_location(img25, file, 62, 8, 2940);
			if (img26.src !== (img26_src_value = "./Ellipse-inactive.png")) attr_dev(img26, "src", img26_src_value);
			attr_dev(img26, "alt", "completed");
			attr_dev(img26, "class", "ellipse inactive svelte-99wito");
			add_location(img26, file, 63, 8, 3026);
			if (img27.src !== (img27_src_value = "./lock-inactive.svg")) attr_dev(img27, "src", img27_src_value);
			attr_dev(img27, "alt", "completed");
			attr_dev(img27, "class", "inactive lock svelte-99wito");
			add_location(img27, file, 65, 4, 3109);
			attr_dev(section1, "class", "done svelte-99wito");
			add_location(section1, file, 31, 0, 854);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section0, anchor);
			append_dev(section0, span0);
			append_dev(span0, t0);
			append_dev(section0, t1);
			append_dev(section0, span1);
			append_dev(span1, t2);
			append_dev(span1, t3);
			append_dev(span1, t4);
			insert_dev(target, t5, anchor);
			insert_dev(target, section1, anchor);
			append_dev(section1, img0);
			append_dev(section1, t6);
			append_dev(section1, img1);
			append_dev(section1, t7);
			append_dev(section1, img2);
			append_dev(section1, t8);
			append_dev(section1, img3);
			append_dev(section1, t9);
			append_dev(section1, img4);
			append_dev(section1, t10);
			append_dev(section1, img5);
			append_dev(section1, t11);
			append_dev(section1, img6);
			append_dev(section1, t12);
			append_dev(section1, img7);
			append_dev(section1, t13);
			append_dev(section1, img8);
			append_dev(section1, t14);
			append_dev(section1, img9);
			append_dev(section1, t15);
			append_dev(section1, img10);
			append_dev(section1, t16);
			append_dev(section1, img11);
			append_dev(section1, t17);
			append_dev(section1, img12);
			append_dev(section1, t18);
			append_dev(section1, img13);
			append_dev(section1, t19);
			append_dev(section1, img14);
			append_dev(section1, t20);
			append_dev(section1, img15);
			append_dev(section1, t21);
			append_dev(section1, img16);
			append_dev(section1, t22);
			append_dev(section1, img17);
			append_dev(section1, t23);
			append_dev(section1, img18);
			append_dev(section1, t24);
			append_dev(section1, img19);
			append_dev(section1, t25);
			append_dev(section1, img20);
			append_dev(section1, t26);
			append_dev(section1, img21);
			append_dev(section1, t27);
			append_dev(section1, img22);
			append_dev(section1, t28);
			append_dev(section1, img23);
			append_dev(section1, t29);
			append_dev(section1, img24);
			append_dev(section1, t30);
			append_dev(section1, img25);
			append_dev(section1, t31);
			append_dev(section1, img26);
			append_dev(section1, t32);
			append_dev(section1, img27);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*minutes*/ 1) set_data_dev(t2, /*minutes*/ ctx[0]);
			if (dirty & /*seconds*/ 2) set_data_dev(t4, /*seconds*/ ctx[1]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section0);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(section1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $timer;

	let steps = [
		{ id: "1", status: "active" },
		{ id: "1", status: "active" },
		{ id: "1", status: "active" },
		{ id: "1", status: "active" },
		{ id: "1", status: "active" },
		{ id: "1", status: "active" },
		{ id: "1", status: "active" },
		{ id: "1", status: "active" },
		{ id: "1", status: "active" },
		{ id: "1", status: "active" }
	];

	let start = 30 * 60;
	let timer = tweened(start);
	validate_store(timer, "timer");
	component_subscribe($$self, timer, value => $$invalidate(3, $timer = value));

	setInterval(
		() => {
			if ($timer > 0) set_store_value(timer, $timer--, $timer);
		},
		1000
	);

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Completion> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Completion", $$slots, []);

	$$self.$capture_state = () => ({
		steps,
		tweened,
		start,
		timer,
		$timer,
		minutes,
		minname,
		seconds
	});

	$$self.$inject_state = $$props => {
		if ("steps" in $$props) steps = $$props.steps;
		if ("start" in $$props) start = $$props.start;
		if ("timer" in $$props) $$invalidate(2, timer = $$props.timer);
		if ("minutes" in $$props) $$invalidate(0, minutes = $$props.minutes);
		if ("minname" in $$props) minname = $$props.minname;
		if ("seconds" in $$props) $$invalidate(1, seconds = $$props.seconds);
	};

	let minutes;
	let minname;
	let seconds;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*$timer*/ 8) {
			 $$invalidate(0, minutes = Math.floor($timer / 60));
		}

		if ($$self.$$.dirty & /*minutes*/ 1) {
			 minname = minutes > 1 ? "mins" : "min";
		}

		if ($$self.$$.dirty & /*$timer, minutes*/ 9) {
			 $$invalidate(1, seconds = Math.floor($timer - minutes * 60));
		}
	};

	return [minutes, seconds, timer];
}

class Completion extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Completion",
			options,
			id: create_fragment.name
		});
	}
}

/* src/routes/quiz/q1.svelte generated by Svelte v3.23.2 */

const { console: console_1, document: document_1 } = globals;
const file$1 = "src/routes/quiz/q1.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[10] = list[i];
	return child_ctx;
}

// (87:2) {#each q1Steps as step}
function create_each_block(ctx) {
	let li;
	let t_value = /*step*/ ctx[10].name + "";
	let t;
	let li_class_value;

	const block = {
		c: function create() {
			li = element("li");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			var li_nodes = children(li);
			t = claim_text(li_nodes, t_value);
			li_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(li, "class", li_class_value = "" + (null_to_empty(/*step*/ ctx[10].classn) + " svelte-dkh3bo"));
			add_location(li, file$1, 87, 3, 2391);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			append_dev(li, t);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*q1Steps*/ 1 && t_value !== (t_value = /*step*/ ctx[10].name + "")) set_data_dev(t, t_value);

			if (dirty & /*q1Steps*/ 1 && li_class_value !== (li_class_value = "" + (null_to_empty(/*step*/ ctx[10].classn) + " svelte-dkh3bo"))) {
				attr_dev(li, "class", li_class_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(87:2) {#each q1Steps as step}",
		ctx
	});

	return block;
}

// (98:1) {#if isActive}
function create_if_block(ctx) {
	let video_1;

	const block = {
		c: function create() {
			video_1 = element("video");
			this.h();
		},
		l: function claim(nodes) {
			video_1 = claim_element(nodes, "VIDEO", { autoplay: true, id: true, class: true });
			children(video_1).forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			video_1.autoplay = "true";
			attr_dev(video_1, "id", "videoElement");
			attr_dev(video_1, "class", "svelte-dkh3bo");
			add_location(video_1, file$1, 98, 2, 2649);
		},
		m: function mount(target, anchor) {
			insert_dev(target, video_1, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(video_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(98:1) {#if isActive}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let t0;
	let section0;
	let h3;
	let t1;
	let t2;
	let t3;
	let ul;
	let t4;
	let div;
	let h1;
	let t5;
	let t6;
	let p;
	let t7;
	let t8;
	let section1;
	let button;
	let t9;
	let t10;
	let mounted;
	let dispose;
	let each_value = /*q1Steps*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	let if_block = /*isActive*/ ctx[1] && create_if_block(ctx);

	const block = {
		c: function create() {
			t0 = space();
			section0 = element("section");
			h3 = element("h3");
			t1 = text("Webcam Challenge ");
			t2 = text(/*fraction*/ ctx[4]);
			t3 = space();
			ul = element("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t4 = space();
			div = element("div");
			h1 = element("h1");
			t5 = text(/*headline*/ ctx[2]);
			t6 = space();
			p = element("p");
			t7 = text(/*body*/ ctx[3]);
			t8 = space();
			section1 = element("section");
			button = element("button");
			t9 = text("Next");
			t10 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-11mvzac\"]", document_1.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			section0 = claim_element(nodes, "SECTION", { id: true, class: true });
			var section0_nodes = children(section0);
			h3 = claim_element(section0_nodes, "H3", {});
			var h3_nodes = children(h3);
			t1 = claim_text(h3_nodes, "Webcam Challenge ");
			t2 = claim_text(h3_nodes, /*fraction*/ ctx[4]);
			h3_nodes.forEach(detach_dev);
			t3 = claim_space(section0_nodes);
			ul = claim_element(section0_nodes, "UL", { class: true });
			var ul_nodes = children(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h1 = claim_element(div_nodes, "H1", {});
			var h1_nodes = children(h1);
			t5 = claim_text(h1_nodes, /*headline*/ ctx[2]);
			h1_nodes.forEach(detach_dev);
			t6 = claim_space(div_nodes);
			p = claim_element(div_nodes, "P", {});
			var p_nodes = children(p);
			t7 = claim_text(p_nodes, /*body*/ ctx[3]);
			p_nodes.forEach(detach_dev);
			t8 = claim_space(div_nodes);
			section1 = claim_element(div_nodes, "SECTION", { id: true });
			var section1_nodes = children(section1);
			button = claim_element(section1_nodes, "BUTTON", { class: true });
			var button_nodes = children(button);
			t9 = claim_text(button_nodes, "Next");
			button_nodes.forEach(detach_dev);
			section1_nodes.forEach(detach_dev);
			t10 = claim_space(div_nodes);
			if (if_block) if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document_1.title = "Webcam Challenge";
			add_location(h3, file$1, 84, 1, 2319);
			attr_dev(ul, "class", "svelte-dkh3bo");
			add_location(ul, file$1, 85, 1, 2357);
			attr_dev(section0, "id", "progress");
			attr_dev(section0, "class", "svelte-dkh3bo");
			add_location(section0, file$1, 83, 0, 2294);
			add_location(h1, file$1, 92, 1, 2488);
			add_location(p, file$1, 93, 1, 2509);
			attr_dev(button, "class", "btn-dark svelte-dkh3bo");
			add_location(button, file$1, 95, 8, 2559);
			attr_dev(section1, "id", "next-skip");
			add_location(section1, file$1, 94, 1, 2525);
			attr_dev(div, "class", "quiz-holder svelte-dkh3bo");
			add_location(div, file$1, 91, 0, 2461);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section0, anchor);
			append_dev(section0, h3);
			append_dev(h3, t1);
			append_dev(h3, t2);
			append_dev(section0, t3);
			append_dev(section0, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			insert_dev(target, t4, anchor);
			insert_dev(target, div, anchor);
			append_dev(div, h1);
			append_dev(h1, t5);
			append_dev(div, t6);
			append_dev(div, p);
			append_dev(p, t7);
			append_dev(div, t8);
			append_dev(div, section1);
			append_dev(section1, button);
			append_dev(button, t9);
			append_dev(div, t10);
			if (if_block) if_block.m(div, null);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*stepUp*/ ctx[5], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*fraction*/ 16) set_data_dev(t2, /*fraction*/ ctx[4]);

			if (dirty & /*q1Steps*/ 1) {
				each_value = /*q1Steps*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (dirty & /*headline*/ 4) set_data_dev(t5, /*headline*/ ctx[2]);
			if (dirty & /*body*/ 8) set_data_dev(t7, /*body*/ ctx[3]);

			if (/*isActive*/ ctx[1]) {
				if (if_block) ; else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(div, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section0);
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(div);
			if (if_block) if_block.d();
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	const dispatch = createEventDispatcher();

	function complete() {
		dispatch("message", { question: 0, complete: "true" });
	}

	let q1Steps = [
		{
			stepNum: "1",
			h2: "Is your Webcam Covered?",
			name: "Introduction",
			classn: "complete",
			d: "1 / 3",
			copy: "It’s likely your computer already has a built-in camera, and it’s possible for that camera to be used to spy on you.  <br>  If your webcam for whatever reason has been hacked, the person on the other side can take pictures and video of anything or anyone. No, this isn’t just paranoia–a recent survey conducted by HP found that 10% in the U.S. either know someone whose webcam was hacked or have had their own webcam hacked."
		},
		{
			stepNum: "2",
			h2: "ACTION: Cover Your Webcam",
			name: "Permissions",
			classn: "incomplete",
			d: "2 / 3",
			copy: "Please have your webcam covered and proceed to next step. We will access to your webcam to make sure you covered the webcam properly. Click “Test” button to proceed challenge."
		},
		{
			stepNum: "3",
			h2: "Great! It’s properly covered.",
			name: "Cover your webcam",
			classn: "incomplete",
			d: "3 / 3",
			copy: "Please remember to leave your webcam covered while its not being used. This can prevent..."
		},
		{
			stepNum: "",
			h2: "",
			name: "",
			classn: "",
			d: "",
			copy: ""
		}
	];

	let isActive;

	function stepUp() {
		$$invalidate(7, q++, q);
		$$invalidate(0, q1Steps[q].classn = "complete", q1Steps);

		if (q == 2) {
			$$invalidate(1, isActive = true);
		}

		if (q > 2) {
			complete();
		}
	}

	let video;

	afterUpdate(() => {
		video = document.querySelector("#videoElement");

		if (navigator.mediaDevices.getUserMedia) {
			navigator.mediaDevices.getUserMedia({ video: true }).then(function (stream) {
				video.srcObject = stream;
			}).catch(function (err0r) {
				console.log("Not loaded");
			});
		}
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Q1> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Q1", $$slots, []);

	$$self.$capture_state = () => ({
		onMount,
		afterUpdate,
		createEventDispatcher,
		Completion,
		dispatch,
		complete,
		q1Steps,
		isActive,
		stepUp,
		video,
		q,
		headline,
		body,
		fraction
	});

	$$self.$inject_state = $$props => {
		if ("q1Steps" in $$props) $$invalidate(0, q1Steps = $$props.q1Steps);
		if ("isActive" in $$props) $$invalidate(1, isActive = $$props.isActive);
		if ("video" in $$props) video = $$props.video;
		if ("q" in $$props) $$invalidate(7, q = $$props.q);
		if ("headline" in $$props) $$invalidate(2, headline = $$props.headline);
		if ("body" in $$props) $$invalidate(3, body = $$props.body);
		if ("fraction" in $$props) $$invalidate(4, fraction = $$props.fraction);
	};

	let q;
	let headline;
	let body;
	let fraction;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*q1Steps, q*/ 129) {
			 $$invalidate(2, headline = q1Steps[q].h2);
		}

		if ($$self.$$.dirty & /*q1Steps, q*/ 129) {
			 $$invalidate(3, body = q1Steps[q].copy);
		}

		if ($$self.$$.dirty & /*q1Steps, q*/ 129) {
			 $$invalidate(4, fraction = q1Steps[q].d);
		}
	};

	 $$invalidate(7, q = 0);
	return [q1Steps, isActive, headline, body, fraction, stepUp];
}

class Q1 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Q1",
			options,
			id: create_fragment$1.name
		});
	}
}

var q1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': Q1
});

export { Completion as C, Q1 as Q, q1 as q };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
