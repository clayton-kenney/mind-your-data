main.svelte-19axu57{background-color:white;box-sizing:border-box}
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
#logo-holder.svelte-1vtc7gq{background-color:white;display:flex;flex-flow:column nowrap;align-items:center}img.svelte-1vtc7gq{width:800px}
h1.svelte-1acdip2.svelte-1acdip2,p.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:0 auto}.hero.svelte-1acdip2.svelte-1acdip2{background-color:#3e4b59;padding-left:80px;padding-top:30vh;width:100%;height:60vh}.hero.svelte-1acdip2 p.svelte-1acdip2{margin:1em auto;color:white}h1.svelte-1acdip2.svelte-1acdip2{font-size:2.8em;text-align:left;text-transform:uppercase;font-weight:700;margin:0 0 0.5em 0;color:white;letter-spacing:25%}h2.svelte-1acdip2.svelte-1acdip2{text-align:left;margin:auto;text-transform:uppercase}h3.svelte-1acdip2.svelte-1acdip2{text-align:center;margin:auto}.bigImg.svelte-1acdip2.svelte-1acdip2{max-width:1400px;background-color:grey}button.svelte-1acdip2.svelte-1acdip2{background:#7AAF54;text-transform:uppercase;padding:10px 20px 10px 20px;font-size:30px;line-height:38px;border:none;border-radius:10px;color:white;box-shadow:0px 4px 4px rgba(0, 0, 0, 0.25)}img.svelte-1acdip2.svelte-1acdip2{width:100%;max-width:400px;margin:0 0 1em 0}.about.svelte-1acdip2.svelte-1acdip2{padding:1.5em}p.svelte-1acdip2.svelte-1acdip2{color:black;text-align:left}ul.svelte-1acdip2.svelte-1acdip2{display:flex;flex-direction:row;list-style:none;margin-block-start:0px;margin-block-end:0px;padding-inline-start:0px}li.svelte-1acdip2.svelte-1acdip2{justify-content:space-around;margin:auto}.why.svelte-1acdip2.svelte-1acdip2{padding-left:80px;margin:1em auto}a.svelte-1acdip2.svelte-1acdip2{text-decoration:none;padding:4px 30px}@media(min-width: 480px){h1.svelte-1acdip2.svelte-1acdip2{font-size:4em}}
main.svelte-fltwt6{display:flex;flex-flow:row}#main-content.svelte-fltwt6{background:#38424D;border-radius:15px;border:0px;margin:12px 22px 40px 20px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF;width:100%;background-image:url('../bg-vector.png');background-blend-mode:darken}#checkpoint.svelte-fltwt6{}
main.svelte-13w0d0d{background-color:#303538}.review.svelte-13w0d0d{width:50vw;background-color:#38424d;display:flex;flex-flow:column;margin:auto;color:#ffffff;padding:65px 100px 65px 65px}#complete.svelte-13w0d0d{background-color:#38424D;color:#ffffff}.status.svelte-13w0d0d{color:#e94040;font-weight:500;margin:5px}button.svelte-13w0d0d{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}.caret.svelte-13w0d0d{display:flex;flex-flow:row nowrap;align-items:center;justify-content:space-between}div.caret.svelte-13w0d0d{border-radius:6px;border:none;margin:10px;padding:10px 20px}.prize1.svelte-13w0d0d{color:#ffffff;display:flex;flex-flow:column nowrap;align-items:center;text-align:center}img.svelte-13w0d0d{width:100%;border-radius:6px}.button-holder.svelte-13w0d0d{align-items:center;padding-bottom:50px}
main.svelte-11rukd4{display:flex;flex-flow:row;justify-content:center;margin-top:15px}section.svelte-11rukd4{background:#38424D;width:65vw;min-height:75vh;border-radius:15px;border:0px;margin:0px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF;text-align:center}#chapter1.svelte-11rukd4{width:85vw;background-image:url('../bg-vector.png');background-blend-mode:darken}p.svelte-11rukd4{text-align:left}#headline.svelte-11rukd4{font-weight:600;margin-bottom:25px}#chapter.svelte-11rukd4{color:#73ef7b}button.svelte-11rukd4{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px;text-decoration:none}#start.svelte-11rukd4{background-color:#73ef7b}a.svelte-11rukd4{text-decoration:none}.active.svelte-11rukd4{background-color:pink}#permission.svelte-11rukd4{width:70%;margin:auto}.caret.svelte-11rukd4{display:flex;flex-flow:row nowrap;align-items:center;justify-content:space-between}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
.quiz-holder.svelte-dkh3bo{display:block;width:65vw;left:20vw;height:100vh;padding:20px 50px}.step.svelte-dkh3bo{margin-bottom:55px}#progress.svelte-dkh3bo{margin-top:50px}ul.svelte-dkh3bo{padding-inline-start:15px}li.svelte-dkh3bo{margin:30px 0px}.incomplete.svelte-dkh3bo{color:#a0a0a0;list-style-type:circle}.complete.svelte-dkh3bo{list-style-type:disc}.Side-headline.svelte-dkh3bo{font-size:24px;font-weight:700}#videoElement.svelte-dkh3bo{}.btn-dark.svelte-dkh3bo{color:white;background:#0F2033;border-radius:6px;width:30%;text-align:center;padding:5px 10px}button.svelte-dkh3bo{border:none;padding:5px 10px}
aside.svelte-n0ypaq{display:block;top:50px;left:0;width:27.77vw;height:100vh;padding-left:50px}section.svelte-n0ypaq{padding:10px 10px 20px 10px}
#main-content.svelte-su6n7t{width:100%;background-image:url(https://images.unsplash.com/photo-1558697524-5a2d1e8a93d1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80);background-size:contain;padding-top:15px}div.svelte-su6n7t{width:50%;margin:auto;background:#38424D;border:none;border-radius:15px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF}strong.svelte-su6n7t{font-weight:700;font-size:22px}
section.svelte-1fien2q{width:100%;background-image:url(https://images.unsplash.com/photo-1535376472810-5d229c65da09?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2600&q=80);background-size:contain;padding-top:15px}div.svelte-1fien2q{width:50%;margin:auto;background:#38424D;border:none;border-radius:15px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF}strong.svelte-1fien2q{font-weight:700;font-size:22px}
section.svelte-fqq2f8{width:100vw;height:100vh;background-image:url(https://images.unsplash.com/photo-1557411732-1797a9171fcf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80);background-size:contain;padding-top:15px}div.svelte-fqq2f8{width:50%;margin:auto;background:#38424D;border:none;border-radius:15px;padding:9.3vh 5vw 0vh 9.3vh;color:#FFFFFF}
.button-holder.svelte-1sss75x{width:27vw;display:flex;flex-flow:column nowrap}.video-holder.svelte-1sss75x{width:100%}button.svelte-1sss75x{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}#alert.svelte-1sss75x{color:red;font-weight:700;font-size:24px}#not-covered.svelte-1sss75x{color:red;background:#FFEEEE;border-radius:6px;border:none}
.num.svelte-m0bqhn{padding-right:100px}div.svelte-m0bqhn{color:black}.active.svelte-m0bqhn{display:block}
.video-holder.svelte-1eg3wlj{width:100%}#alert.svelte-1eg3wlj{color:red;font-weight:700;font-size:24px}#not-covered.svelte-1eg3wlj{color:red;background:#FFEEEE;border-radius:6px;border:none}
.button-holder.svelte-18094jg{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-18094jg{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}a.svelte-18094jg{text-decoration:none}
.caret.svelte-hhwisi{display:flex;flex-flow:row nowrap;align-items:center;justify-content:space-between}a.svelte-hhwisi{text-decoration:underline}
.button-holder.svelte-1omauo6{width:27vw;display:flex;flex-flow:column nowrap}#cookie-buttons.svelte-1omauo6{margin:40px 0px 0px 0px}
.button-holder.svelte-15owt46{width:27vw;display:flex;flex-flow:column nowrap}button.svelte-15owt46{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}a.svelte-15owt46{text-decoration:none}
.button-holder.svelte-338bov{width:27vw;display:flex;flex-flow:column nowrap}
section.svelte-1y4us4j{width:100%}.button-holder.svelte-1y4us4j{width:27vw;display:flex;flex-flow:column nowrap}
.button-holder.svelte-h4ab6b{width:27vw;display:flex;flex-flow:column nowrap}.caret.svelte-h4ab6b{display:flex;flex-flow:row nowrap;align-items:center;justify-content:space-between}
nav.svelte-wgfy02{display:flex;flex-flow:row nowrap;height:50px;justify-content:space-between;align-items:center;background-color:#303538;font-weight:300;padding:0 1em;position:sticky;top:0px;left:0px;z-index:1}ul.svelte-wgfy02{display:flex;list-style:none;justify-content:flex-end;margin:0;padding:0;color:#c7c7c7}img.svelte-wgfy02{display:flex;justify-content:flex-start;height:30px;margin-left:25px}li.svelte-wgfy02{display:flex;margin:0px 20px 0px 20px;text-transform:uppercase}[aria-current].svelte-wgfy02{position:relative;display:inline-block}[aria-current].svelte-wgfy02::after{position:absolute;content:'';width:calc(100% - 1em);height:2px;background-color:#e74e45;display:block}a.svelte-wgfy02{display:flex;padding:1em 0.5em;text-decoration:none;margin:2em, 0em}.home.svelte-wgfy02{background-color:white}
aside.svelte-1vkgvcf{display:flex;flex-direction:column;justify-content:space-between;align-items:center;width:33.75vw;height:86vh;background-color:#38424D;border-radius:15px;border:0px;margin:12px 0px 40px 20px;min-width:33vw;position:sticky;top:50px}#timer.svelte-1vkgvcf{display:flex;flex-flow:row wrap;margin-block-start:30px;align-items:center;justify-content:center}#minutes.svelte-1vkgvcf{color:white;background:#0F2033;border-radius:6px;max-width:150px;height:60px;text-align:center;font-size:24px;margin:8px 20px;display:grid;align-content:center;padding:2px 30px}.done.svelte-1vkgvcf{display:flex;flex-flow:row nowrap;align-items:center;width:95%;margin-bottom:20px
    }progress.svelte-1vkgvcf{-webkit-appearance:none;border:none;display:block;width:86%;position:relative;bottom:4.7vh;height:6px;z-index:-1;margin-left:31px}progress.svelte-1vkgvcf::-webkit-progress-bar{background:#303538}progress.bg1.svelte-1vkgvcf::-webkit-progress-value{background:#74ef7b}progress.bg2.svelte-1vkgvcf::-webkit-progress-value{background:#F1C330}progress.bg3.svelte-1vkgvcf::-webkit-progress-value{background:#E94040}.bg1.svelte-1vkgvcf{background-image:url('../bg-group1.png');background-blend-mode:normal;background-size:cover;background-position:top;color:#74ef7b;font-size:20px}.bg2.svelte-1vkgvcf{background-image:url('../bg-group2.png');background-blend-mode:normal;background-size:cover;background-position:top;color:#F1C330;font-size:20px}.bg3.svelte-1vkgvcf{background-image:url('../bg-group3.png');background-blend-mode:normal;background-size:cover;background-position:top;color:#E94040;font-size:20px}#progress-holder.svelte-1vkgvcf{width:80%}#challenge-name.svelte-1vkgvcf{font-size:40px;color:white}
button.svelte-1wg7n7v{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}.green.svelte-1wg7n7v{background-color:#73ef7b;color:#2C3C4E}.yellow.svelte-1wg7n7v{background-color:#F1C330;color:#2C3C4E}.red.svelte-1wg7n7v{background-color:#E74E45;color:#FFFFFF}
button.svelte-1js4abv{padding:10px 20px;margin:10px;border:black solid 0px;border-radius:8px}.green.svelte-1js4abv{background-color:#73ef7b;color:#2C3C4E}.yellow.svelte-1js4abv{background-color:#F1C330;color:#2C3C4E}.red.svelte-1js4abv{background-color:#E74E45;color:#FFFFFF}
#back.svelte-1x5om3e{display:flex;position:inherit;bottom:72px;flex-flow:row nowrap;align-items:center;color:#757575;margin:20px 0px}svg.svelte-1x5om3e{margin-right:20px;fill:#757575}
strong.svelte-1qffeqo{font-weight:600;font-size:22px;text-decoration:underline}
.lock.svelte-n4s916{margin:auto}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4xNDE4Mzc5ODYwLmNzcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vX2xheW91dC5zdmVsdGUiLCIuLi8uLi8uLi9fZXJyb3Iuc3ZlbHRlIiwiLi4vLi4vLi4vaW5kZXguc3ZlbHRlIiwiLi4vLi4vLi4vaW5kZXhfb2xkLnN2ZWx0ZSIsIi4uLy4uLy4uL3F1aXptYWluLnN2ZWx0ZSIsIi4uLy4uLy4uL3Jldmlldy5zdmVsdGUiLCIuLi8uLi8uLi9xdWl6LnN2ZWx0ZSIsIi4uLy4uLy4uL2luZGV4LnN2ZWx0ZSIsIi4uLy4uLy4uL1tzbHVnXS5zdmVsdGUiLCIuLi8uLi8uLi9xMWFyY2hpdmUuc3ZlbHRlIiwiLi4vLi4vLi4vUHJvZ3Jlc3Muc3ZlbHRlIiwiLi4vLi4vLi4vY2hlY2sxLnN2ZWx0ZSIsIi4uLy4uLy4uL2NoZWNrMi5zdmVsdGUiLCIuLi8uLi8uLi9jaGVjazMuc3ZlbHRlIiwiLi4vLi4vLi4vcTFkdXAuc3ZlbHRlIiwiLi4vLi4vLi4vcTAuc3ZlbHRlIiwiLi4vLi4vLi4vcTEuc3ZlbHRlIiwiLi4vLi4vLi4vcTIuc3ZlbHRlIiwiLi4vLi4vLi4vcTMuc3ZlbHRlIiwiLi4vLi4vLi4vcTQuc3ZlbHRlIiwiLi4vLi4vLi4vcTUuc3ZlbHRlIiwiLi4vLi4vLi4vcTcuc3ZlbHRlIiwiLi4vLi4vLi4vcTguc3ZlbHRlIiwiLi4vLi4vLi4vcTYuc3ZlbHRlIiwiLi4vLi4vLi4vTmF2LnN2ZWx0ZSIsIi4uLy4uLy4uL0NvbXBsZXRpb24uc3ZlbHRlIiwiLi4vLi4vLi4vY29tcGxldGUuc3ZlbHRlIiwiLi4vLi4vLi4vQnRuLnN2ZWx0ZSIsIi4uLy4uLy4uL0JhY2suc3ZlbHRlIiwiLi4vLi4vLi4vRGV0ZWN0LnN2ZWx0ZSIsIi4uLy4uLy4uL0NoZWNrLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuXHRpbXBvcnQgTmF2IGZyb20gJy4uL2NvbXBvbmVudHMvTmF2LnN2ZWx0ZSc7XG5cdGV4cG9ydCBsZXQgc2VnbWVudDtcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG5cdG1haW4ge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuXHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdH1cbjwvc3R5bGU+XG5cbjxOYXYge3NlZ21lbnR9IC8+XG5cbjxtYWluPlxuXHQ8c2xvdD48L3Nsb3Q+XG48L21haW4+IiwiPHNjcmlwdD5cblx0ZXhwb3J0IGxldCBzdGF0dXM7XG5cdGV4cG9ydCBsZXQgZXJyb3I7XG5cblx0Y29uc3QgZGV2ID0gXCJkZXZlbG9wbWVudFwiID09PSAnZGV2ZWxvcG1lbnQnO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblx0aDEsIHAge1xuXHRcdG1hcmdpbjogMCBhdXRvO1xuXHR9XG5cblx0aDEge1xuXHRcdGZvbnQtc2l6ZTogMi44ZW07XG5cdFx0Zm9udC13ZWlnaHQ6IDcwMDtcblx0XHRtYXJnaW46IDAgMCAwLjVlbSAwO1xuXHR9XG5cblx0cCB7XG5cdFx0bWFyZ2luOiAxZW0gYXV0bztcblx0fVxuXG5cdEBtZWRpYSAobWluLXdpZHRoOiA0ODBweCkge1xuXHRcdGgxIHtcblx0XHRcdGZvbnQtc2l6ZTogNGVtO1xuXHRcdH1cblx0fVxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+e3N0YXR1c308L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPntzdGF0dXN9PC9oMT5cblxuPHA+e2Vycm9yLm1lc3NhZ2V9PC9wPlxuXG57I2lmIGRldiAmJiBlcnJvci5zdGFja31cblx0PHByZT57ZXJyb3Iuc3RhY2t9PC9wcmU+XG57L2lmfVxuIiwiPHNjcmlwdD5cbiAgICBpbXBvcnQgeyBmYWRlLCBibHVyIH0gZnJvbSAnc3ZlbHRlL3RyYW5zaXRpb24nO1xuICAgIGltcG9ydCB7IHF1aW50SW5PdXQgfSBmcm9tICdzdmVsdGUvZWFzaW5nJztcbiAgICBpbXBvcnQgeyBvbk1vdW50IH0gZnJvbSAnc3ZlbHRlJztcbiAgICBpbXBvcnQgVHJhbnMgZnJvbSAnLi4vY29tcG9uZW50cy9UcmFuc0hlbHAuc3ZlbHRlJ1xuICAgIGxldCB2aXNpYmxlID0gZmFsc2U7XG4gICAgb25Nb3VudCgoKSA9PiB2aXNpYmxlID0gdHJ1ZSlcbjwvc2NyaXB0PlxuPFRyYW5zPlxuPGRpdiBpZD1cImxvZ28taG9sZGVyXCI+XG4gICAgPGRpdj5cbiAgICB7I2lmIHZpc2libGV9XG4gICAgPGEgcHJlZmV0Y2ggaHJlZj1cInF1aXpcIj5cbiAgICA8aW1nIHNyYz1cIk1ZRGxvZ29fbGFyZ2UucG5nXCIgYWx0PVwiTWluZCB5b3VyIGRhdGEgbG9nbywgY2xpY2sgdG8gZW50ZXJcIiBpbjpmYWRlPVwie3tkZWxheTogMzAwMCwgZHVyYXRpb246IDkwMDAsIH19XCIgb3V0OmJsdXI9XCJ7e2RlbGF5OiAwLCBkdXJhdGlvbjogMjAwMH19XCI+PC9hPlxuICAgIHsvaWZ9XG4gICAgPC9kaXY+XG48L2Rpdj5cbjwvVHJhbnM+XG48c3R5bGU+XG4gICAgI2xvZ28taG9sZGVye1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuICAgIGltZyB7XG4gICAgICAgIHdpZHRoOiA4MDBweDtcbiAgICB9XG48L3N0eWxlPiIsIjxzdHlsZT5cblx0bWFpbiB7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdH1cblx0aDEsIGZpZ3VyZSwgcCB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdG1hcmdpbjogMCBhdXRvO1xuXHR9XG5cdFxuXHQuaGVybyB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogIzNlNGI1OTtcblx0XHRwYWRkaW5nLWxlZnQ6IDgwcHg7XG5cdFx0cGFkZGluZy10b3A6IDMwdmg7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0aGVpZ2h0OiA2MHZoO1xuXHR9XG5cdC5oZXJvIHAge1xuXHRcdG1hcmdpbjogMWVtIGF1dG87XG5cdFx0Y29sb3I6IHdoaXRlO1xuXHR9XG5cdGgxIHtcblx0XHRmb250LXNpemU6IDIuOGVtO1xuXHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0XHRmb250LXdlaWdodDogNzAwO1xuXHRcdG1hcmdpbjogMCAwIDAuNWVtIDA7XG5cdFx0Y29sb3I6IHdoaXRlO1xuXHRcdGxldHRlci1zcGFjaW5nOiAyNSU7XG5cdH1cblx0aDIge1xuXHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0bWFyZ2luOiBhdXRvO1xuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdH1cblx0aDMge1xuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHRtYXJnaW46IGF1dG87XG5cdH1cblx0LmJpZ0ltZyB7XG5cdFx0bWF4LXdpZHRoOiAxNDAwcHg7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogZ3JleTtcblx0fVxuXG5cdGZpZ3VyZSB7XG5cdFx0bWFyZ2luOiAwIDAgMWVtIDA7XG5cdH1cblx0YnV0dG9uIHtcblx0XHRiYWNrZ3JvdW5kOiAjN0FBRjU0O1xuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0cGFkZGluZzogMTBweCAyMHB4IDEwcHggMjBweDtcblx0XHRmb250LXNpemU6IDMwcHg7XG5cdFx0bGluZS1oZWlnaHQ6IDM4cHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJvcmRlci1yYWRpdXM6IDEwcHg7XG5cdFx0Y29sb3I6IHdoaXRlO1xuXHRcdGJveC1zaGFkb3c6IDBweCA0cHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG5cdH1cblx0aW1nIHtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtYXgtd2lkdGg6IDQwMHB4O1xuXHRcdG1hcmdpbjogMCAwIDFlbSAwO1xuXHR9XG5cdC5hYm91dCB7XG5cdFx0cGFkZGluZzogMS41ZW07XG5cdH1cblx0cCB7XG5cdFx0Y29sb3I6IGJsYWNrO1xuXHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdH1cblx0dWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0ZmxleC1kaXJlY3Rpb246IHJvdztcblx0XHRcblx0XHRsaXN0LXN0eWxlOiBub25lO1xuXHRcdG1hcmdpbi1ibG9jay1zdGFydDogMHB4O1xuXHRcdG1hcmdpbi1ibG9jay1lbmQ6IDBweDtcblx0XHRwYWRkaW5nLWlubGluZS1zdGFydDogMHB4O1xuXHR9XG5cdGxpIHtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcblx0XHRtYXJnaW46IGF1dG87XG5cdH1cblx0LndoeXtcblx0XHRwYWRkaW5nLWxlZnQ6IDgwcHg7XG5cdFx0bWFyZ2luOiAxZW0gYXV0bztcblx0fVxuXHQud2h5IGgyIHtcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdH1cblx0YSB7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdHBhZGRpbmc6IDRweCAzMHB4O1xuXHR9XG5cdEBtZWRpYSAobWluLXdpZHRoOiA0ODBweCkge1xuXHRcdGgxIHtcblx0XHRcdGZvbnQtc2l6ZTogNGVtO1xuXHRcdH1cblx0fVxuPC9zdHlsZT5cblxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+TWluZCBZb3VyIERhdGE6IEFrYSBGdWNrIHN1cnZlaWxsYW5jZSBjYXBpdGFsaXNtPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxkaXYgY2xhc3M9XCJoZXJvXCI+XG5cdDxoMT5NaW5kIFlvdXIgRGF0YTwvaDE+XG5cdDxwID5XZSBiZWxpZXZlIHRoYXQgZXZlcnlvbmUgaW4gdGhpcyB3b3JsZCBzaG91bGQgYmUgdGhlIG9ubHkgb3duZXIgb2Ygb3VyIGRhdGEuPGJyPlxuXHRcdEJ1dCBtb3N0IG9mIHVzIGJsYWggYmxhaCBibGFoIDwvcD5cblx0XHQ8YSByZWw9cHJlZmV0Y2ggaHJlZj1cIi9xdWl6XCI+PGJ1dHRvbj5TdGFydCB0aGUgbGVzc29uPC9idXR0b24+PC9hPlxuPC9kaXY+XG48dWw+XG5cdDxsaSBjbGFzcz0nYWJvdXQnPlxuXHRcdDxoMz5XaG8gV2UgQXJlPC9oMz5cblx0XHQ8cCBjbGFzcz0nYWJvdXQnPkZvciBhbnlvbmUgY29uY2VybmVkIGFib3V0IGxvc3Mgb2YgcHJpdmFjeSBhbmQgdGhlIGltcGxpY2F0aW9ucyBpdCBoYXMgZm9yIG91ciBkZW1vY3JhY3ksIE1pbmQgeW91ciBEYXRhIGVkdWNhdGVzLCBhbmQgZW1wb3dlcnMgY2l0aXplbnMgdG8gZmlnaHQgZm9yIGEgbW9yZSBlcXVpdGFibGUgZm9ybSBvZiBzdXJ2aWxsYW5jZSBjYXBpdGFsaXNtIGJlY2F1c2UsIG91ciBmdXR1cmUgZnJlZWRvbSB0byBwcml2YWN5IGRlcGVuZHMgb24gdGhlIGFjdGlvbnMgd2UgdGFrZSBub3cuPC9wPlxuXHQ8L2xpPlxuXHQ8bGkgY2xhc3M9J2Fib3V0Jz5cdFx0XG5cdFx0PGgzPk91ciBNaXNzaW9uPC9oMz5cblx0XHQ8cCBjbGFzcz0nYWJvdXQnPldlIGFyZSB0byBlZHVjYXRlIHBlb3BsZSBhYm91dCB0aGUgaW1wbGljYXRpb25zIG9mIHN1cnZlaWxsYW5jZSBjYXBpdGFsaXNtIGFuZCBlbXBvd2VyIHRoZW0gdG8gT3B0IG91dCBhbmQgdG8gaGVscCBicmluZyBmb3J0aCBpbnN0aXR1dGlvbnMsIHJlZ3VsYXRpb25zLCBhbmQgbGF3cyB0byBwcm9tb3RlIGEgc29jaWFsIGZvcm0gb2Ygc3VydmVpbGxhbmNlIGNhcGl0YWxpc20gdGhhdCBzZXJ2ZXMgYWxsLiA8L3A+XG5cdDwvbGk+XG5cdDxsaSBjbGFzcz0nYWJvdXQnPlx0XHRcblx0XHQ8aDM+U29tZXRoaWduIEVsc2U8L2gzPlxuXHRcdDxwIGNsYXNzPSdhYm91dCc+V2UgYXJlIHRvIGVkdWNhdGUgcGVvcGxlIGFib3V0IHRoZSBpbXBsaWNhdGlvbnMgb2Ygc3VydmVpbGxhbmNlIGNhcGl0YWxpc20gYW5kIGVtcG93ZXIgdGhlbSB0byBPcHQgb3V0IGFuZCB0byBoZWxwIGJyaW5nIGZvcnRoIGluc3RpdHV0aW9ucywgcmVndWxhdGlvbnMsIGFuZCBsYXdzIHRvIHByb21vdGUgYSBzb2NpYWwgZm9ybSBvZiBzdXJ2ZWlsbGFuY2UgY2FwaXRhbGlzbSB0aGF0IHNlcnZlcyBhbGwuIDwvcD5cblx0PC9saT5cbjwvdWw+XG48aW1nIHNyYz0nLi8xNDAweDQ1MC5wbmcnIGNsYXNzPVwiYmlnSW1nXCIgYWx0PSdwbGFjZWhvbGRlcic+XG48aDIgY2xhc3M9J3doeSc+V2h5IGl0IG1hdHRlcnM8L2gyPlxuXHQ8cCBjbGFzcz1cIndoeVwiPkknbSBiYWJ5IG1peHRhcGUgc2VsZmllcyBkdWlzIGJlZm9yZSB0aGV5IHNvbGQgb3V0IGNyb251dCBpUGhvbmUuIEJ1dGNoZXIgZHVpcyB3aWxsaWFtc2J1cmcgZm9vZCB0cnVjayBzdXN0YWluYWJsZSBxdWlzIG5leHQgbGV2ZWwgaXBzdW0gdGh1bmRlcmNhdHMgc3ludGguIFNjaGxpdHogdW1hbWkgaW4gbWVnZ2luZ3MgeXVjY2llIGZvb2QgdHJ1Y2suIEZhc2hpb24gYXhlIGNydWNpZml4IGxhYm9yaXMgYXN5bW1ldHJpY2FsIGplYW4gc2hvcnRzIGRvbG9yZS4gRnJlZWdhbiBjaGlsbHdhdmUgZmFzaGlvbiBheGUgdmljZSBwaW50ZXJlc3QgYmljeWNsZSByaWdodHMgdmFwb3J3YXJlIGZvdXIgbG9rbyBhZiBlaXVzbW9kIHJhdyBkZW5pbS4gVmV4aWxsb2xvZ2lzdCBmaW5nZXJzdGFjaGUgb3JnYW5pYyB5ciBwb2tlLCBseWZ0IG51bGxhIHBvcnRsYW5kIGhlaXJsb29tIGVsaXQgbWFyZmEgYnJ1bmNoLiBCdXNod2ljayBkZWVwIHYgdXQsIHRodW5kZXJjYXRzIGFpciBwbGFudCBiYW5qbyBwYWxvIHNhbnRvIHRheGlkZXJteSBzdWNjdWxlbnRzIGJlZm9yZSB0aGV5IHNvbGQgb3V0IHB1dCBhIGJpcmQgb24gaXQgbGl2ZS1lZGdlIGhvb2RpZSBoZWxsYS5cblx0PC9wPlxuIiwiPHNjcmlwdD5cbiBpbXBvcnQgUXVpejEgZnJvbSAnLi9xdWl6L3ExLnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejIgZnJvbSAnLi9xdWl6L3EyLnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejMgZnJvbSAnLi9xdWl6L3EzLnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejQgZnJvbSAnLi9xdWl6L3E0LnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejUgZnJvbSAnLi9xdWl6L3E1LnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejYgZnJvbSAnLi9xdWl6L3E2LnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejcgZnJvbSAnLi9xdWl6L3E3LnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejggZnJvbSAnLi9xdWl6L3E4LnN2ZWx0ZSdcbiBpbXBvcnQgUXVpejkgZnJvbSAnLi9xdWl6L3E5LnN2ZWx0ZSdcbiBpbXBvcnQgQ2hlY2twb2ludDEgZnJvbSAnLi9xdWl6L2NoZWNrMS5zdmVsdGUnXG4gaW1wb3J0IENoZWNrcG9pbnQyIGZyb20gJy4vcXVpei9jaGVjazIuc3ZlbHRlJ1xuIGltcG9ydCBDaGVja3BvaW50MyBmcm9tICcuL3F1aXovY2hlY2szLnN2ZWx0ZSdcbiBpbXBvcnQgQ29tcGxldGlvbiBmcm9tICcuLi9jb21wb25lbnRzL0NvbXBsZXRpb24uc3ZlbHRlJ1xuIGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciwgYmVmb3JlVXBkYXRlLCBhZnRlclVwZGF0ZSwgb25Nb3VudCB9IGZyb20gJ3N2ZWx0ZSc7XG5pbXBvcnQgeyBzbGlkZSwgZmx5LCBmYWRlIH0gZnJvbSAnc3ZlbHRlL3RyYW5zaXRpb24nO1xuaW1wb3J0IHsgcXVpbnRPdXQsIHF1aW50SW4gfSBmcm9tICdzdmVsdGUvZWFzaW5nJztcbmltcG9ydCB7IGNvdW50IH0gZnJvbSAnLi4vc3RvcmUuanMnXG4vL2ltcG9ydCBxdWl6U3RlcHMgZnJvbSAnLi4vc3RvcmUuanMnXG5cblxuY29uc3QgcXVpelN0ZXAgPSAgKFtcbiAgICB7Y29tcG9uZW50OiBRdWl6MSwgbmFtZTogJ1dFQkNBTScsIHNob3dTaWRlQmFyOiB0cnVlfSxcbiAgICB7Y29tcG9uZW50OlF1aXoyLCBuYW1lOiAnSFRUUFMnICwgc2hvd1NpZGVCYXI6IHRydWV9LFxuICAgIHtjb21wb25lbnQ6UXVpejYsIG5hbWU6ICdETlMnICwgc2hvd1NpZGVCYXI6IHRydWV9LFxuICAgIHtjb21wb25lbnQ6Q2hlY2twb2ludDEsIG5hbWU6ICdTZWN1cml0eSB2cyBQcml2YWN5Jywgc2hvd1NpZGVCYXI6IGZhbHNlfSxcbiAgICB7Y29tcG9uZW50OlF1aXozLCBuYW1lOiAnU0VBUkNIJyAsIHNob3dTaWRlQmFyOiB0cnVlfSxcbiAgICB7Y29tcG9uZW50OlF1aXo0LCBuYW1lOiAnUFJJVkFDWSBTRVRUSU5HUycgLCBzaG93U2lkZUJhcjogdHJ1ZX0sXG4gICAge2NvbXBvbmVudDpRdWl6NSwgbmFtZTogJ1RSQUNLRVIgQkxPQ0tFUicgLCBzaG93U2lkZUJhcjogdHJ1ZX0sXG4gICAge2NvbXBvbmVudDpDaGVja3BvaW50MiwgbmFtZTogJ1N1cnZlaWxsYW5jZSBDYXBpdGFsaXNtJywgc2hvd1NpZGVCYXI6IGZhbHNlfSxcbiAgICB7Y29tcG9uZW50OlF1aXo3LCBuYW1lOiAnSW50ZXJuZXQgb2YgVGhpbmdzJyAsIHNob3dTaWRlQmFyOiB0cnVlfSxcbiAgICB7Y29tcG9uZW50OlF1aXo4LCBuYW1lOiAnTG9jYXRpb24gVHJhY2tpbmcnICwgc2hvd1NpZGVCYXI6IHRydWV9LFxuICAgIHtjb21wb25lbnQ6Q2hlY2twb2ludDMsIG5hbWU6ICdDaGFuZ2UnICwgc2hvd1NpZGVCYXI6IGZhbHNlfSxcbl0pXG4kOiBzaG93U2lkZUJhciA9IHF1aXpTdGVwWyRjb3VudF0uc2hvd1NpZGVCYXI7XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPlRlc3QgeW91ciBrbm93bGVkZ2U8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxtYWluIHRyYW5zaXRpb246c2xpZGU9XCJ7e2RlbGF5OiAxMDAsIGR1cmF0aW9uOiA0MDAsIGVhc2luZzogcXVpbnRPdXR9fVwiID5cbiAgICAgICB7I2lmIHNob3dTaWRlQmFyfVxuICAgICAgIDxDb21wbGV0aW9uIGNsYXNzPSdzdGVwJz5cbiAgICAgICAgICAgICAge3F1aXpTdGVwWyRjb3VudF0ubmFtZX1cbiAgICAgICAgICAgXG4gICAgICAgPC9Db21wbGV0aW9uPlxuICAgICAgIDxkaXYgaWQ9XCJtYWluLWNvbnRlbnRcIj4gXG4gICAgICAgICAgICAgIDxzdmVsdGU6Y29tcG9uZW50IHRoaXM9e3F1aXpTdGVwWyRjb3VudF0uY29tcG9uZW50fSAvPlxuICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgIHs6ZWxzZSB9XG4gICAgICAgPGRpdiBpZD1cImNoZWNrcG9pbnRcIj4gXG4gICAgICAgICAgICAgIDxzdmVsdGU6Y29tcG9uZW50IHRoaXM9e3F1aXpTdGVwWyRjb3VudF0uY29tcG9uZW50fSAvPlxuICAgICAgIDwvZGl2PlxuICAgICAgIHsvaWZ9XG4gICAgICAgXG48L21haW4+XG48c3R5bGU+XG4gICAgICAgbWFpbiB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgIGZsZXgtZmxvdzogcm93O1xuXG4gICAgICAgfVxuICAgICAgICNtYWluLWNvbnRlbnR7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMzODQyNEQ7XG4gICAgICAgICAgICAgIC8qaGVpZ2h0OiA4NnZoOyAqL1xuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgICAgICAgICAgICBib3JkZXI6IDBweDtcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMnB4IDIycHggNDBweCAyMHB4O1xuICAgICAgICAgICAgICBwYWRkaW5nOiA5LjN2aCA1dncgMHZoIDkuM3ZoO1xuICAgICAgICAgICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vYmctdmVjdG9yLnBuZycpO1xuICAgICAgICAgICBcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBkYXJrZW47XG4gICAgICAgICAgICAgIC8qbWFyZ2luLXRvcDogLTUwcHg7XG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyMXZ3O1xuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDUwcHg7XG4gICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7Ki9cbiAgICAgICB9XG4gICAgICAgI2NoZWNrcG9pbnQge1xuICAgICAgICAgICAgIFxuICAgICAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cblx0aW1wb3J0IHsgb25Nb3VudCwgYmVmb3JlVXBkYXRlLCBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuXHRjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXHRpbXBvcnQgVHJhbnMgZnJvbSAnLi4vY29tcG9uZW50cy9UcmFuc0hlbHAuc3ZlbHRlJztcblx0aW1wb3J0IENvbXBsZXRlIGZyb20gJy4uL2NvbXBvbmVudHMvY29tcGxldGUuc3ZlbHRlJyAvL3NldCBzdWNjZXNzPXtmYWxzZX0gZm9yIGZhaWx1cmVcblx0aW1wb3J0IEJ0biBmcm9tICcuLi9jb21wb25lbnRzL0J0bi5zdmVsdGUnIC8vc2V0IDxOZXh0IHE9ezJ9PiB0byBza2lwIG11bHRpcGxlIHN0ZXBzIHA9Ny40IGZvciBwcm9ncmVzc1xuXHRpbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzIH0gZnJvbSAnLi4vc3RvcmUuanMnXG5cdGltcG9ydCBCYWNrIGZyb20gJy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cbiAgICBsZXQgcztcbiAgICBsZXQgY29tcCA9IDA7XG5cdC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuICAgIG9uTW91bnQoYXN5bmMoKSA9PiB7XG4gICAgICAgIFxuICAgICAgICAkcXVpelN0ZXBzWyRjb3VudF0uc3RhdHVzID0gMTtcbiAgICAgICAgJHF1aXpTdGVwcy5mb3JFYWNoKCh2KSA9PiB7XG4gICAgICAgICAgICBpZih2LmNvbXBsZXRlICYmIHYuZGlzcGxheVByb2dyZXNzKXtcbiAgICAgICAgICAgICAgICBjb21wKys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHN0ZXAuc2V0KDApO1xuICAgICAgICBsZXQgcGVyY2VudENvbXBsZXRlO1xuICAgICAgICBwZXJjZW50Q29tcGxldGUgPSAoY29tcC84KSAqIDEwMDtcbiAgICAgICAgY29uc29sZS5sb2cocGVyY2VudENvbXBsZXRlKTtcbiAgICAgICAgaWYgKHBlcmNlbnRDb21wbGV0ZSA8IDMzKSB7XG4gICAgICAgICAgICBzID0gMTtcbiAgICAgICAgfSBlbHNlIGlmIChwZXJjZW50Q29tcGxldGUgPCA5MCkge1xuICAgICAgICAgICAgcz0yO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcz0zO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgbGV0IGN1cnJlbnQgPSAnaW5pdGlhbCc7XG4gICAgXG5cbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+TWluZCBZb3VyIERhdGE8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxUcmFucz5cbjxtYWluPlxuPHNlY3Rpb24gY2xhc3M9J3Jldmlldyc+XG4gICAgeyNpZiAkc3RlcCA9PT0gMH1cbiAgICA8aDI+WW91IGhhdmUgY29tcGxldGVkIHtjb21wfSAvIDggY2hhbGxlbmdlcyE8L2gyPlxuICAgIFxuICAgIHsjZWFjaCAkcXVpelN0ZXBzIGFzIHtuYW1lLCBjb21wbGV0ZSwgZGlzcGxheVByb2dyZXNzfX1cbiAgICB7I2lmIGRpc3BsYXlQcm9ncmVzc31cbiAgICBcbiAgICAgICAgeyNpZiAhY29tcGxldGV9XG4gICAgICAgIDxkaXYgaWQ9XCJpbmNvbXBsZXRlXCIgY2xhc3M9XCJjYXJldFwiID5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwic3RhdHVzXCI+e25hbWV9PC9wPlxuICAgICAgICA8c3ZnIHdpZHRoPVwiMjhcIiBoZWlnaHQ9XCIyOFwiIHZpZXdCb3g9XCIwIDAgMjggMjhcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICAgICAgICAgIDxjaXJjbGUgY3g9XCIxNFwiIGN5PVwiMTRcIiByPVwiMTNcIiBzdHJva2U9XCIjRTk0MDQwXCIgc3Ryb2tlLXdpZHRoPVwiMlwiLz5cbiAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTMuOTk5MSA2LjkxMDE2TDEyLjc0OTMgOC4xNTk5M0wxNy42OTUyIDEzLjExNDdINi45MDgyVjE0Ljg4NzRIMTcuNjk1MkwxMi43NDkzIDE5Ljg0MjJMMTMuOTk5MSAyMS4wOTJMMjEuMDkgMTQuMDAxMUwxMy45OTkxIDYuOTEwMTZaXCIgZmlsbD1cIiNFOTQwNDBcIi8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHs6ZWxzZX1cbiAgICAgICAgPGRpdiBpZD1cImNvbXBsZXRlXCIgY2xhc3M9XCJjYXJldFwiID5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwic3RhdHVzXCI+e25hbWV9PC9wPlxuICAgICAgICA8c3ZnIHdpZHRoPVwiMjFcIiBoZWlnaHQ9XCIyMVwiIHZpZXdCb3g9XCIwIDAgMjEgMjFcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTAuMjc1NCAxOS4wMzdDMTUuMTIwNiAxOS4wMzcgMTkuMDUwOSAxNS4xMTI2IDE5LjA1MDkgMTAuMjY4NUMxOS4wNTA5IDUuNDI0NDQgMTUuMTIwNiAxLjUgMTAuMjc1NCAxLjVDNS40MzAyNSAxLjUgMS41IDUuNDI0NDQgMS41IDEwLjI2ODVDMS41IDE1LjExMjYgNS40MzAyNSAxOS4wMzcgMTAuMjc1NCAxOS4wMzdaXCIgZmlsbD1cIiNFOTQwNDBcIiBzdHJva2U9XCIjRTk0MDQwXCIgc3Ryb2tlLXdpZHRoPVwiM1wiLz5cbiAgICAgICAgICAgIDxwYXRoIGQ9XCJNOC4yODQ1MyAxNS44MjcyTDMuODcwNzUgMTEuNDE3NkMzLjYwNTU4IDExLjE1MjcgMy42MDU1OCAxMC43MjMyIDMuODcwNzUgMTAuNDU4M0w0LjgzMTA0IDkuNDk4ODZDNS4wOTYyMSA5LjIzMzkxIDUuNTI2MTggOS4yMzM5MSA1Ljc5MTM1IDkuNDk4ODZMOC43NjQ2OCAxMi40NjkzTDE1LjEzMzIgNi4xMDY4OUMxNS4zOTg0IDUuODQxOTcgMTUuODI4NCA1Ljg0MTk3IDE2LjA5MzUgNi4xMDY4OUwxNy4wNTM4IDcuMDY2MjlDMTcuMzE5IDcuMzMxMiAxNy4zMTkgNy43NjA3NCAxNy4wNTM4IDguMDI1NjhMOS4yNDQ4NCAxNS44MjcyQzguOTc5NjQgMTYuMDkyMSA4LjU0OTcgMTYuMDkyMSA4LjI4NDUzIDE1LjgyNzJaXCIgZmlsbD1cIiMzMDM1MzhcIi8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgPC9kaXY+IFxuICAgICAgICB7L2lmfVxuICAgICBcbiAgICB7L2lmfVxuICAgIHsvZWFjaH1cbiAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuICAgICAgIDxCdG4gcD17MH0gcT17c30+Q2xhaW0gbXkgUHJpemU8L0J0bj5cbiAgICAgICAgPGEgcHJlZmV0Y2ggaHJlZj0ncXVpem1haW4nPjxidXR0b24+QmFjayB0byBxdWl6PC9idXR0b24+PC9hPlxuICAgIDwvZGl2PlxuICAgIHs6ZWxzZSBpZiAkc3RlcCA9PT0gMX1cbiAgICA8ZGl2IGNsYXNzPVwicHJpemUxXCI+XG4gICAgICAgIDxoMz5Db25ncmF0cyE8L2gzPlxuICAgICAgICAgICAgPHA+WW91IGRpZG4ndCBhYmFuZG9uIHVzPC9wPlxuICAgICAgICA8aDE+TGV2ZWwxPC9oMT5cbiAgICAgICAgPGgyPk1heWJlIHRyeSBoYXJkZXIgbmV4dCB0aW1lLi4uPC9oMj5cbiAgICAgICAgPGltZyBzcmM9XCJwb3N0ZXJfbW9jay5qcGdcIiBhbHQ9XCJtaW5kIHlvdXIgZGF0YSBwb3N0ZXIgb24gdGhlIHN0cmVldCBhdCBuaWdodFwiLz5cbiAgICAgICAgICAgIDxwPlByaXplOiBBIHJhZGljYWwgbWluZCB5b3VyIGRhdGEgcG9zdGVyLiA8YnI+RG93bmxvYWQgaXQsIGFuZCBwcmludCBpdCBhdCBob21lLjwvcD5cbiAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj4gXG4gICAgICAgICAgIDxhIGhyZWY9XCIuL01pbmRZb3VyRGF0YVBvc3Rlci5wZGZcIiBkb3dubG9hZD1cIlwiPiA8QnRuIHE9ezB9IHA9ezB9PkRvd25sb2FkIHRoZSBwb3N0ZXI8L0J0bj48L2E+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIHs6ZWxzZSBpZiAkc3RlcCA9PT0gMn1cbiAgICA8ZGl2IGNsYXNzPVwicHJpemUxXCI+XG4gICAgICAgIDxoMz5Db25ncmF0cyE8L2gzPlxuICAgICAgICAgICAgPHA+WW91IGRpZG4ndCBhYmFuZG9uIHVzLCBhbmQgbGVhcm5lZCBhIGxpdHRsZSBhYm91dCBkYXRhIHByaXZhY3k8L3A+XG4gICAgICAgIDxoMT5MZXZlbCAyPC9oMT5cbiAgICAgICAgPGgyPk5vdCB0b28gc2hhYmJ5PC9oMj5cbiAgICAgICAgPGltZyBzcmM9XCIuL3BpbnMuanBnXCIgYWx0PVwid29tZW4gd2VhcmluZyBtaW5kIHlvdXIgZGF0YSBwaW5zIHdoaWNoIGlzIHRoZSBwcml6ZSBmb3IgdGhpcyBsZXZlbFwiLz5cbiAgICAgICAgICAgIDxwPlByaXplOiBNaW5kIHlvdXIgZGF0YSBwaW4gc2V0LiBBdmFpbGlibGUgZm9yIHB1cmNoYXNlIG9ubHkgZm9yIGEgc2VsZWN0IGdyb3VwIG9mIHBlb3BsZS4oY29taW5nIHNvb24pPC9wPlxuICAgICAgICAgICAgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+IFxuICAgICAgICAgICAgPEJ0biBxPXswfSBwPXswfSBkaXNhYmxlZD17dHJ1ZX0+Q2xhaW0geW91ciBwaW5zPGJyPiAoY29taW5nIHNvb24pPC9CdG4+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIHs6ZWxzZX1cbiAgICA8ZGl2IGNsYXNzPVwicHJpemUxXCI+XG4gICAgICAgIDxoMz5Db25ncmF0cyE8L2gzPlxuICAgICAgICAgICAgPHA+WW91IG1hZGUgaXQgYWxsIHRoZSB3YXkgdGhyb3VnaC48YnI+V2UgYXJlIGltcHJlc3NlZCE8L3A+XG4gICAgICAgIDxoMT5MZXZlbCAzOiBHcmFuZCBBd2Vzb21lIFBlcnNvbiBvZiBQcml2YWN5PC9oMT5cbiAgICAgICAgPGgyPlRoYW5rcyBmb3IgY2FyaW5nPC9oMj5cbiAgICAgICAgICAgIDxwPlByaXplOiBBY2Nlc3MgdG8gYSBzdXBlciBsaW1pdGVkIGVkaXRvbiBNaW5kIFlvdXIgRGF0YSBULXNoaXJ0LiBPbmx5IDUwIG1hZGUsIGZvciB0aG9zZSBkZWRpY2F0ZWQgdG8gcHJpdmFjeS48L3A+XG4gICAgICAgIDxpbWcgc3JjPVwiLi9zaGlydF9tb2NrLmpwZ1wiIGFsdD1cIm1pbmQgeW91ciBkYXRhIHNoaXJ0IG9uIGEgbW9kZWxcIi8+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+IFxuICAgICAgICAgICAgPEJ0biBxPXswfSBwPXswfT5CdXkgeW91ciBzaGlydCEhPGJyPiAoY29taW5nIHNvb24pPC9CdG4+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIHsvaWZ9XG5cbjwvc2VjdGlvbj5cbjwvbWFpbj5cbjwvVHJhbnM+XG48c3R5bGU+XG4gICAgbWFpbntcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMwMzUzODtcbiAgICB9XG4gICAgLnJldmlld3tcbiAgICAgICAgd2lkdGg6NTB2dztcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM4NDI0ZDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1mbG93OiBjb2x1bW47XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgY29sb3I6ICNmZmZmZmY7XG4gICAgICAgIHBhZGRpbmc6IDY1cHggMTAwcHggNjVweCA2NXB4O1xuICAgICAgICAvKmhlaWdodDogMTAwdmg7Ki9cbiAgICB9XG4gICAjY29tcGxldGV7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3IgOiMzODQyNEQ7XG4gICAgICAgIGNvbG9yOiAjZmZmZmZmO1xuXG4gICB9XG4gICAuaW5jb21wbGV0ZXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yIDojZmZmZmZmO1xuICAgICAgICBjb2xvcjogI2U5NDA0MDtcblxuXG4gICB9XG4gICAuc3RhdHVzIHtcbiAgICAgICBcbiAgICAgICBjb2xvcjojZTk0MDQwO1xuICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgbWFyZ2luOiA1cHg7XG4gICB9XG4gICBidXR0b24ge1xuXHQgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdCAgIG1hcmdpbjogMTBweDtcblx0ICAgYm9yZGVyOiBibGFjayBzb2xpZCAwcHg7XG5cdCAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgIH1cbiAgIC5jYXJldHtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdGZsZXgtZmxvdzogcm93IG5vd3JhcDtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgfVxuICAgIGRpdi5jYXJldCB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBtYXJnaW46IDEwcHg7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICAgICBcbiAgICB9XG4gICAgLnByaXplMSB7XG4gICAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIH1cbiAgICBpbWcge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuXG4gICAgfVxuICAgIC5idXR0b24taG9sZGVye1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcbiAgICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG4gIGltcG9ydCBUcmFucyBmcm9tICcuLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnXG5cbiAgICBsZXQgcGFydCA9IDA7XG4gIGxldCBjdXJyZW50ID0gJ2luaXRpYWwnO1xuICBpbXBvcnQgeyBxdWl6U3RlcHMgfSBmcm9tICcuLi9zdG9yZS5qcydcbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+RGF0YSBwcml2YWN5IHF1aXo8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPG1haW4+XG4gICAgPFRyYW5zPlxuICAgIHsjaWYgcGFydCA9PT0gMH1cbiAgICA8c2VjdGlvbj5cbiAgICAgICAgPGgxPldlbGNvbWUgdG8gTWluZCBZb3VyIERhdGEgQ2hhbGxlbmdlPC9oMT5cbiAgICAgICAgPHA+VGhpcyBjaGFsbGVuZ2UgaXMgZGVzaWduZWQgdG8gZWR1Y2F0ZSBwZW9wbGUgYWJvdXQgdGhlIGltcGxpY2F0aW9ucyBvZiBzdXJ2ZWlsbGFuY2UgY2FwaXRhbGlzbSwgZW1wb3dlciB0aGVtIHRvIHRha2UgY29udHJvbCBvdmVyIHRoZWlyIG93biBkYXRhLCBhbmQgZXF1aXAgd2l0aCB0b29scyB0byBtYWtlIGNoYW5nZSBhbmQgb3B0IHVzZS4gPC9wPlxuICAgICAgICA8cD5Vc2Ugb2YgdGhpcyBzaXRlIGlzIGF0IHlvdXIgb3duIHJpc2suIElmIHlvdSBkb24ndCBrbm93IHdoYXQgc29tZXRoaW5nIG1lYW5zLCBvciBkb2VzLCBza2lwIGl0LiBXZSBkb24ndCB3YW50IHlvdSB0byBtZXNzIHVwIHlvdXIgY29tcHV0ZXIgb3IgcGhvbmUuPC9wPlxuICAgICAgICA8YnV0dG9uIG9uOmNsaWNrPSd7KCkgPT4gcGFydCA9IDF9Jz5TdGFydCBDaGFsbGVuZ2U8L2J1dHRvbj5cbiAgICA8L3NlY3Rpb24+XG4gICAgezplbHNlIGlmIHBhcnQgPT09IDF9XG4gICAgPHNlY3Rpb24+XG4gICAgICAgIDxwIGlkPVwiaGVhZGxpbmVcIj5UaGlzIHRlc3QgY29udGFpbnMgMTAgdW5pcXVlIHByaXZhY3kgdGVzdHMgdGhhdCB3aWxsIHRha2UgeW91IGFib3V0IDMwIG1pbnV0ZXMgdG8gY29tcGxldGUuIFRocm91Z2h0IHRoZSB0ZXN0LCB3ZSB3aWxsIHByb3ZpZGUuLi48L3A+XG4gICAgICAgIDxkaXYgY2xhc3M6YWN0aXZlPVwie2N1cnJlbnQgPT09ICd3ZWJjYW0nfVwiIG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAnd2ViY2FtJ31cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJldFwiPlxuICAgICAgICAgICAgICAgIDxwPnskcXVpelN0ZXBzWzBdLm5hbWV9PC9wPlxuICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE4Ljg4NSA3TDEyIDEzLjc5ODlMNS4xMTUgN0wzIDkuMDkzMTJMMTIgMThMMjEgOS4wOTMxMkwxOC44ODUgN1pcIiBmaWxsPVwid2hpdGVcIi8+XG4gICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgeyNpZiBjdXJyZW50ID09PSAnd2ViY2FtJ31cbiAgICAgICAgICAgICAgICA8cD5xMSBjb250ZW50PC9wPlxuICAgICAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGhyPlxuICAgICAgICA8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAnaHR0cHMnfVwiXG4gICAgICAgIG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAnaHR0cHMnfVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZXRcIj5cbiAgICAgICAgICAgIDxwPnskcXVpelN0ZXBzWzFdLm5hbWV9PC9wPlxuICAgICAgICAgICAgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xOC44ODUgN0wxMiAxMy43OTg5TDUuMTE1IDdMMyA5LjA5MzEyTDEyIDE4TDIxIDkuMDkzMTJMMTguODg1IDdaXCIgZmlsbD1cIndoaXRlXCIvPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7I2lmIGN1cnJlbnQgPT09ICdodHRwcyd9XG4gICAgICAgICAgICA8cD5xMiBjb250ZW50PC9wPlxuICAgICAgICAgICAgey9pZn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxocj5cbiAgICAgICAgPGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ3NlYXJjaCd9XCJcbiAgICAgICAgb246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICdzZWFyY2gnfVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZXRcIj5cbiAgICAgICAgICAgIDxwPnskcXVpelN0ZXBzWzNdLm5hbWV9PC9wPlxuICAgICAgICAgICAgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xOC44ODUgN0wxMiAxMy43OTg5TDUuMTE1IDdMMyA5LjA5MzEyTDEyIDE4TDIxIDkuMDkzMTJMMTguODg1IDdaXCIgZmlsbD1cIndoaXRlXCIvPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7I2lmIGN1cnJlbnQgPT09ICdzZWFyY2gnfVxuICAgICAgICAgICAgPHA+cTMgY29udGVudDwvcD5cbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8aHI+XG4gICAgICAgIDxkaXYgY2xhc3M6YWN0aXZlPVwie2N1cnJlbnQgPT09ICdwcml2YWN5J31cIlxuICAgICAgICBvbjpjbGljaz1cInsoKSA9PiBjdXJyZW50ID0gJ3ByaXZhY3knfVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZXRcIj5cbiAgICAgICAgICAgIDxwPnskcXVpelN0ZXBzWzRdLm5hbWV9PC9wPlxuICAgICAgICAgICAgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xOC44ODUgN0wxMiAxMy43OTg5TDUuMTE1IDdMMyA5LjA5MzEyTDEyIDE4TDIxIDkuMDkzMTJMMTguODg1IDdaXCIgZmlsbD1cIndoaXRlXCIvPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7I2lmIGN1cnJlbnQgPT09ICdwcml2YWN5J31cbiAgICAgICAgICAgIDxwPnE0IGNvbnRlbnQ8L3A+XG4gICAgICAgICAgICB7L2lmfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGhyPlxuICAgICAgICA8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAndHJhY2tlcid9XCJcbiAgICAgICAgb246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICd0cmFja2VyJ31cIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNhcmV0XCI+XG4gICAgICAgICAgICA8cD57JHF1aXpTdGVwc1s1XS5uYW1lfTwvcD5cbiAgICAgICAgICAgIDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTguODg1IDdMMTIgMTMuNzk4OUw1LjExNSA3TDMgOS4wOTMxMkwxMiAxOEwyMSA5LjA5MzEyTDE4Ljg4NSA3WlwiIGZpbGw9XCJ3aGl0ZVwiLz5cbiAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgeyNpZiBjdXJyZW50ID09PSAndHJhY2tlcid9XG4gICAgICAgICAgICA8cD5xNSBjb250ZW50PC9wPlxuICAgICAgICAgICAgey9pZn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxocj5cbiAgICAgICAgPGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ2Rucyd9XCJcbiAgICAgICAgb246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICdkbnMnfVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZXRcIj5cbiAgICAgICAgICAgIDxwPnskcXVpelN0ZXBzWzZdLm5hbWV9PC9wPlxuICAgICAgICAgICAgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xOC44ODUgN0wxMiAxMy43OTg5TDUuMTE1IDdMMyA5LjA5MzEyTDEyIDE4TDIxIDkuMDkzMTJMMTguODg1IDdaXCIgZmlsbD1cIndoaXRlXCIvPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7I2lmIGN1cnJlbnQgPT09ICdkbnMnfVxuICAgICAgICAgICAgPHA+cTYgY29udGVudDwvcD5cbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8aHI+XG4gICAgICAgIDxkaXYgY2xhc3M6YWN0aXZlPVwie2N1cnJlbnQgPT09ICdsb2NhdGlvbid9XCJcbiAgICAgICAgb246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICdsb2NhdGlvbid9XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJldFwiPlxuICAgICAgICAgICAgPHA+eyRxdWl6U3RlcHNbOF0ubmFtZX08L3A+XG4gICAgICAgICAgICA8c3ZnIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE4Ljg4NSA3TDEyIDEzLjc5ODlMNS4xMTUgN0wzIDkuMDkzMTJMMTIgMThMMjEgOS4wOTMxMkwxOC44ODUgN1pcIiBmaWxsPVwid2hpdGVcIi8+XG4gICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHsjaWYgY3VycmVudCA9PT0gJ2xvY2F0aW9uJ31cbiAgICAgICAgICAgIDxwPnE3IGNvbnRlbnQ8L3A+XG4gICAgICAgICAgICB7L2lmfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGhyPlxuICAgICAgICA8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAnaW90J31cIlxuICAgICAgICBvbjpjbGljaz1cInsoKSA9PiBjdXJyZW50ID0gJ2lvdCd9XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJldFwiPlxuICAgICAgICAgICAgPHA+eyRxdWl6U3RlcHNbOV0ubmFtZX08L3A+XG4gICAgICAgICAgICA8c3ZnIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE4Ljg4NSA3TDEyIDEzLjc5ODlMNS4xMTUgN0wzIDkuMDkzMTJMMTIgMThMMjEgOS4wOTMxMkwxOC44ODUgN1pcIiBmaWxsPVwid2hpdGVcIi8+XG4gICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIHsjaWYgY3VycmVudCA9PT0gJ2lvdCd9XG4gICAgICAgICAgICA8cD5xOCBjb250ZW50PC9wPlxuICAgICAgICAgICAgey9pZn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgXG4gICAgICAgIDxidXR0b24gb246Y2xpY2s9J3soKSA9PiBwYXJ0ID0gMn0nPkNvbnRpbnVlPC9idXR0b24+XG4gICAgPC9zZWN0aW9uPlxuICAgIHs6ZWxzZX0gXG4gICAgPHNlY3Rpb24gaWQ9XCJjaGFwdGVyMVwiPlxuICAgICAgICA8aDEgaWQ9XCJjaGFwdGVyXCI+Q2hhcHRlciAxOiBTZWN1cml0eTwvaDE+XG4gICAgICAgIDxwIGlkPVwicGVybWlzc2lvblwiPlRocm91Z2ggb3V0IHRoaXMgY2hhbGxlbmdlLCB3ZSBuZWVkIHlvdXIgcGVybWlzc2lvbiB0byBnaXZlIHVzIG9uZSB0aW1lIG5vbi1yZWN1cnJpbmcgYWNjZXNzIHRvIHlvdXIgd2ViY2FtIHRvIHRlc3QgeW91ciBwcmFjdGljZS4gUGxlYXNlIGNsaWNrIGFsbG93IGZvciBvbmUgdGltZSBub24tcmVjdXJyaW5nIGFjY2VzcyB0byB5b3VyIHdlYmNhbWUgdG8gbW92ZSB0byB0aGUgbmV4dCBzdGVwIHRvIGNvbXBsZXRlIHRoaXMgY2hhbGxlbmdlLjwvcD5cbiAgICAgICAgPGJ1dHRvbiBpZD1cInN0YXJ0XCI+PGEgcmVsPXByZWZldGNoIGhyZWY9J3F1aXptYWluJyA+U3RhcnQgQ2hhbGxlbmdlPC9hPjwvYnV0dG9uPlxuICAgIDwvc2VjdGlvbj5cbiAgICB7L2lmfVxuPC9UcmFucz5cbiAgICA8L21haW4+XG5cbjxzdHlsZT5cbiAgICBtYWluIHtcbiAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgZmxleC1mbG93OiByb3c7XG4gICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxNXB4O1xuICAgICAgIH1cbiAgICAgICBzZWN0aW9ue1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMzg0MjREO1xuICAgICAgICAgICAgICB3aWR0aDogNjV2dztcbiAgICAgICAgICAgICAgbWluLWhlaWdodDogNzV2aDtcbiAgICAgICAgICAgICAgLypoZWlnaHQ6IDg2dmg7ICovXG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gICAgICAgICAgICAgIGJvcmRlcjogMHB4O1xuICAgICAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICAgICAgcGFkZGluZzogOS4zdmggNXZ3IDB2aCA5LjN2aDtcbiAgICAgICAgICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgLyptYXJnaW4tdG9wOiAtNTBweDtcbiAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIxdnc7XG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNTBweDtcbiAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMTVweDsqL1xuICAgICAgIH1cbiAgICAgICAjY2hhcHRlcjEge1xuICAgICAgICAgICB3aWR0aDogODV2dztcbiAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9iZy12ZWN0b3IucG5nJyk7XG4gICAgICAgICAgIFxuICAgICAgICAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IGRhcmtlbjtcbiAgICAgICB9XG4gICAgICAgcHtcbiAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICB9XG4gICAgICAgI2hlYWRsaW5lIHtcbiAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcbiAgICAgICB9XG4gICAgICAgI2NoYXB0ZXIge1xuICAgICAgICAgICBjb2xvcjogIzczZWY3YjtcbiAgICAgICB9XG4gICAgICAgYnV0dG9ue1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdFx0bWFyZ2luOiAxMHB4O1xuXHRcdGJvcmRlcjogYmxhY2sgc29saWQgMHB4O1xuXHRcdGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICB9XG4gICAgICAgICNzdGFydCB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzNlZjdiO1xuICAgICAgICB9XG4gICAgICAgIGF7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7ICAgICAgICB9XG4gICAgICAgLmFjdGl2ZSB7XG4gICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHBpbms7XG4gICAgICAgfVxuICAgICAgICNwZXJtaXNzaW9uIHtcbiAgICAgICAgd2lkdGg6IDcwJTtcbiAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgIH1cbiAgICAgICAuY2FyZXR7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG5cdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cdH1cbjwvc3R5bGU+IiwiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG5cdGV4cG9ydCBmdW5jdGlvbiBwcmVsb2FkKHsgcGFyYW1zLCBxdWVyeSB9KSB7XG5cdFx0cmV0dXJuIHRoaXMuZmV0Y2goYGJsb2cuanNvbmApLnRoZW4ociA9PiByLmpzb24oKSkudGhlbihwb3N0cyA9PiB7XG5cdFx0XHRyZXR1cm4geyBwb3N0cyB9O1xuXHRcdH0pO1xuXHR9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cblx0ZXhwb3J0IGxldCBwb3N0cztcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG5cdHVsIHtcblx0XHRtYXJnaW46IDAgMCAxZW0gMDtcblx0XHRsaW5lLWhlaWdodDogMS41O1xuXHR9XG48L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5CbG9nPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxoMT5SZWNlbnQgcG9zdHM8L2gxPlxuXG48dWw+XG5cdHsjZWFjaCBwb3N0cyBhcyBwb3N0fVxuXHRcdDwhLS0gd2UncmUgdXNpbmcgdGhlIG5vbi1zdGFuZGFyZCBgcmVsPXByZWZldGNoYCBhdHRyaWJ1dGUgdG9cblx0XHRcdFx0dGVsbCBTYXBwZXIgdG8gbG9hZCB0aGUgZGF0YSBmb3IgdGhlIHBhZ2UgYXMgc29vbiBhc1xuXHRcdFx0XHR0aGUgdXNlciBob3ZlcnMgb3ZlciB0aGUgbGluayBvciB0YXBzIGl0LCBpbnN0ZWFkIG9mXG5cdFx0XHRcdHdhaXRpbmcgZm9yIHRoZSAnY2xpY2snIGV2ZW50IC0tPlxuXHRcdDxsaT48YSByZWw9J3ByZWZldGNoJyBocmVmPSdibG9nL3twb3N0LnNsdWd9Jz57cG9zdC50aXRsZX08L2E+PC9saT5cblx0ey9lYWNofVxuPC91bD4iLCI8c2NyaXB0IGNvbnRleHQ9XCJtb2R1bGVcIj5cblx0ZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByZWxvYWQoeyBwYXJhbXMsIHF1ZXJ5IH0pIHtcblx0XHQvLyB0aGUgYHNsdWdgIHBhcmFtZXRlciBpcyBhdmFpbGFibGUgYmVjYXVzZVxuXHRcdC8vIHRoaXMgZmlsZSBpcyBjYWxsZWQgW3NsdWddLnN2ZWx0ZVxuXHRcdGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuZmV0Y2goYGJsb2cvJHtwYXJhbXMuc2x1Z30uanNvbmApO1xuXHRcdGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG5cdFx0aWYgKHJlcy5zdGF0dXMgPT09IDIwMCkge1xuXHRcdFx0cmV0dXJuIHsgcG9zdDogZGF0YSB9O1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLmVycm9yKHJlcy5zdGF0dXMsIGRhdGEubWVzc2FnZSk7XG5cdFx0fVxuXHR9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cblx0ZXhwb3J0IGxldCBwb3N0O1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblx0Lypcblx0XHRCeSBkZWZhdWx0LCBDU1MgaXMgbG9jYWxseSBzY29wZWQgdG8gdGhlIGNvbXBvbmVudCxcblx0XHRhbmQgYW55IHVudXNlZCBzdHlsZXMgYXJlIGRlYWQtY29kZS1lbGltaW5hdGVkLlxuXHRcdEluIHRoaXMgcGFnZSwgU3ZlbHRlIGNhbid0IGtub3cgd2hpY2ggZWxlbWVudHMgYXJlXG5cdFx0Z29pbmcgdG8gYXBwZWFyIGluc2lkZSB0aGUge3t7cG9zdC5odG1sfX19IGJsb2NrLFxuXHRcdHNvIHdlIGhhdmUgdG8gdXNlIHRoZSA6Z2xvYmFsKC4uLikgbW9kaWZpZXIgdG8gdGFyZ2V0XG5cdFx0YWxsIGVsZW1lbnRzIGluc2lkZSAuY29udGVudFxuXHQqL1xuXHQuY29udGVudCA6Z2xvYmFsKGgyKSB7XG5cdFx0Zm9udC1zaXplOiAxLjRlbTtcblx0XHRmb250LXdlaWdodDogNTAwO1xuXHR9XG5cblx0LmNvbnRlbnQgOmdsb2JhbChwcmUpIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xuXHRcdGJveC1zaGFkb3c6IGluc2V0IDFweCAxcHggNXB4IHJnYmEoMCwwLDAsMC4wNSk7XG5cdFx0cGFkZGluZzogMC41ZW07XG5cdFx0Ym9yZGVyLXJhZGl1czogMnB4O1xuXHRcdG92ZXJmbG93LXg6IGF1dG87XG5cdH1cblxuXHQuY29udGVudCA6Z2xvYmFsKHByZSkgOmdsb2JhbChjb2RlKSB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG5cdFx0cGFkZGluZzogMDtcblx0fVxuXG5cdC5jb250ZW50IDpnbG9iYWwodWwpIHtcblx0XHRsaW5lLWhlaWdodDogMS41O1xuXHR9XG5cblx0LmNvbnRlbnQgOmdsb2JhbChsaSkge1xuXHRcdG1hcmdpbjogMCAwIDAuNWVtIDA7XG5cdH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPntwb3N0LnRpdGxlfTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48aDE+e3Bvc3QudGl0bGV9PC9oMT5cblxuPGRpdiBjbGFzcz0nY29udGVudCc+XG5cdHtAaHRtbCBwb3N0Lmh0bWx9XG48L2Rpdj5cbiIsIjxzY3JpcHQ+XG5pbXBvcnQgeyBvbk1vdW50LCBhZnRlclVwZGF0ZSB9IGZyb20gJ3N2ZWx0ZSc7XG5pbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuaW1wb3J0IENvbXBsZXRpb24gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Db21wbGV0aW9uLnN2ZWx0ZSdcblxuY29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblxuZnVuY3Rpb24gY29tcGxldGUoKSB7XG5cdGRpc3BhdGNoKCdtZXNzYWdlJywge1xuXHRcdHF1ZXN0aW9uOiAwLFxuXHRcdGNvbXBsZXRlOiAndHJ1ZSdcblx0fSk7XG59XG5cdGxldCBxMVN0ZXBzID0gW1xuXHR7IHN0ZXBOdW06ICcxJywgXG5cdGgyOiAnSXMgeW91ciBXZWJjYW0gQ292ZXJlZD8nLCBcblx0bmFtZTogJ0ludHJvZHVjdGlvbicsIFxuXHRjbGFzc246ICdjb21wbGV0ZScsXG5cdGQ6ICcxIC8gMycsXG5cdGNvcHk6ICdJdOKAmXMgbGlrZWx5IHlvdXIgY29tcHV0ZXIgYWxyZWFkeSBoYXMgYSBidWlsdC1pbiBjYW1lcmEsIGFuZCBpdOKAmXMgcG9zc2libGUgZm9yIHRoYXQgY2FtZXJhIHRvIGJlIHVzZWQgdG8gc3B5IG9uIHlvdS4gIDxicj4gIElmIHlvdXIgd2ViY2FtIGZvciB3aGF0ZXZlciByZWFzb24gaGFzIGJlZW4gaGFja2VkLCB0aGUgcGVyc29uIG9uIHRoZSBvdGhlciBzaWRlIGNhbiB0YWtlIHBpY3R1cmVzIGFuZCB2aWRlbyBvZiBhbnl0aGluZyBvciBhbnlvbmUuIE5vLCB0aGlzIGlzbuKAmXQganVzdCBwYXJhbm9pYeKAk2EgcmVjZW50IHN1cnZleSBjb25kdWN0ZWQgYnkgSFAgZm91bmQgdGhhdCAxMCUgaW4gdGhlIFUuUy4gZWl0aGVyIGtub3cgc29tZW9uZSB3aG9zZSB3ZWJjYW0gd2FzIGhhY2tlZCBvciBoYXZlIGhhZCB0aGVpciBvd24gd2ViY2FtIGhhY2tlZC4nfSxcblx0eyBzdGVwTnVtOiAnMicsIFxuXHRoMjogJ0FDVElPTjogQ292ZXIgWW91ciBXZWJjYW0nLCBcblx0bmFtZTogJ1Blcm1pc3Npb25zJywgXG5cdGNsYXNzbjogJ2luY29tcGxldGUnLFxuXHRkOiAnMiAvIDMnLFxuXHRjb3B5OiAnUGxlYXNlIGhhdmUgeW91ciB3ZWJjYW0gY292ZXJlZCBhbmQgcHJvY2VlZCB0byBuZXh0IHN0ZXAuIFdlIHdpbGwgYWNjZXNzIHRvIHlvdXIgd2ViY2FtIHRvIG1ha2Ugc3VyZSB5b3UgY292ZXJlZCB0aGUgd2ViY2FtIHByb3Blcmx5LiBDbGljayDigJxUZXN04oCdIGJ1dHRvbiB0byBwcm9jZWVkIGNoYWxsZW5nZS4nfSxcblx0eyBzdGVwTnVtOiAnMycsIFxuXHRoMjogJ0dyZWF0ISBJdOKAmXMgcHJvcGVybHkgY292ZXJlZC4nLCBcblx0bmFtZTogJ0NvdmVyIHlvdXIgd2ViY2FtJywgXG5cdGNsYXNzbjogJ2luY29tcGxldGUnLFxuXHRkOiAnMyAvIDMnLFxuXHRjb3B5OiAnUGxlYXNlIHJlbWVtYmVyIHRvIGxlYXZlIHlvdXIgd2ViY2FtIGNvdmVyZWQgd2hpbGUgaXRzIG5vdCBiZWluZyB1c2VkLiBUaGlzIGNhbiBwcmV2ZW50Li4uJ30sXG5cdHtzdGVwTnVtOiAnJyxcblx0aDI6ICcnLFxuXHRuYW1lOiAnJyxcblx0Y2xhc3NuOiAnJyxcblx0ZDogJycsXG5cdGNvcHk6ICcnfVxuICAgIF1cblx0XG5cdCQ6IHEgPSAwO1xuXHRsZXQgaXNBY3RpdmU7XG5cdGZ1bmN0aW9uIHN0ZXBVcCgpIHtcblx0XHRxKys7XG5cdFx0cTFTdGVwc1txXS5jbGFzc24gPSAnY29tcGxldGUnO1xuXHRcdGlmIChxID09IDIgKXtcblx0XHRcdGlzQWN0aXZlID0gdHJ1ZTtcblx0XHR9XG5cdFx0aWYgKHEgPiAyKSB7XG5cdFx0XHRjb21wbGV0ZSgpO1xuXHRcdH1cblx0fVxuXHQkOiBoZWFkbGluZSA9IHExU3RlcHNbcV0uaDI7XG5cdCQ6IGJvZHkgPSBxMVN0ZXBzW3FdLmNvcHk7XG5cdCQ6IGZyYWN0aW9uID0gcTFTdGVwc1txXS5kO1xuXHRsZXQgdmlkZW9cblx0YWZ0ZXJVcGRhdGUoKCkgPT4ge1xuXHR2aWRlbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdmlkZW9FbGVtZW50XCIpO1xuXHRcblx0aWYgKG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKSB7XG4gIFx0bmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoeyB2aWRlbzogdHJ1ZSB9KVxuICAgIC50aGVuKGZ1bmN0aW9uIChzdHJlYW0pIHtcblx0XHRcdHZpZGVvLnNyY09iamVjdCA9IHN0cmVhbTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyMHIpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiTm90IGxvYWRlZFwiKTtcbiAgICB9KTtcblx0XHR9XG59KVxuXG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPldlYmNhbSBDaGFsbGVuZ2U8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjwhLS0gQ29tcGxldGlvbiBjbGFzcz0nc3RlcCcvIC0tPlxuPCEtLVxuXHQ8aDM+V2ViY2FtIENoYWxsZW5nZSB7ZnJhY3Rpb259PC9oMz5cblx0PHVsPlxuXHRcdHsjZWFjaCBxMVN0ZXBzIGFzIHN0ZXB9XG5cdFx0XHQ8bGkgY2xhc3M9e3N0ZXAuY2xhc3NufSA+e3N0ZXAubmFtZX08L2xpPlxuXHRcdHsvZWFjaH1cblx0PC91bD5cbjwvUHJvZ3Jlc3M+IC0tPlxuPHNlY3Rpb24gaWQ9XCJwcm9ncmVzc1wiPlxuXHQ8aDM+V2ViY2FtIENoYWxsZW5nZSB7ZnJhY3Rpb259PC9oMz5cblx0PHVsPlxuXHRcdHsjZWFjaCBxMVN0ZXBzIGFzIHN0ZXB9XG5cdFx0XHQ8bGkgY2xhc3M9e3N0ZXAuY2xhc3NufSA+e3N0ZXAubmFtZX08L2xpPlxuXHRcdHsvZWFjaH1cblx0PC91bD5cbjwvc2VjdGlvbj5cbjxkaXYgY2xhc3M9J3F1aXotaG9sZGVyJz5cblx0PGgxPntoZWFkbGluZX08L2gxPlxuXHQ8cD57Ym9keX08L3A+IFxuXHQ8c2VjdGlvbiBpZD0nbmV4dC1za2lwJz4gXG4gICAgICAgIDxidXR0b24gb246Y2xpY2s9e3N0ZXBVcH0gY2xhc3M9J2J0bi1kYXJrJz5OZXh0PC9idXR0b24+XG4gICAgPC9zZWN0aW9uPlxuXHR7I2lmIGlzQWN0aXZlfVxuXHRcdDx2aWRlbyBhdXRvcGxheT1cInRydWVcIiBpZD1cInZpZGVvRWxlbWVudFwiPjwvdmlkZW8+XG5cdHsvaWZ9XG48L2Rpdj5cblx0XG5cdFxuPHN0eWxlPlxuXHRtYWlue1xuXHRcdGZsZXgtZmxvdzogcm93IHdyYXA7XG5cdFx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHR9XG4gICAucXVpei1ob2xkZXIge1xuXHQgICBkaXNwbGF5OiBibG9jaztcblx0ICAgd2lkdGg6IDY1dnc7IC8qIDcyLjUgb3JpZ2luYWx5ICovXG5cdCAgIGxlZnQ6IDIwdnc7XG5cdCAgIGhlaWdodDogMTAwdmg7XG4gICAgICAgcGFkZGluZzogMjBweCA1MHB4O1xuICAgfVxuICAgLnN0ZXB7XG5cdFx0bWFyZ2luLWJvdHRvbTogNTVweDtcbiAgIH1cbiAgICNwcm9ncmVzcyB7XG5cdCAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICB9XG4gICB1bCB7XG5cdCAgIHBhZGRpbmctaW5saW5lLXN0YXJ0OiAxNXB4O1xuICAgfVxuICAgbGkge1xuXHQgICBtYXJnaW46IDMwcHggMHB4O1xuICAgfVxuICAgLmluY29tcGxldGUge1xuICAgICAgICBjb2xvcjogI2EwYTBhMDtcblx0XHRsaXN0LXN0eWxlLXR5cGU6IGNpcmNsZTtcblx0fVxuXHQuY29tcGxldGUge1xuXHRcdGxpc3Qtc3R5bGUtdHlwZTogZGlzYztcblx0fVxuXHQuU2lkZS1oZWFkbGluZSB7XG5cdFx0Zm9udC1zaXplOiAyNHB4O1xuXHRcdGZvbnQtd2VpZ2h0OiA3MDA7XG5cdH1cblx0I3ZpZGVvRWxlbWVudCB7XG5cdFx0XG5cdH1cblx0LmJ0bi1kYXJrIHtcbiAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgICAgIGJhY2tncm91bmQ6ICMwRjIwMzM7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICB9XG4gICAgYnV0dG9uIHtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICB9XG48L3N0eWxlPlxuXG4iLCI8c2NyaXB0PlxubGV0IGNvbXBsZXRlZDtcblxuPC9zY3JpcHQ+XG48c3R5bGU+XG4gICAgYXNpZGUge1xuICAgICAgIC8qIHBvc2l0aW9uOiBmaXhlZDsgKi9cbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRvcDo1MHB4O1xuICAgICAgICBsZWZ0OjA7XG4gICAgICAgIHdpZHRoOiAyNy43N3Z3O1xuICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICAvKmJhY2tncm91bmQtY29sb3I6ICNlNGU0ZTQ7XG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNjN2M3Yzc7Ki9cbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1MHB4O1xuICAgIH1cbiAgICBzZWN0aW9uIHtcbiAgICAgICAgcGFkZGluZzogMTBweCAxMHB4IDIwcHggMTBweDtcbiAgICB9XG4gICAgI3RpbWVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgXG4gICAgICAgIC8qYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjN2M3Yzc7Ki9cbiAgICB9XG4gICAgI3JlbWFpbmluZyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgcGFkZGluZzogNXB4IDBweCAyMHB4IDBweDtcbiAgICAgICAgXG5cbiAgICB9XG4gICAgI21pbnV0ZXMge1xuICAgICAgICBjb2xvcjp3aGl0ZTtcbiAgICAgICAgYmFja2dyb3VuZDogIzBGMjAzMztcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICB3aWR0aDogOS43dnc7XG4gICAgICAgIGhlaWdodDogNi43dmg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgICBcblxuICAgIH1cbiAgICAuYnRuLWRhcmsge1xuICAgICAgICBjb2xvcjp3aGl0ZTtcbiAgICAgICAgYmFja2dyb3VuZDogIzBGMjAzMztcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICB3aWR0aDogMzAlO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgIH1cbiAgICBidXR0b24ge1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgIH1cbiAgICAjbmV4dC1za2lwIHtcbiAgICAgICAgbWFyZ2luOiA1cHggMTBweDtcbiAgICAgICAgcGFkZGluZzogNXB4IDBweCAyMHB4IDBweDtcbiAgICB9XG4gICAgXG48L3N0eWxlPlxuPGFzaWRlIGlkPSdzaWRlYmFyJz5cbiAgICA8c2VjdGlvbiBpZD1cInByb2dyZXNzXCI+XG4gICAgICAgIDxzbG90PlxuXG4gICAgICAgIDwvc2xvdD5cbiAgICA8L3NlY3Rpb24+XG4gICAgPCEtLVxuICAgIDxzZWN0aW9uIGlkPSduZXh0LXNraXAnPiBcbiAgICAgICAgPGJ1dHRvbiBvbjpjbGljaz17c2F5SGVsbG99IGNsYXNzPSdidG4tZGFyayc+TmV4dDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uICBjbGFzcz0nYnRuLWRhcmsnPlNraXA8L2J1dHRvbj5cbiAgICA8L3NlY3Rpb24+IC0tPlxuPC9hc2lkZT4iLCI8c2NyaXB0PlxuXHRjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXHRpbXBvcnQgeyBvbk1vdW50LCBhZnRlclVwZGF0ZSwgY3JlYXRlRXZlbnREaXNwYXRjaGVyLCBvbkRlc3Ryb3kgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgRGV0ZWN0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvRGV0ZWN0LnN2ZWx0ZSdcbiAgICBpbXBvcnQgVHJhbnMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9UcmFuc0hlbHAuc3ZlbHRlJztcblx0IC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuXHQgaW1wb3J0IHsgcXVpelN0ZXBzIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG5cdCBpbXBvcnQgeyBjb3VudCwgdGltZXJBY3RpdmUgfSBmcm9tICcuLi8uLi9zdG9yZS5qcydcblx0IGltcG9ydCBDb21wbGV0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBsZXRlLnN2ZWx0ZSdcblx0IGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG4gICAgaW1wb3J0IHsgZmx5IH0gZnJvbSAnc3ZlbHRlL3RyYW5zaXRpb24nO1xuICAgIGltcG9ydCB7IHNpbmVJbk91dCB9IGZyb20gJ3N2ZWx0ZS9lYXNpbmcnO1xuICAgIG9uTW91bnQoYXN5bmMoKSA9PiB7XG5cdFx0JHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDE7XG5cdFx0dGltZXJBY3RpdmUuc2V0KCEkdGltZXJBY3RpdmUpXG5cdFx0fSk7XG5cdG9uRGVzdHJveSgoKSA9PiB0aW1lckFjdGl2ZS5zZXQoISR0aW1lckFjdGl2ZSkpXG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPlNlY3VyaXR5IHZzIFByaXZhY3k6IFdoYXTigJlzIGF0IHN0YWtlPzwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPGRpdiBpZD1cIm1haW4tY29udGVudFwiIGluOmZseT1cInt7ZGVsYXk6IDUwMCwgZHVyYXRpb246IDgwMCwgeDogMTAwMCwgb3BhY2l0eTogMC4wLCBlYXNpbmc6IHNpbmVJbk91dH19XCIgb3V0OmZseT1cInt7ZGVsYXk6IDUwLCBkdXJhdGlvbjogNjAwLCB4OiAtODAwLCBvcGFjaXR5OiAwLCBlYXNpbmc6IHNpbmVJbk91dH19XCI+XHRcblx0PHNlY3Rpb24+XG5cdFx0PGRpdj5cblx0PGgzPkNoZWNrcG9pbnQxPC9oMz5cbiAgICAgICAgPGgxPlNlY3VyaXR5IHZzIFByaXZhY3k6IFdoYXTigJlzIGF0IHN0YWtlPzwvaDE+XG5cdFx0PHA+PHN0cm9uZz5Db25ncmF0dWxhdGlvbnMhPC9zdHJvbmc+IEJ5IGNvbXBsZXRpbmcgdGhlc2UgdGFza3MsIHlvdSBoYXZlIGp1c3QgdGFrZW4gYSBmZXcgc3RlcHMgdG93YXJkIHNlY3VyaW5nIHlvdXIgcGVyc29uYWwgaW5mb3JtYXRpb24gZnJvbSBwb3RlbnRpYWwgY3liZXJjcmltZS4gQnV0IHRoZSB0cnV0aCBpcywgeW91ciBkYXRhIOKAlCBkaWZmZXJlbnQgZGV0YWlscyBhYm91dCB5b3Ug4oCUIGxpdmVzIGluIGEgbG90IG9mIHBsYWNlcyBpbiBvdXIgaW5jcmVhc2luZ2x5IGNvbm5lY3RlZCB3b3JsZC4gPC9wPlxuXHRcdDxwPlNvbWUgcGVvcGxlIHRoaW5rIG9mIHByaXZhY3kgYW5kIHNlY3VyaXR5IGFzIHByZXR0eSBtdWNoIHRoZSBzYW1lIHRoaW5nLiAgV2hpbGUgdGhlIHR3byBzb21ldGltZXMgb3ZlcmxhcCwgdGhleSBhcmVu4oCZdCB0aGUgc2FtZSwgYW5kIGtub3dpbmcgaG93IHRoZXkgZGlmZmVyIHdpbGwgaGVscCBnaXZlIHlvdSBjb250cm9sIG92ZXIgeW91ciBwZXJzb25hbCBpbmZvcm1hdGlvbiBhbmQgaG93IGl04oCZcyB1c2VkLjwvcD5cblx0XHQ8cD48c3Ryb25nPldoYXTigJlzIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gcHJpdmFjeSBhbmQgc2VjdXJpdHk/PC9zdHJvbmc+PC9wPlxuXHRcdDxwPlNlY3VyaXR5IHJlZmVycyB0byBob3cgeW91ciBwZXJzb25hbCBpbmZvcm1hdGlvbiBpcyBwcm90ZWN0ZWQuIDwvcD5cblx0XHQ8cD5Qcml2YWN5LCBvbiB0aGUgb3RoZXIgaGFuZCwgcmVsYXRlcyB5b3VyIHJpZ2h0cyB0byBjb250cm9sIHRoZSBkYXRhIHRoYXTigJlzIGJlaW5nIGNvbGxlY3RlZCBhYm91dCB5b3UsIGhvdyBpdOKAmXMgY29sbGVjdGVkLCB3aHksIGFuZCB3aG8gaXTigJlzIHNoYXJlZCB3aXRoLjwvcD5cblx0XHQgXG5cdFx0PHA+PHN0cm9uZz5XaHkgZG9lcyBwcml2YWN5IG1hdHRlcj88L3N0cm9uZz48L3A+XG5cdFx0PHA+VGhlIGNvbnZlbmllbmNlIG9mIGxpdmluZyBpbiBhIGNvbnN0YW50bHkgY29ubmVjdGVkIHdvcmxkIGNvbWVzIGF0IGEgY29zdC4gT3VyIGRhaWx5IGludGVyYWN0aW9ucyB3aXRoIHRlY2hub2xvZ3kgZ2VuZXJhdGVzIGFuIHVuaW1hZ2luYWJsZSBhbW91bnQgb2YgZGF0YSB0aGF0IGlzIGJlaW5nIGhhcnZlc3RlZCBhbmQgc29sZCB0byB0aG9zZSB3aG8gd2FudCB0byBwcmVkaWN0IGFuZCBzaGFwZSBvdXIgYmVoYXZpb3IuIDwvcD5cblx0XHRcblx0XHRcblx0XHQ8cD5Zb3UgbWlnaHQgdGhpbmsgaXTigJlzIG5vIGJpZyBkZWFsIHRvIGdpdmUgdXAgeW91ciBkYXRhIGluIGV4Y2hhbmdlIGZvciBwZXJzb25hbGl6ZWQgYWRzIGFuZCBjb250ZW50LCBidXQgY29uc3VtcHRpb24gLS0gYnJvd3NpbmcgdGhyb3VnaCBhIHN0b3JlIGFuZCBidXlpbmcgdGhpbmdzIC0tIGFuZCBxdWlldCB0aW1lIGFsb25lIGFyZSBib3RoIGltcG9ydGFudCBwYXJ0cyBvZiBob3cgd2UgZGVmaW5lIG91cnNlbHZlcy4gSWYgd2UgYmxpbmRseSBhZ3JlZSB0byBsaXZlIGluIGEgc3RhdGUgb2YgY29uc3RhbnQgc3VydmVpbGxhbmNlLCB3ZSBsb3NlIHRoZSBhYmlsaXR5IHRvIGNob29zZSBmb3Igb3Vyc2VsdmVzIGFuZCBhbGxvdyBvdGhlcnMgdG8gaW5mbHVlbmNlIG91ciBiZWhhdmlvcnMgYW5kIHNlbGYtcGVyY2VwdGlvbi48L3A+XG5cdFx0XG5cdFx0PHA+Tm93IGltYWdpbmUgaWYgb3VyIHNvY2lldHkgYWNjZXB0cyBzdXJ2ZWlsbGFuY2UgYXMgdGhlIG5ldyBub3JtYWwgYW5kIGNpdGl6ZW5zIGtub3cgdGhleSBhcmUgYmVpbmcgd2F0Y2hlZCBjb25zdGFudGx5LiBXZSBtYXkgaGF2ZSBoaWdobHkgcGVyc29uYWxpemVkIGFjY2VzcyB0byBnb29kcyBhbmQgc2VydmljZXMsIGJ1dCB3ZSB3aWxsIGJlIGxlc3MgbGlrZWx5IHRvIHNwZWFrIGZyZWVseSBhbmQgYWN0IGluZGl2aWR1YWxseS4gV2l0aG91dCBwcml2YWN5IGFzIGEgZnVuZGFtZW50YWwgcmlnaHQsIHdlIGxvc2UgcG93ZXIgYW5kIGJlY29tZSBhbiBvYmVkaWVudCBhbmQgc3VibWlzc2l2ZSBzb2NpZXR5LjwvcD5cblx0XHRcbjxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG4gICAgPENvbXBsZXRlPkNvbnRpbnVlIHRvIG5leHQgQ2hhbGxlbmdlPC9Db21wbGV0ZT5cbjwvZGl2PlxuPC9kaXY+XG5cbjxCYWNrLz5cbjwvc2VjdGlvbj5cbjwvZGl2PlxuXG48c3R5bGU+XG4gICAjbWFpbi1jb250ZW50e1xuXHRcdFx0d2lkdGg6MTAwJTtcblx0XHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTU1ODY5NzUyNC01YTJkMWU4YTkzZDE/aXhsaWI9cmItMS4yLjEmaXhpZD1leUpoY0hCZmFXUWlPakV5TURkOSZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTI1NTAmcT04MCk7XG5cdFx0XHRiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG5cdFx0XHRwYWRkaW5nLXRvcDogMTVweDtcbiAgIH1cbiAgIGRpdiB7XG5cdHdpZHRoOiA1MCU7XG4gICAgICAgICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzM4NDI0RDsgXG4gICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICAgICAgICAgICAgcGFkZGluZzogOS4zdmggNXZ3IDB2aCA5LjN2aDtcbiAgICAgICAgICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICB9XG4gIFxuICAgc3Ryb25nIHtcblx0ICAgZm9udC13ZWlnaHQ6IDcwMDtcblx0ICAgZm9udC1zaXplOiAyMnB4O1xuICAgfVxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuXHRpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuXHRjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXHRpbXBvcnQgeyBvbk1vdW50LCBhZnRlclVwZGF0ZSwgb25EZXN0cm95IH0gZnJvbSAnc3ZlbHRlJztcblx0aW1wb3J0IERldGVjdCBmcm9tICcuLi8uLi9jb21wb25lbnRzL0RldGVjdC5zdmVsdGUnXG5cdGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuXHRpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnXG5cdGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cblx0IC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuXHQgaW1wb3J0IHsgcXVpelN0ZXBzLCBjb3VudCwgdGltZXJBY3RpdmUgfSBmcm9tICcuLi8uLi9zdG9yZS5qcydcblxuXHRvbk1vdW50KGFzeW5jKCkgPT4ge1xuXHRcdCRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxO1xuXHRcdHRpbWVyQWN0aXZlLnNldCghJHRpbWVyQWN0aXZlKX0pO1xuXHRvbkRlc3Ryb3koKCkgPT4gdGltZXJBY3RpdmUuc2V0KCEkdGltZXJBY3RpdmUpKVxuXG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPlN1cnZlaWxsYW5jZSBDYXBpdGFsaXNtIEhvdyBkaWQgdGhpcyBoYXBwZW4/PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48VHJhbnMgaWQ9XCJtYWluLWNvbnRlbnRcIj5cblx0PHNlY3Rpb24+XG5cdFx0PGRpdj5cbiAgICA8aDM+Q2hlY2twb2ludCAyOjwvaDM+XG4gICAgICAgIDxoMT5TdXJ2ZWlsbGFuY2UgQ2FwaXRhbGlzbSBIb3cgZGlkIHRoaXMgaGFwcGVuPzwvaDE+XG5cdFx0PHA+PHN0cm9uZz5HcmVhdCE8L3N0cm9uZz5Zb3UgYXJlIG5vdyBvbiB5b3VyIHdheSB0byBjbGFpbWluZyB5b3VyIHByaXZhY3kuPC9wPlxuXHRcdDxwPkJ5IG5vdyB3ZSBob3BlIHlvdSBzZWUgaG93IG91ciBwcml2YXRlIGV4cGVyaWVuY2VzIGFyZSBiZWluZyBoYXJ2ZXN0ZWQgdG8gYmUgdHJhbnNsYXRlZCBpbnRvIGJlaGF2aW9yYWwgZGF0YS4gVGhpcyBkYXRhIGlzIHRoZW4gcHJvY2Vzc2VkIGFuZCBwYWNrYWdlZCBhcyBwcmVkaWN0aW9uIHByb2R1Y3RzIGFuZCBzb2xkIHRvIGJ1c2luZXNzIGN1c3RvbWVycyB3aXRoIGEgY29tbWVyY2lhbCBpbnRlcmVzdCBpbiBrbm93aW5nIHdoYXQgd2Ugd2lsbCBkbyBub3csIHNvb24sIGFuZCBsYXRlci4gVGhpcyBpcyBzdXJ2ZWlsbGFuY2UgY2FwaXRhbGlzbS48L3A+XG5cdFx0PHA+PHN0cm9uZz5Ib3cgZGlkIHRoaXMgaGFwcGVuPzwvc3Ryb25nPjwvcD5cblx0XHQ8cD5JdCB3YXNu4oCZdCB0aGF0IGxvbmcgYWdvIHRoYXQgdGhlIGludGVybmV0IGVudGVyZWQgb3VyIGRhaWx5IGxpdmVzLiBXZSB3ZW50IG9ubGluZSBleHBlY3RpbmcgZW1wb3dlcm1lbnQsIHRoZSBkZW1vY3JhdGl6YXRpb24gb2Yga25vd2xlZGdlLCBhbmQgaGVscCB3aXRoIHJlYWwgcHJvYmxlbXMsIGJ1dCBzdXJ2ZWlsbGFuY2UgY2FwaXRhbGlzbSByZWFsbHkgd2FzIGp1c3QgdG9vIGx1Y3JhdGl2ZSB0byByZXNpc3QuIEdvb2dsZSB3YXMgdGhlIGZpcnN0IHRvIGxlYXJuIGhvdyB0byBjYXB0dXJlIHN1cnBsdXMgYmVoYXZpb3JhbCBkYXRhIGFuZCB1c2UgaXQgdG8gY29tcHV0ZSBwcmVkaWN0aW9uIHByb2R1Y3RzIHRoYXQgdGhleSBjb3VsZCBzZWxsIHRvIGFkdmVydGlzZXJzLlxuXHRcdDwvcD5cblx0XHQ8cD5UaGlzIGVjb25vbWljIGxvZ2ljIGhhcyBub3cgc3ByZWFkIGJleW9uZCB0aGUgdGVjaCBjb21wYW5pZXMgdG8gbmV3IHN1cnZlaWxsYW5jZeKAk2Jhc2VkIGVjb3N5c3RlbXMgaW4gdmlydHVhbGx5IGV2ZXJ5IHNlY3RvciwgZnJvbSBpbnN1cmFuY2UgdG8gYXV0b21vYmlsZXMgdG8gaGVhbHRoLCBlZHVjYXRpb24sIGZpbmFuY2UsIHRvIGV2ZXJ5IHByb2R1Y3QgZGVzY3JpYmVkIGFzIOKAnHNtYXJ04oCdIGFuZCBldmVyeSBzZXJ2aWNlIGRlc2NyaWJlZCBhcyDigJxwZXJzb25hbGl6ZWQu4oCdIEJ5IG5vdyBpdOKAmXMgdmVyeSBkaWZmaWN1bHQgdG8gcGFydGljaXBhdGUgaW4gc29jaWV0eSB3aXRob3V0IGludGVyZmFjaW5nIHdpdGggdGhlc2Ugc2FtZSBjaGFubmVscyB0aGF0IGFyZSBzdXBwbHkgY2hhaW5zIGZvciBzdXJ2ZWlsbGFuY2UgY2FwaXRhbGlzbeKAmXMgZGF0YSBmbG93cy48L3A+XG4gICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8Q29tcGxldGU+U3RhcnQgdGhlIG5leHQgQ2hhbGxlbmdlPC9Db21wbGV0ZT5cblx0PC9kaXY+XG5cdDwvZGl2PlxuXHQ8QmFjay8+XG5cdDwvc2VjdGlvbj5cbjwvVHJhbnM+XG5cbjxzdHlsZT5cbiAgIHNlY3Rpb257XG5cdFx0XHR3aWR0aDoxMDAlO1xuXHRcdFx0YmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTM1Mzc2NDcyODEwLTVkMjI5YzY1ZGEwOT9peGxpYj1yYi0xLjIuMSZpeGlkPWV5SmhjSEJmYVdRaU9qRXlNRGQ5JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9MjYwMCZxPTgwKTtcblx0XHRcdGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcblx0XHRcdHBhZGRpbmctdG9wOiAxNXB4O1xuICAgfVxuICAgZGl2IHtcblx0d2lkdGg6IDUwJTtcbiAgICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMzg0MjREOyBcbiAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgICAgICAgICAgICBwYWRkaW5nOiA5LjN2aCA1dncgMHZoIDkuM3ZoO1xuICAgICAgICAgICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgIH1cbiAgXG4gICBzdHJvbmcge1xuXHQgICBmb250LXdlaWdodDogNzAwO1xuXHQgICBmb250LXNpemU6IDIycHg7XG4gICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCB7IG9uTW91bnQsIGFmdGVyVXBkYXRlLCBvbkRlc3Ryb3kgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnXG5cdGltcG9ydCBCdG4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdG4uc3ZlbHRlJyAvL3NldCA8TmV4dCBxPXsyfT4gdG8gc2tpcCBtdWx0aXBsZSBzdGVwc1xuICAgIGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuIC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuIGltcG9ydCB7IGNvdW50LCBxdWl6U3RlcHMsIHRpbWVyQWN0aXZlIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG4gaW1wb3J0IEJhY2sgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CYWNrLnN2ZWx0ZSdcblx0b25Nb3VudChhc3luYygpID0+IHtcblx0XHQkcXVpelN0ZXBzWyRjb3VudF0uc3RhdHVzID0gMTtcblx0XHR0aW1lckFjdGl2ZS5zZXQoISR0aW1lckFjdGl2ZSk7XG5cdH0pO1xuXHRvbkRlc3Ryb3koKCkgPT4gdGltZXJBY3RpdmUuc2V0KCEkdGltZXJBY3RpdmUpKVxuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5Ib3cgIHRvIG1ha2UgY2hhbmdlPzwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPFRyYW5zIGlkPVwibWFpbi1jb250ZW50XCI+XG5cdDxzZWN0aW9uPlxuXHRcdDxkaXY+XG4gICAgPGgxPldlIG11c3QgY2xhaW0gb3VyIHJpZ2h0IHRvIHByaXZhY3kuPC9oMT5cbiAgICAgICAgPHA+QWdpdGF0ZSBmb3IgY2hhbmdlLiBMaWtlIG1vc3QgcmlnaHRzLCBwcml2YWN5IGRyYXdzIG5vdGljZSBvbmx5IGFmdGVyIGl04oCZcyBnb25lLiBBdCB0aGF0IHBvaW50LCBpdOKAmXMgaGFyZGVyIHRvIHJlZ2Fpbi4gSnVzdCBhcyB3ZSBzZWUgdGhlIGVudmlyb25tZW50YWwgaW1wYWN0IG9mIHRoZSBlYXJseSBJbmR1c3RyaWFsIEFnZSwgZnV0dXJlIGdlbmVyYXRpb25zIHdpbGwganVkZ2UgdG9kYXnigJlzIHNvY2lldHkgb24gaG93IHdlbGwgaXQgcm9zZSB0byB0aGUgY2hhbGxlbmdlcyBvZiBzdXJ2ZWlsbGFuY2UgYW5kIG1hc3NpdmUgaW5mb3JtYXRpb24gY29sbGVjdGlvbi4gUHVzaCBmb3IgcmVmb3JtLjwvcD5cbiAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxhIHJlbD1wcmVmZXRjaCBocmVmPVwicmV2aWV3XCI+PEJ0biBwPXswfT5TZWUgeW91ciByZXN1bHRzPC9CdG4+PC9hPlxuICAgICAgICA8YnV0dG9uID5TaWduIGEgUGV0aXRpb248L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiA+Q29udGFjdCB5b3VyIFJlcDwvYnV0dG9uPlxuXHQ8L2Rpdj5cblx0PC9kaXY+XG48QmFjay8+XG48L3NlY3Rpb24+XG48L1RyYW5zPlxuXG48c3R5bGU+XG4gICBzZWN0aW9ue1xuXHRcdFx0d2lkdGg6MTAwdnc7XG5cdFx0XHRoZWlnaHQ6IDEwMHZoO1xuXHRcdFx0YmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTU3NDExNzMyLTE3OTdhOTE3MWZjZj9peGxpYj1yYi0xLjIuMSZpeGlkPWV5SmhjSEJmYVdRaU9qRXlNRGQ5JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9NzUwJnE9ODApO1xuXHRcdFx0YmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuXHRcdFx0cGFkZGluZy10b3A6IDE1cHg7XG4gICB9XG4gICBkaXYge1xuXHR3aWR0aDogNTAlO1xuICAgICAgICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMzODQyNEQ7IFxuICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gICAgICAgICAgICAgIHBhZGRpbmc6IDkuM3ZoIDV2dyAwdmggOS4zdmg7XG4gICAgICAgICAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgfVxuICBcbiAgIHN0cm9uZyB7XG5cdCAgIGZvbnQtd2VpZ2h0OiA3MDA7XG5cdCAgIGZvbnQtc2l6ZTogMjJweDtcbiAgIH1cbiAgIFxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7IG9uTW91bnQsIGJlZm9yZVVwZGF0ZSwgYWZ0ZXJVcGRhdGUsIG9uRGVzdHJveSB9IGZyb20gJ3N2ZWx0ZSc7XG4gICAgaW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG4gICAgaW1wb3J0IENvbXBsZXRlIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY29tcGxldGUuc3ZlbHRlJ1xuICAgIGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG4gICAgaW1wb3J0IHsgY291bnQgfSBmcm9tICcuLi8uLi9zdG9yZS5qcydcbiAgICBpbXBvcnQgeyBxdWl6U3RlcHMgfSBmcm9tICcuLi8uLi9zdG9yZS5qcydcblx0XG4gICAgbGV0IHEgPSAwO1xuICAgIGxldCBpc0FjdGl2ZTtcblx0ZnVuY3Rpb24gYWR2YW5jZSgpIHtcblx0XHRxKys7XG4gICAgICAgIGNvbnNvbGUubG9nKHEpO1xuICAgICAgICBpZiAocT0yKSB7XG4gICAgICAgICAgICBpc0FjdGl2ZT0gdHJ1ZTtcbiAgICAgICAgfVxuXHR9XG5cdGZ1bmN0aW9uIGFkdmFuY2VUd28oKSB7XG5cdFx0cSs9Mjtcblx0XHRjb25zb2xlLmxvZyhxKTtcbiAgICB9XG4gICAgLy9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG4gICAgb25Nb3VudChhc3luYygpID0+IHskcXVpelN0ZXBzWyRjb3VudF0uc3RhdHVzID0gMX0pO1xuICAgIC8vU3RhcnQgVmlkZW8gb24gdXBkYXRlXG4gICAgbGV0IHZpZGVvO1xuXHRhZnRlclVwZGF0ZShhc3luYygpID0+IHtcblx0dmlkZW8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3ZpZGVvRWxlbWVudFwiKTtcblx0aWYgKG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKSB7XG4gIFx0bmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoeyB2aWRlbzogdHJ1ZSB9KVxuICAgIC50aGVuKGZ1bmN0aW9uIChzdHJlYW0pIHtcblx0XHRcdHZpZGVvLnNyY09iamVjdCA9IHN0cmVhbTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyMHIpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiTm90IGxvYWRlZFwiKTtcbiAgICB9KTtcblx0XHR9XG59KVxuLy9zdG9wIHZpZGVvIGZ1bmN0aW9uIG9uIGVuZCBvZiBjb21wb25lbnQgICBcbiAgICBhZnRlclVwZGF0ZShhc3luYygpID0+IHsgXG4gICAgICAgIGZ1bmN0aW9uIHN0b3BTdHJlYW1lZFZpZGVvKHZpZGVvKSB7IFxuICAgICAgICAgICAgY29uc3Qgc3RyZWFtID0gdmlkZW8uc3JjT2JqZWN0O1xuICAgICAgICAgICAgY29uc3QgdHJhY2tzID0gc3RyZWFtLmdldFRyYWNrcygpO1xuICAgICAgICAgICAgICAgIHRyYWNrc1swXS5zdG9wKCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZpZGVvLnNyY09iamVjdCA9IG51bGw7XG4gICAgICAgICAgICB9KTtcbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+V2ViY2FtIENoYWxsZW5nZTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPFRyYW5zPlxuXG57I2lmIHE9PTB9XG48c2VjdGlvbj5cblx0PGgyPklzIHlvdXIgV2ViY2FtIENvdmVyZWQ/PC9oMj4gXG5cdDxwPkl04oCZcyBsaWtlbHkgeW91ciBjb21wdXRlciBhbHJlYWR5IGhhcyBhIGJ1aWx0LWluIGNhbWVyYSwgYW5kIGl04oCZcyBwb3NzaWJsZSBmb3IgdGhhdCBjYW1lcmEgdG8gYmUgdXNlZCB0byBzcHkgb24geW91LiAgPGJyPiAgSWYgeW91ciB3ZWJjYW0gZm9yIHdoYXRldmVyIHJlYXNvbiBoYXMgYmVlbiBoYWNrZWQsIHRoZSBwZXJzb24gb24gdGhlIG90aGVyIHNpZGUgY2FuIHRha2UgcGljdHVyZXMgYW5kIHZpZGVvIG9mIGFueXRoaW5nIG9yIGFueW9uZS4gTm8sIHRoaXMgaXNu4oCZdCBqdXN0IHBhcmFub2lh4oCTYSByZWNlbnQgc3VydmV5IGNvbmR1Y3RlZCBieSBIUCBmb3VuZCB0aGF0IDEwJSBpbiB0aGUgVS5TLiBlaXRoZXIga25vdyBzb21lb25lIHdob3NlIHdlYmNhbSB3YXMgaGFja2VkIG9yIGhhdmUgaGFkIHRoZWlyIG93biB3ZWJjYW0gaGFja2VkLjwvcD5cblx0PGJ1dHRvbiBvbjpjbGljaz17YWR2YW5jZX0+Q29udGludWU8L2J1dHRvbj5cbjwvc2VjdGlvbj5cbns6ZWxzZSBpZiBxPT0xfVxuPHNlY3Rpb24+XG5cdDxoMj5Db3ZlciBZb3VyIFdlYmNhbTwvaDI+XG5cdDxwPkNvdmVyIHlvdXIgd2ViY2FtLiBZb3UgY2FuIGdldCBmYW5jeSByZW1vdmFibGUgc3RpY2tlcnMgZm9yIHRoaXMgcHVycG9zZSwgYnV0IGZvciBub3csIGZpbmQgYSBzdGlja3kgbm90ZSBvciBwaWVjZSBvZiBtYXNraW5nIHRhcGUgYW5kIGNvdmVyIHlvdXIgd2ViY2FtIHdoZW4gaXTigJlzIG5vdCBpbiB1c2UgKGxpa2UgcmlnaHQgbm93KS4gPC9wPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuICAgICAgICA8YnV0dG9uIG9uOmNsaWNrPXthZHZhbmNlfT5JdCdzIGNvdmVyZWQ8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiBvbjpjbGljaz17YWR2YW5jZVR3b30+Tm8gVGhhbmtzLCBJdCdzIGEgaGFzc2xlPC9idXR0b24+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlIGlmIHE9PTJ9XG4gICA8ZGl2IGNsYXNzPVwidmlkZW8taG9sZGVyXCI+PHZpZGVvIGF1dG9wbGF5PVwidHJ1ZVwiIGlkPVwidmlkZW9FbGVtZW50XCI+PC92aWRlbz48L2Rpdj5cbiAgICA8cCBpZD1cImFsZXJ0XCI+Q292ZXIgeW91ciB3ZWJjYW08L3A+XG4gICAgPHAgaWQ9XCJub3QtY292ZXJlZFwiPllvdSBoYXZlbuKAmXQgY292ZXJlZCB5b3VyIHdlYmNhbWUgb3IgZGlkIG5vdCBkbyBpdCBwcm9wZXJseS4gUGxlYXNlIGNvdmVyIHlvdXIgd2ViY2FtIGNvbXBsZXRlbHkgdG8gcHJvY2VlZCB0byB0aGUgbmV4dCBzdGVwLjwvcD5cbiAgICA8IS0tPGJ1dHRvbiBvbjpjbGljaz17aW5jb21wbGV0ZX0+T253YXJkcyB0byB0aGUgbmV4dCBjaGFsbGVuZ2U8L2J1dHRvbj4gLS0+XG4gICAgPENvbXBsZXRlPlxuICAgICAgICBPbndhcmRzIHRvIHRoZSBuZXh0IGNoYWxsZW5nZVxuICAgIDwvQ29tcGxldGU+XG57OmVsc2V9XG4gICAgPHZpZGVvIGF1dG9wbGF5PVwidHJ1ZVwiIGlkPVwidmlkZW9FbGVtZW50XCI+PC92aWRlbz5cbnsvaWZ9XG48QmFjay8+XG48L1RyYW5zPlxuPHN0eWxlPlxuICAgLmJ1dHRvbi1ob2xkZXIge1xuXHR3aWR0aDogMjd2dztcblx0ZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICB9XG4gICAudmlkZW8taG9sZGVye1xuICAgICAgIHdpZHRoOiAxMDAlO1xuICAgfVxuICAgYnV0dG9uIHtcblx0ICAgcGFkZGluZzogMTBweCAyMHB4O1xuXHQgICBtYXJnaW46IDEwcHg7XG5cdCAgIGJvcmRlcjogYmxhY2sgc29saWQgMHB4O1xuXHQgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICB9XG4gICAjYWxlcnQge1xuICAgICAgIGNvbG9yOiByZWQ7XG4gICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgfVxuICAgI25vdC1jb3ZlcmVkIHtcbiAgICAgICBjb2xvcjogcmVkO1xuICAgICAgIGJhY2tncm91bmQ6ICNGRkVFRUU7XG4gICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgIGJvcmRlcjogbm9uZTtcbiAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cbiBpbXBvcnQgeyBzbGlkZSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJztcbmltcG9ydCB7IHF1aW50T3V0LCBxdWludEluIH0gZnJvbSAnc3ZlbHRlL2Vhc2luZyc7XG4gICAgIGNvbnN0IHF1aXpTdGVwcyA9ICBbXG4gICAgICAgIHsgaWQ6ICdxMScsIG5hbWU6ICdXZWJjYW0gQ2hhbGxlbmdlJywgdGltZTogJzJtaW5zJywgZGVzY3JpcHRpb246XCJJZiB5b3VyIGNvbXB1dGVyIGhhcyBhIGJ1aWx0LWluIGNhbWVyYSwgYWxzbyBrbm93biBhcyBhIHdlYmNhbSwgeW91IHNob3VsZCBrbm93IHRoYXQgaXQgY2FuIGJlIHVzZWQgdG8gc3B5IG9uIHlvdS4gQW5kIG5vLCB0aGlzIGlzIG5vdCBqdXN0IHNjaWVuY2UgZmljdGlvbiBhcyBhIHJlY2VudCBzdXJ2ZXkgY29uZHVjdGVkIGJ5IEhQIHNob3dzIHRoYXQgMTAlIGluIHRoZSBVLlMuIGVpdGhlciBrbm93IHNvbWVvbmUgd2hvc2Ugd2ViY2FtIHdhcyBoYWNrZWQgb3IgaGF2ZSBoYWQgdGhlaXIgb3duIHdlYmNhbSBoYWNrZWQuIEluIHRoaXMgY2hhbGxlbmdlLCB3ZSBhcmUgZ29pbmcgdG8gd2FsayB5b3UgdGhyb3VnaCB0aGUgYmVzdCBwcmFjdGljZSB0byBhdm9pZCB0aGlzIHJpc2suXCJ9LFxuICAgICAgICB7IGlkOiAncTInLCBuYW1lOiAnQnJvd3NlciBDaG9pY2UnLCB0aW1lOiAnM21pbnMnfSxcbiAgICAgICAgeyBpZDogJ3EzJywgbmFtZTogJ1ByaXZhY3kgU2V0dGluZycsIHRpbWU6ICc0bWlucyd9LFxuICAgICAgICB7IGlkOiAncTQnLCBuYW1lOiAnSHR0cHMgZXZlcnl3aGVyZScsIHRpbWU6ICc0bWlucyd9LFxuICAgICAgICB7IGlkOiAncTUnLCBuYW1lOiAnTG9jYXRpb24gU2VydmljZXMgKHBob25lIG5lZWRlZCknLCB0aW1lOiAnM21pbnMnfSxcbiAgICAgICAgeyBpZDogJ3E2JywgbmFtZTogJ1RyYWNrZXIgYmxvY2tlcicsIHRpbWU6ICczbWlucyd9LFxuICAgICAgICB7IGlkOiAncTcnLCBuYW1lOiAnbG9jYXRpb24gVHJhY2tpbmcnLCB0aW1lOiAnMW1pbnMnfSxcbiAgICAgICAgeyBpZDogJ3E4JywgbmFtZTogJ01vYmlsZSBrZXlib2FyZCcsIHRpbWU6ICc1bWlucyd9LFxuICAgICAgICB7IGlkOiAncTknLCBuYW1lOiAnTWVzc2VuZ2VyIHBsYXRmb3JtJywgdGltZTogJzJtaW5zJ30sXG4gICAgICAgIHsgaWQ6ICdxMTAnLCBuYW1lOiAnaW90JywgdGltZTogJzJtaW5zJ31cbiAgICAgXVxuICAgIGxldCBhY3RpdmUgPSB0cnVlO1xuICAgICBmdW5jdGlvbiBoYW5kbGVNb3VzZVNob3coKXtcbiAgICAgICAgYWN0aXZlID0gZmFsc2U7XG5cbiAgICAgfVxuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5RdWl6IE92ZXJ2aWV3PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48ZGl2IHRyYW5zaXRpb246c2xpZGU9XCJ7e2RlbGF5OiAxMDAsIGR1cmF0aW9uOiA0MDAsIGVhc2luZzogcXVpbnRPdXR9fVwiID5cbjxoMj5UaGlzIHRlc3QgY29udGFpbnMgMTAgdW5pcXVlIHByaXZhY3kgdGVzdHMgdGhhdCB3aWxsIHRha2UgeW91IGFib3V0IDMwIG1pbnV0ZXMgdG8gY29tcGxldGUuIFRocm91Z2h0IHRoZSB0ZXN0LCB3ZSB3aWxsIHByb3ZpZGUuLi48L2gyPlxuPGRpdj5cbiAgICB7I2VhY2ggcXVpelN0ZXBzIGFzIHtpZCwgbmFtZSwgdGltZSwgZGVzY3JpcHRpb259LCBpfVxuICAgIDxkaXYgY2xhc3M9J251bSc+e2l9e25hbWV9ICh7dGltZX0pPC9kaXY+PGRpdiBjbGFzczphY3RpdmU9e2FjdGl2ZX0+e2Rlc2NyaXB0aW9ufTwvZGl2PlxuICAgIHsvZWFjaH1cbjwvZGl2PlxuPC9kaXY+XG48c3R5bGU+XG4gICAgLm51bSB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwMHB4O1xuICAgICBcbiAgICB9XG4gICAgZGl2IHtcbiAgICAgICAgY29sb3I6YmxhY2s7XG4gICAgfVxuICAgIC5hY3RpdmUge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgXG48L3N0eWxlPiIsIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgb25Nb3VudCwgYmVmb3JlVXBkYXRlLCBhZnRlclVwZGF0ZSwgb25EZXN0cm95IH0gZnJvbSAnc3ZlbHRlJztcbiAgICBpbXBvcnQgVmlkIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVmlkLnN2ZWx0ZSdcbiAgICBpbXBvcnQgVHJhbnMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9UcmFuc0hlbHAuc3ZlbHRlJztcbiAgICBpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnXG5cdGltcG9ydCBCdG4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdG4uc3ZlbHRlJyAvL3NldCA8TmV4dCBxPXsyfT4gdG8gc2tpcCBtdWx0aXBsZSBzdGVwc1xuICAgIGltcG9ydCB7IGNvdW50LCBzdGVwLCBxdWl6U3RlcHMsIHRpbWVyQWN0aXZlLCBwcm9ncmVzc30gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG4gICAgaW1wb3J0IEJhY2sgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CYWNrLnN2ZWx0ZSdcblxuICAgIC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuICAgb25Nb3VudChhc3luYygpID0+IHtcbiAgICAgICAgJHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDE7XG4gICAgICAgIHRpbWVyQWN0aXZlLnNldCghJHRpbWVyQWN0aXZlKX0pO1xuICAgIC8vU3RhcnQgVmlkZW8gb24gdXBkYXRlXG4gICAgLypcbiAgICBsZXQgdmlkZW87XG5cdGFmdGVyVXBkYXRlKGFzeW5jKCkgPT4ge1xuXHR2aWRlbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdmlkZW9FbGVtZW50XCIpO1xuXHRpZiAobmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpIHtcbiAgXHRuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7IHZpZGVvOiB0cnVlIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24gKHN0cmVhbSkge1xuXHRcdFx0dmlkZW8uc3JjT2JqZWN0ID0gc3RyZWFtO1xuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIwcikge1xuICAgICAgY29uc29sZS5sb2coXCJOb3QgbG9hZGVkXCIpO1xuICAgIH0pO1xuXHRcdH1cbn0pXG4vL3N0b3AgdmlkZW8gZnVuY3Rpb24gb24gZW5kIG9mIGNvbXBvbmVudCAgIFxuICAgb25EZXN0cm95KGFzeW5jKCkgPT4geyBcbiAgICAgICAgZnVuY3Rpb24gc3RvcFN0cmVhbWVkVmlkZW8odmlkZW8pIHsgXG4gICAgICAgICAgICBjb25zdCBzdHJlYW0gPSB2aWRlby5zcmNPYmplY3Q7XG4gICAgICAgICAgICBjb25zdCB0cmFja3MgPSBzdHJlYW0uZ2V0VHJhY2tzKCk7XG4gICAgICAgICAgICAgICAgdHJhY2tzLmZvckVhY2godCA9PiB0LnN0b3AoKSk7XG4gICAgICAgICAgICAgICAgc3RyZWFtID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy92aWRlby5zcmNPYmplY3QgPSBudWxsO1xuICAgICAgICAgICAgfSk7Ki9cbjwvc2NyaXB0PlxuPHN2ZWx0ZTpoZWFkPlxuXHQ8dGl0bGU+V2ViY2FtIENoYWxsZW5nZTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPFRyYW5zPlxuXG57I2lmICRzdGVwPT0wfVxuPHNlY3Rpb24+XG5cdDxoMj5JcyB5b3VyIFdlYmNhbSBDb3ZlcmVkPzwvaDI+IFxuICAgIDxwPkl04oCZcyBsaWtlbHkgeW91ciBjb21wdXRlciBhbHJlYWR5IGhhcyBhIGJ1aWx0LWluIGNhbWVyYSwgYW5kIGl04oCZcyBwb3NzaWJsZSBmb3IgdGhhdCBjYW1lcmEgdG8gYmUgdXNlZCB0byBzcHkgb24geW91LjwvcD4gIDxwPklmIHlvdXIgd2ViY2FtIGZvciB3aGF0ZXZlciByZWFzb24gaGFzIGJlZW4gaGFja2VkLCB0aGUgcGVyc29uIG9uIHRoZSBvdGhlciBzaWRlIGNhbiB0YWtlIHBpY3R1cmVzIGFuZCB2aWRlbyBvZiBhbnl0aGluZyBvciBhbnlvbmUuIE5vLCB0aGlzIGlzbuKAmXQganVzdCBwYXJhbm9pYeKAk2EgcmVjZW50IHN1cnZleSBjb25kdWN0ZWQgYnkgSFAgZm91bmQgdGhhdCAxMCUgaW4gdGhlIFUuUy4gZWl0aGVyIGtub3cgc29tZW9uZSB3aG9zZSB3ZWJjYW0gd2FzIGhhY2tlZCBvciBoYXZlIGhhZCB0aGVpciBvd24gd2ViY2FtIGhhY2tlZC48L3A+XG4gICAgPEJ0biBwPXs0Ljc1fSBncmVlbj17dHJ1ZX0+Q29udGludWU8L0J0bj5cbjwvc2VjdGlvbj5cbns6ZWxzZSBpZiAkc3RlcD09MX1cbjxzZWN0aW9uPlxuXHQ8aDI+Q292ZXIgWW91ciBXZWJjYW08L2gyPlxuXHQ8cD5Db3ZlciB5b3VyIHdlYmNhbS4gWW91IGNhbiBmaW5kIHJlbW92YWJsZSBzdGlja2VycyBmb3IgdGhpcyBwdXJwb3NlLCBidXQgc2ltcGxlIGZpeGVzIGNhbiBiZSBmb3VuZCBhdCB5b3VyIGhvbWUgb3Igb2ZmaWNlLiBZb3UgY2FuIHVzZSBhIHN0aWNreSBub3RlIG9yICBhIHBpZWNlIG9mIG1hc2tpbmcgdGFwZSB0byBvYnNjdXJlIHlvdXIgd2ViY2FtIHdoZW4gaXTigJlzIG5vdCBpbiB1c2UuIExpa2UgcmlnaHQgbm93LiA8L3A+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG4gICAgICAgIDxCdG4gcD17NC43NX0+SXQncyBjb3ZlcmVkPC9CdG4+XG4gICAgICAgIDxDb21wbGV0ZSBzdWNjZXNzPXtmYWxzZX0gcD17OC41fT5ObyBUaGFua3MsIEl0J3MgYSBoYXNzbGU8L0NvbXBsZXRlPiBcblx0PC9kaXY+XG48L3NlY3Rpb24+XG57OmVsc2UgaWYgJHN0ZXA9PTJ9XG48c2VjdGlvbj5cbiAgIDxkaXYgY2xhc3M9XCJ2aWRlby1ob2xkZXJcIj5cbiAgICAgICA8VmlkPjwvVmlkPlxuICAgIDwvZGl2PlxuICAgIDxwIGlkPVwiYWxlcnRcIj5Db3ZlciB5b3VyIHdlYmNhbTwvcD5cbiAgICA8cCBpZD1cIm5vdC1jb3ZlcmVkXCI+WW91IGhhdmVu4oCZdCBjb3ZlcmVkIHlvdXIgd2ViY2FtZSBvciBkaWQgbm90IGRvIGl0IHByb3Blcmx5LiBQbGVhc2UgY292ZXIgeW91ciB3ZWJjYW0gY29tcGxldGVseSB0byBwcm9jZWVkIHRvIHRoZSBuZXh0IHN0ZXAuPC9wPlxuICAgIDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG4gICAgPENvbXBsZXRlIHA9ezQuNzV9IGdyZWVuPXt0cnVlfT5cbiAgICAgICAgT253YXJkcyB0byB0aGUgbmV4dCBjaGFsbGVuZ2VcbiAgICA8L0NvbXBsZXRlPlxuICAgIDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlfVxuPHNlY3Rpb24+XG4gICAgPFZpZD48L1ZpZD5cbiAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuICAgIDxDb21wbGV0ZSBwPXs0Ljc1fSBncmVlbj17dHJ1ZX0+XG4gICAgICAgIE9ud2FyZHMgdG8gdGhlIG5leHQgY2hhbGxlbmdlXG4gICAgPC9Db21wbGV0ZT5cbiAgICA8L2Rpdj5cbjwvc2VjdGlvbj5cbnsvaWZ9XG5cbjxCYWNrLz5cbjwvVHJhbnM+XG48c3R5bGU+XG4gICAudmlkZW8taG9sZGVye1xuICAgICAgIHdpZHRoOiAxMDAlO1xuICAgfVxuICAgI2FsZXJ0IHtcbiAgICAgICBjb2xvcjogcmVkO1xuICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgIH1cbiAgICNub3QtY292ZXJlZCB7XG4gICAgICAgY29sb3I6IHJlZDtcbiAgICAgICBiYWNrZ3JvdW5kOiAjRkZFRUVFO1xuICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICBib3JkZXI6IG5vbmU7XG4gICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IG9uTW91bnQsIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuXHRpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnIC8vc2V0IHN1Y2Nlc3M9e2ZhbHNlfSBmb3IgZmFpbHVyZVxuXHRpbXBvcnQgQnRuIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQnRuLnN2ZWx0ZScgLy9zZXQgPE5leHQgcT17Mn0+IHRvIHNraXAgbXVsdGlwbGUgc3RlcHNcblx0aW1wb3J0IHsgY291bnQsIHN0ZXAsIHF1aXpTdGVwcyB9IGZyb20gJy4uLy4uL3N0b3JlLmpzJ1xuXHRpbXBvcnQgQmFjayBmcm9tICcuLi8uLi9jb21wb25lbnRzL0JhY2suc3ZlbHRlJ1xuXG4gICAgIC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuXHRvbk1vdW50KGFzeW5jKCkgPT4geyRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxfSk7XG5cdGxldCBkaXNhYmxlZCA9IGZhbHNlO1xuXHRmdW5jdGlvbiBkaXNhYmxlKCkge1xuXHRcdGRpc2FibGVkPSB0cnVlO1xuXHRcdGNvbnNvbGUubG9nKGRpc2FibGVkKTtcblx0fVxuXHRjb25zb2xlLmxvZyhkaXNhYmxlZCk7XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkh0dHBzIEV2ZXJ5d2hlcmU8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxUcmFucz5cbnsjaWYgJHN0ZXAgPT0gMH1cbjxzZWN0aW9uPlxuXHQ8aDI+SXMgeW91ciBpbmZvcm1hdGlvbiBlbmNyeXB0ZWQgYW5kIHNlY3VyZT88L2gyPiBcblx0PHA+SFRUUCBzdGFuZHMgZm9yIGh5cGVydGV4dCB0cmFuc2ZlciBwcm90b2NvbC4gSXTigJlzIGEgcHJvdG9jb2wgdGhhdCBhbGxvd3MgdGhlIHRyYW5zZmVycmluZyBvZiBkYXRhIGZyb20gYSB3ZWIgc2VydmVyIHRvIGEgYnJvd3NlciB0byB2aWV3IHdlYiBwYWdlcy48L3A+XG5cdDxwPlRoZSBwcm9ibGVtIGlzIHRoYXQgdGhlIGRhdGEgdHJhbnNmZXJyZWQgYnkgSFRUUCBpcyBub3QgZW5jcnlwdGVkLCBhbmQgaXQgY2FuIGJlIGludGVyY2VwdGVkIGJ5IHRoaXJkIHBhcnRpZXMgdG8gdmlldyB0aGUgZGF0YSBiZWluZyBwYXNzZWQgYmV0d2VlbiB0aGUgdHdvIHN5c3RlbXMuIFRoaXMgY2FuIGJlIGFkZHJlc3NlZCBieSB1c2luZyBhIHNlY3VyZSB2ZXJzaW9uIGNhbGxlZCBIVFRQUywgd2hlcmUgdGhlIFwiU1wiIHN0YW5kcyBmb3Igc2VjdXJlLjwvcD5cblx0PHA+VXNpbmcgIEhUVFBTICBpcyBlc3BlY2lhbGx5IGltcG9ydGFudCBmb3Igc2l0ZXMgdGhhdCB0cmFuc21pdCBzZW5zaXRpdmUgZGF0YSwgbGlrZSBlY29tbWVyY2Ugc2l0ZXMgdGhhdCBhY2NlcHQgb25saW5lIGNhcmQgcGF5bWVudHMsIG9yIGxvZ2luIGFyZWFzIHRoYXQgcmVxdWlyZSB1c2VycyB0byBlbnRlciB0aGVpciBjcmVkZW50aWFscy48L3A+XG5cblx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8QnRuIGdyZWVuPXt0cnVlfT5Db250aW51ZTwvQnRuPlxuXHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbns6ZWxzZX1cbjxzZWN0aW9uPlxuXHQ8aDI+RG93bmxvYWQgSFRUUFMgRXZlcnl3aGVyZSBleHRlbnNpb248L2gyPlxuXHQ8cD5MdWNraWx5LCB0aGUgRWxlY3Ryb25pYyBGcm9udGllciBGb3VuZGF0aW9uIGhhcyBjcmVhdGVkIGEgc21hcnQgZXh0ZW5zaW9uIHRoYXQgcmV3cml0ZXMgd2Vic2l0ZSByZXF1ZXN0cyB0byBIVFRQUy4gV2l0aCBIVFRQUywgdGhlIGludGVybmV0IHRyYWZmaWMgYmV0d2VlbiB5b3VyIGRldmljZSBhbmQgdGhlIHNlcnZlciBob3N0aW5nIHlvdXIgd2Vic2l0ZSBjYW7igJl0IGJlIHNlZW4gYnkgcHJ5aW5nIGV5ZXMuPC9wPlxuXG48ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHQ8YSBocmVmPSdodHRwczovL3d3dy5lZmYub3JnL2h0dHBzLWV2ZXJ5d2hlcmUnIHRhcmdldD1cIl9ibGFua1wiPjxidXR0b24gb246Y2xpY2t8b25jZT0ne2Rpc2FibGV9JyBkaXNhYmxlZD0ne2Rpc2FibGVkfSc+RG93bmxvYWQgZXh0ZW5zaW9uIG5vd1xuXHQ8L2J1dHRvbj48L2E+XG5cdDxDb21wbGV0ZT5cblx0XHR7I2lmICFkaXNhYmxlZH1cblx0XHRBbHJlYWR5IEhhdmUgaXRcblx0XHR7OmVsc2V9XG5cdFx0SnVzdCBkb3dubG9hZGVkIGl0XG5cdFx0ey9pZn1cblx0PC9Db21wbGV0ZT5cblx0PENvbXBsZXRlIHN1Y2Nlc3M9e2ZhbHNlfT5cblx0XHRObyBUaGFua3Ncblx0PC9Db21wbGV0ZT5cblx0XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuey9pZn1cbjxCYWNrLz5cbjwvVHJhbnM+XG48c3R5bGU+XG4gICAuYnV0dG9uLWhvbGRlciB7XG5cdHdpZHRoOiAyN3Z3O1xuXHRkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgIH1cbiAgIGJ1dHRvbiB7XG5cdCAgIHBhZGRpbmc6IDEwcHggMjBweDtcblx0ICAgbWFyZ2luOiAxMHB4O1xuXHQgICBib3JkZXI6IGJsYWNrIHNvbGlkIDBweDtcblx0ICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgfVxuICAgYSB7XG5cdCAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgIH1cbiAgIFxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuXHRpbXBvcnQgeyBvbk1vdW50LCBhZnRlclVwZGF0ZSB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdC8vaW1wb3J0IENvbXBsZXRpb24gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Db21wbGV0aW9uLnN2ZWx0ZSdcblx0aW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG5cdCBcblx0aW1wb3J0IENvbXBsZXRlIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvY29tcGxldGUuc3ZlbHRlJyAvL3NldCBzdWNjZXNzPXtmYWxzZX0gZm9yIGZhaWx1cmVcblx0aW1wb3J0IEJ0biBmcm9tICcuLi8uLi9jb21wb25lbnRzL0J0bi5zdmVsdGUnIC8vc2V0IDxOZXh0IHE9ezJ9PiB0byBza2lwIG11bHRpcGxlIHN0ZXBzXG5cdGltcG9ydCB7IGNvdW50LCBzdGVwLCBxdWl6U3RlcHMgfSBmcm9tICcuLi8uLi9zdG9yZS5qcydcblx0aW1wb3J0IEJhY2sgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CYWNrLnN2ZWx0ZSdcblxuXHRvbk1vdW50KGFzeW5jKCkgPT4geyRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxO1xuXHRcdH0pO1xuXHRsZXQgbWFjID0gZmFsc2U7XG5cdGxldCBwYyA9IGZhbHNlO1xuXHQ8L3NjcmlwdD5cblx0PHN2ZWx0ZTpoZWFkPlxuXHRcdDx0aXRsZT5TZWFyY2ggRW5naW5lPC90aXRsZT5cblx0PC9zdmVsdGU6aGVhZD5cblx0XG5cdDxUcmFucz5cblx0XHQ8c2VjdGlvbj5cblx0eyNpZiAkc3RlcD09MH0gXG5cdFx0PGgxPkNoYW5nZSBZb3VyIFNlYXJjaDwvaDE+XG5cdFx0PHA+SG93IGFyZSB5b3Ugc2VhcmNoaW5nIGZvciBpbmZvcm1hdGlvbj8gPC9wPlxuXHRcdDxwPlVzaW5nIGEgc2VhcmNoIGVuZ2luZSBjYW4gZGlzY2xvc2UgaGlnaGx5IHBlcnNvbmFsIGluZm9ybWF0aW9uIGFib3V0IHlvdSwgc3VjaCBhcyBtZWRpY2FsIGlzc3VlcywgZW1wbG95bWVudCBzdGF0dXMsIGZpbmFuY2lhbCBpbmZvcm1hdGlvbiwgcG9saXRpY2FsIGJlbGllZnMsIGFuZCBvdGhlciBwcml2YXRlIGRldGFpbHMuIFRoaXMgZGF0YSwgb2YgY291cnNlLCBjYW4gYmUgY29sbGVjdGVkLCBzdG9yZWQsIGFuZCBsaW5rZWQgdG8geW91ciBkYXRhIHByb2ZpbGUgKGFuZCB5b3VyIHJlYWwgaWRlbnRpdHkpLiBUaGUgb25seSB3YXkgdG8gZWZmZWN0aXZlbHkg4oCcb3B0IG91dOKAnSBpcyB0byBrZWVwIHlvdXIgZGF0YSBzYWZlIGFuZCBvdXQgb2YgdGhlIGhhbmRzIG9mIHRoZSBkYXRhIGNvbGxlY3RvcnMuPC9wPlxuXHRcdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG5cdFx0XHQ8QnRuIHllbGxvdz17dHJ1ZX0+IGNvbnRpbnVlPC9CdG4+XG5cdFx0PC9kaXY+XG5cdHs6ZWxzZX1cblx0XG5cdFx0XHQ8aDE+VXNlIGFsdGVybmF0aXZlIHNlYXJjaCBlbmdpbmU8L2gxPlxuXHRcdFx0PHA+UHJvdGVjdCB5b3VyIHByaXZhY3kgd2hpbGUgeW91IHNlYXJjaCB1c2luZyBhbiBhbHRlcm5hdGl2ZSBzZWFyY2ggZW5naW5lIHdoZW4geW91IG5lZWQgdG8gZmluZCBzb21ldGhpbmcgb24gdGhlIGludGVybmV0LiBUaGlzIGlzbuKAmXQgYXMgaGFyZCBhc3lvdSBtaWdodCB0aGluayBhcyB0aGVyZSBhcmUgc29tZSBjb21wZXRpdGl2ZSBhbHRlcm5hdGl2ZXMgbm93IHRoYXQgZG9u4oCZdCBjb2xsZWN0IG9yIHNoYXJlIHlvdXIgcGVyc29uYWwgaW5mb3JtYXRpb24g4oCUIHdlIGxpa2UgRHVja0R1Y2tHbyBhcyBhbiBleHRlbnNpb24gZm9yIHNlYXJjaGVzLCBidXQgaWYgeW914oCZZCBsaWtlIHRvIHNlYXJjaCBmb3Igb3RoZXIgc2VhcmNoIGVuZ2luZXMgPGEgaHJlZj1cImh0dHBzOi8vcmVzdG9yZXByaXZhY3kuY29tL3ByaXZhdGUtc2VhcmNoLWVuZ2luZS9cIj5oZXJlIGFyZSBhIGZldyBvcHRpb25zPC9hPi5cblx0XHRcdFxuXHRcdDxkaXYgY2xhc3M6bWFjIG9uOmNsaWNrPVwieygpID0+IG1hYyA9ICFtYWN9XCI+XG5cdFx0XHQ8ZGl2IGNsYXNzPVwiY2FyZXRcIj5cblx0XHRcdFx0PHA+Q2hhbmdlIHlvdXIgZGVmdWFsdCBzZWFyY2ggZW5naW5lIGZvciBNYWMgPC9wPlxuXHRcdFx0XHRcdDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuXHRcdFx0XHRcdDxwYXRoIGQ9XCJNMTguODg1IDdMMTIgMTMuNzk4OUw1LjExNSA3TDMgOS4wOTMxMkwxMiAxOEwyMSA5LjA5MzEyTDE4Ljg4NSA3WlwiIGZpbGw9XCJ3aGl0ZVwiLz5cblx0XHRcdFx0XHQ8L3N2Zz5cblx0XHRcdDwvZGl2PlxuXHRcdFx0eyNpZiBtYWN9XG5cdFx0XHRcdDxvbD5cblx0XHRcdFx0XHQ8bGk+Q2hvb3NlIFN5c3RlbSBQcmVmZXJlbmNlcyBmcm9tIHRoZSBBcHBsZSAoKSBtZW51LjwvbGk+XG5cdFx0XHRcdFx0PGxpPkNsaWNrIEdlbmVyYWw8L2xpPlxuXHRcdFx0XHRcdDxsaT5DaG9vc2UgeW91ciB3ZWIgYnJvd3NlciBmcm9tIHRoZSDigJ1EZWZhdWx0IHdlYiBicm93c2Vy4oCdIHBvcC11cCBtZW51LjwvbGk+XG5cdFx0XHRcdDwvb2w+XG5cdFx0XHR7L2lmfVxuXHRcdDwvZGl2PlxuXHRcdDxocj5cblx0XHQgPGRpdiBjbGFzczpwYyBvbjpjbGljaz1cInsoKSA9PiBwYyA9ICFwY31cIj5cblx0XHRcdDxkaXYgY2xhc3M9XCJjYXJldFwiPlxuXHRcdFx0PHA+Q2hhbmdlIHlvdXIgZGVmdWFsdCBzZWFyY2ggZW5naW5lIGZvciBXaW5kb3dzIDwvcD48c3ZnIHdpZHRoPVwiMjRcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbjxwYXRoIGQ9XCJNMTguODg1IDdMMTIgMTMuNzk4OUw1LjExNSA3TDMgOS4wOTMxMkwxMiAxOEwyMSA5LjA5MzEyTDE4Ljg4NSA3WlwiIGZpbGw9XCJ3aGl0ZVwiLz5cbjwvc3ZnPjwvZGl2PlxuXHRcdFx0eyNpZiBwY31cblx0XHRcdDxvbD5cblx0XHRcdFx0XHQ8bGk+U2VsZWN0IHRoZSBTdGFydCAgYnV0dG9uLCBhbmQgdGhlbiB0eXBlIERlZmF1bHQgYXBwcy48L2xpPlxuXHRcdFx0XHRcdDxsaT5JbiB0aGUgc2VhcmNoIHJlc3VsdHMsIHNlbGVjdCBEZWZhdWx0IGFwcHMuPC9saT5cblx0XHRcdFx0XHQ8bGk+VW5kZXIgV2ViIGJyb3dzZXIsIHNlbGVjdCB0aGUgYnJvd3NlciBjdXJyZW50bHkgbGlzdGVkLCBhbmQgdGhlbiBzZWxlY3QgTWljcm9zb2Z0IEVkZ2Ugb3IgYW5vdGhlciBicm93c2VyLjwvbGk+XG5cdFx0XHQ8L29sPlxuICAgIFx0XHR7L2lmfVxuXHRcdDwvZGl2PlxuXHRcdDxocj5cblx0XHQ8ZGl2PlxuXHRcdCAgIDxwPjxhIGhyZWY9XCJodHRwczovL2Nocm9tZS5nb29nbGUuY29tL3dlYnN0b3JlL2RldGFpbC9kdWNrZHVja2dvLXByaXZhY3ktZXNzZW50L2JrZGdmbGNsZG5ubmFwYmxraHBoYmdwZ2dkaWlrcHBnXCIgdGFyZ2V0PVwiX2JsYW5rXCI+T3IgeW91IGNhbiBkb3dubG9hZCB0aGUgRHVja0R1Y2tHbyBFeHRlbnNpb24gaGVyZTwvYT48L3A+XG5cdFx0PC9kaXY+XG5cdFx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHRcdDxDb21wbGV0ZT5cbiAgICAgICAgXHRcdFNlYXJjaCBFbmdpbmUgQ2hhbmdlZFxuXHRcdFx0PC9Db21wbGV0ZT5cblx0XHRcdDxDb21wbGV0ZSBzdWNjZXNzPXtmYWxzZX0+XG4gICAgICAgIFx0XHRObyBUaGFua3NcbiAgICBcdFx0PC9Db21wbGV0ZT5cblx0XHQ8L2Rpdj5cblx0XHR7L2lmfVxuXHQ8L3NlY3Rpb24+XG5cdFx0PEJhY2svPlxuXHQ8L1RyYW5zPlxuXHRcdFxuXHRcdFxuXHQ8c3R5bGU+XG5cdFx0LmNhcmV0e1xuXHRcdFx0ZGlzcGxheTogZmxleDtcblx0XHRcdGZsZXgtZmxvdzogcm93IG5vd3JhcDtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cdFx0fVxuXHRcdGEge1xuXHRcdFx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG5cdFx0fVxuXHQ8L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCB7IG9uTW91bnQsIGFmdGVyVXBkYXRlIH0gZnJvbSAnc3ZlbHRlJztcblx0aW1wb3J0IERldGVjdCBmcm9tICcuLi8uLi9jb21wb25lbnRzL0RldGVjdC5zdmVsdGUnXG5cdGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuXHRpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnIC8vc2V0IHN1Y2Nlc3M9e2ZhbHNlfSBmb3IgZmFpbHVyZVxuXHRpbXBvcnQgQnRuIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQnRuLnN2ZWx0ZScgLy9zZXQgPE5leHQgcT17Mn0+IHRvIHNraXAgbXVsdGlwbGUgc3RlcHNcblx0aW1wb3J0IHsgY291bnQsIHN0ZXAsIHF1aXpTdGVwcyB9IGZyb20gJy4uLy4uL3N0b3JlLmpzJ1xuXHRpbXBvcnQgQmFjayBmcm9tICcuLi8uLi9jb21wb25lbnRzL0JhY2suc3ZlbHRlJ1xuXG5cdC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuICAgIG9uTW91bnQoYXN5bmMoKSA9PiB7JHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDF9KTtcblx0Ly9jb25maXJtIGNvbWxldGlvbiBvZiBxdWl6IHRvIG1hc3RlciBxdWl6IGNvbXBvbmVudFxuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5RdWVzdGlvbiA0OiBQcml2YWN5IFNldHRpbmdzPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48VHJhbnM+XG57I2lmICRzdGVwPT0wfVxuPHNlY3Rpb24+XG5cdDxoMT5Qcml2YWN5IHNldHRpbmdzIC0gM3JkIHBhcnR5IGNvb2tpZXM8L2gxPlxuXHQ8aDI+V2FudCBzb21lIGNvb2tpZXM/PC9oMj5cblx0PHA+V2VsbCwgbm90IHRoYXQga2luZCBvZiBjb29raWUuPC9wPlxuXHQ8cD5Db29raWVzIGFyZSBzbWFsbCBmaWxlcyB0aGF0IGFyZSBzdG9yZWQgb24geW91ciBjb21wdXRlciBhbmQgY2FycnkgaW5mb3JtYXRpb24gZnJvbSBvbmUgc2Vzc2lvbiBvbiBhIHdlYnNpdGUgdG8gYW5vdGhlci4gVXN1YWxseSwgdGhlIHdlYnNpdGUgdGhhdCBzZXRzIGEgY29va2llIGlzIHRoZSBvbmx5IG9uZSB0aGF0IHJlYWRzIHRoZSBjb29raWUuIEhvd2V2ZXIsIHRoaXJkLXBhcnR5IGNvb2tpZXMgY2FuIGJlIHNldCBieSBvbmUgd2Vic2l0ZSBhbmQgcmVhZCBieSBhbm90aGVyLiBUaGlyZC1wYXJ0eSBjb29raWVzIGFyZSB1c2VkIGJ5IHNlcnZlcnMgdGhhdCBkZWxpdmVyIGFkdmVydGlzZW1lbnRzIGFuZCB0aG9zZSBhbm5veWluZyBwb3AtdXAgYW5kIHBvcC11bmRlciBhZHMuPC9wPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxCdG4geWVsbG93PXt0cnVlfT5Db250aW51ZTwvQnRuPlxuXHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbns6ZWxzZX1cbjxzZWN0aW9uPlxuXHQ8aDI+R2l2ZSAzcmQgcGFydHkgY29va2llcyB0aGUgYm9vdCBieSBtYW5hZ2luZyB5b3VyIGJyb3dzZXIgc2V0dGluZ3M6PC9oMj5cblx0PERldGVjdCAvPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiIGlkPSdjb29raWUtYnV0dG9ucyc+XG5cdFx0PGgzPkRpZCB5b3UgZGlzYWJsZSB0cmFja2luZyBjb29raWVzPzwvaDM+XG5cdFx0PENvbXBsZXRlPll1cDwvQ29tcGxldGU+XG5cdFx0PENvbXBsZXRlIHN1Y2Nlc3M9e2ZhbHNlfT5ObywgSSBkb24ndCBtaW5kIHRoZW0gZm9sbG93aW5nIG1lPC9Db21wbGV0ZT5cblx0PC9kaXY+XG48L3NlY3Rpb24+XG57L2lmfVxuPEJhY2svPlxuPC9UcmFucz5cbjxzdHlsZT5cbiAgIC5idXR0b24taG9sZGVyIHtcblx0d2lkdGg6IDI3dnc7XG5cdGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICAgfVxuICAgI2Nvb2tpZS1idXR0b25ze1xuXHQgICBtYXJnaW46IDQwcHggMHB4IDBweCAwcHg7XG4gICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IG9uTW91bnQsIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuXHRpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnXG5cdGltcG9ydCBCdG4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdG4uc3ZlbHRlJyAvL3NldCA8TmV4dCBxPXsyfT4gdG8gc2tpcCBtdWx0aXBsZSBzdGVwc1xuXHRpbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG5cdGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cblx0Ly9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG5cdG9uTW91bnQoYXN5bmMoKSA9PiB7JHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDF9KTtcblx0bGV0IGRpc2FibGVkID0gZmFsc2U7XG5cdGZ1bmN0aW9uIGRpc2FibGUoKSB7XG5cdFx0ZGlzYWJsZWQ9IHRydWU7XG5cdFx0Y29uc29sZS5sb2coZGlzYWJsZWQpO1xuXHR9XG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPlRyYWNrZXIgYmxvY2tlcjwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuPFRyYW5zPlxueyNpZiAkc3RlcD09MH1cbjxzZWN0aW9uPlxuXHQ8aDI+VHJhY2tlciBibG9ja2VyOiBQcml2YWN5IEJhZGdlcjwvaDI+IFxuXHQ8cD5BcmUgeW91IGJlaW5nIHRyYWNrZWQgb24gdGhlIHdlYj8gQWxtb3N0IGRlZmluaXRlbHkuIFxuXHRcdFRyYWNrZXJzIGFyZSBpbnN0YWxsZWQgb24gbWFueSB3ZWJzaXRlcyB0byBsb2cgeW91ciBiZWhhdmlvci4gV2hpbGUgY29va2llcyBhcmUgdGhlIGxpdHRsZSBpZGVudGlmaWVycyBmb3Igd2Vic2l0ZXMgdG8gcmVjb2duaXplIHlvdSB0aHJvdWdoIG11bHRpcGxlIHZpc2l0cywgdHJhY2tlcnMgdXNlIHRob3NlIGNvb2tpZXMgdG8gYW5hbHl6ZSB5b3VyIGJlaGF2aW9yIGFuZCBidWlsZCB0aGVpciB2YWx1YWJsZSB1c2VyIHByb2ZpbGVzLiBUcmFja2VycyB3aWxsIGxvZyB0aGUgc2l0ZSB5b3UgdmlzaXQsIHRoZSBkYXRlIGFuZCB0aW1lLCBhbmQgeW91ciBjb21wdXRlciBzZXR0aW5ncyAobW9yZSBwb3dlcmZ1bCB0cmFja2VycyBjYW4gZXZlbiB3YXRjaCB5b3VyIG1vdXNlIG1vdmVtZW50KSBhbGwgb2YgdGhpcyB3aXRob3V0IHlvdXIgY29uc2VudC48L3A+XG5cdFx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHRcdDxCdG4geWVsbG93PXt0cnVlfT5Db250aW51ZTwvQnRuPlxuXHRcdDwvZGl2PlxuPC9zZWN0aW9uPlxuezplbHNlfVxuPHNlY3Rpb24+XG5cdDxoMj5JbnN0YWxsIHRoZSBQcml2YWN5IEJhZGdlciBleHRlbnNpb24uPC9oMj5cblx0PHA+UHJpdmFjeSBCYWRnZXIgaXMgYSBmcmVlIGFuZCBvcGVuLXNvdXJjZSBicm93c2VyIGV4dGVuc2lvbiBmb3IgR29vZ2xlIENocm9tZSwgTW96aWxsYSBhbmQgRmlyZWZveCB0aGF0IGF1dG9tYXRpY2FsbHkgZGlzY292ZXJzIHRyYWNrZXJzIGFzIHlvdSBicm93c2UgdGhlIFdlYi4gVGhlIGxvbmdlciB5b3UgYnJvd3NlIHdpdGggUHJpdmFjeSBCYWRnZXIsIHRoZSBiZXR0ZXIgaXQgZ2V0cyBhdCBwcm90ZWN0aW5nIHlvdSwgc28gc3RhcnQgYnJvd3NpbmcgYSBsaXR0bGUgdG8gdGVhY2ggeW91ciBCYWRnZXIuPC9wPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxhIGhyZWY9J2h0dHBzOi8vcHJpdmFjeWJhZGdlci5vcmcnIHRhcmdldD1cIl9ibGFua1wiPjxidXR0b24gb246Y2xpY2t8b25jZT0ne2Rpc2FibGV9JyBkaXNhYmxlZD0ne2Rpc2FibGVkfSc+RG93bmxvYWQgUHJpdmFjeSBCYWRnZXJcblx0XHQ8L2J1dHRvbj48L2E+XG5cdFx0PENvbXBsZXRlPlxuXHRcdFx0eyNpZiAhZGlzYWJsZWR9XG5cdFx0XHRBbHJlYWR5IEhhdmUgaXRcblx0XHRcdHs6ZWxzZX1cblx0XHRcdEp1c3QgZG93bmxvYWRlZCBpdFxuXHRcdFx0ey9pZn1cblx0XHQ8L0NvbXBsZXRlPlxuXHRcdDxDb21wbGV0ZSBzdWNjZXNzPXtmYWxzZX0+XG5cdFx0XHRObyBUaGFua3Ncblx0XHQ8L0NvbXBsZXRlPlxuXHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbnsvaWZ9XG48QmFjay8+XG48L1RyYW5zPlxuPHN0eWxlPlxuICAgLmJ1dHRvbi1ob2xkZXIge1xuXHR3aWR0aDogMjd2dztcblx0ZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICB9XG4gICBidXR0b24ge1xuXHQgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdCAgIG1hcmdpbjogMTBweDtcblx0ICAgYm9yZGVyOiBibGFjayBzb2xpZCAwcHg7XG5cdCAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgIH1cbiAgIGEge1xuXHQgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IG9uTW91bnQsIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuXHRpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnIC8vc2V0IHN1Y2Nlc3M9e2ZhbHNlfSBmb3IgZmFpbHVyZVxuXHRpbXBvcnQgQnRuIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQnRuLnN2ZWx0ZScgLy9zZXQgPE5leHQgcT17Mn0+IHRvIHNraXAgbXVsdGlwbGUgc3RlcHNcblx0aW1wb3J0IHsgY291bnQsIHN0ZXAsIHF1aXpTdGVwcyB9IGZyb20gJy4uLy4uL3N0b3JlLmpzJ1xuXHRpbXBvcnQgQmFjayBmcm9tICcuLi8uLi9jb21wb25lbnRzL0JhY2suc3ZlbHRlJ1xuXG5cblx0Ly9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG4gICAgb25Nb3VudChhc3luYygpID0+IHskcXVpelN0ZXBzWyRjb3VudF0uc3RhdHVzID0gMX0pO1xuXG5cdGxldCBjdXJyZW50ID0gJ2luaXRpYWwnO1xuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5JbnRlcm5ldCBvZiB0aGluZ3MoIEFsZXhhLCBIb21lIGRldmljZXMpPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48VHJhbnM+XG57I2lmICRzdGVwPT0wfVxuPHNlY3Rpb24+XG5cdDxoMj5JbnRlcm5ldCBvZiB0aGluZ3MoIEFsZXhhLCBIb21lIGRldmljZXMpPC9oMj4gXG5cdDxwPkl0IHNob3VsZCBiZSBjbGVhciBieSBub3cgdGhhdCB5b3VyIGRhaWx5IGludGVyYWN0aW9ucyB0ZWNobm9sb2d5LCBsZXQgYWxvbmUgeW91ciBzbWFydCBzcGVha2VyIGFyZSBhbnl0aGluZyBidXQgcHJpdmF0ZS4gQSBzZXJpZXMgb2YgaW52ZXN0aWdhdGl2ZSByZXBvcnRzIGhhdmUgc2hvd24gdGhhdCBvdGhlciBwZW9wbGUgYXJlIHJldmlld2luZyByZWNvcmRpbmdzIG9yIHRyYW5zY3JpcHRzIG9mIHlvdXIgY29udmVyc2F0aW9ucy4gXG5cdDwvcD5cblx0PHA+VGhlIHRocmVlIGJpZyBtYWtlcnMgb2Ygc21hcnQgc3BlYWtlcnPigJRBbWF6b24sIEFwcGxlLCBhbmQgR29vZ2xl4oCUc2F5IHRoZXkgZG8gdGhpcyB0byBpbXByb3ZlIHRoZSBkZXZpY2XigJlzIHBlcmZvcm1hbmNlLCBub3QgZm9yIHRhcmdldGluZyBhZHMuIEJ1dCBwcml2YWN5IGFkdm9jYXRlcyBhcmd1ZSB0aGF0LCB3aXRob3V0IHByaW9yIG5vdGljZSwgYW55IGxpc3RlbmluZyBmcm9tIGVtcGxveWVlcyBhbmQgY29udHJhY3RvcnMgaXMgdW5mYWlyIHRvIGNvbnN1bWVycy48L3A+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG5cdFx0PEJ0bj5JIG93biBhIHNtYXJ0IHNwZWFrZXI8L0J0bj5cblx0XHQ8QnRuIHE9ezJ9PkkgZG9uJ3Qgb3duIGEgc21hcnQgc3BlYWtlcjwvQnRuPlxuXHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbns6ZWxzZSBpZiAkc3RlcD09MX1cbjxzZWN0aW9uPlxuXHQ8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAnYW1hem9uJ31cIlxuXHRvbjpjbGljaz1cInsoKSA9PiBjdXJyZW50ID0gJ2FtYXpvbid9XCI+XG5cdFx0PHA+QW1hem9uIEFsZXhhPC9wPlxuXHRcdHsjaWYgY3VycmVudD09PSdhbWF6b24nfVxuXHRcdDx1bD5cblx0XHRcdDxsaT5TdGVwIDE6IE9wZW4gdGhlIEFsZXhhIGFwcCBvbiB5b3VyIHNtYXJ0cGhvbmUgYW5kIHRhcCB0aGUgbWVudSBidXR0b24gb24gdGhlIHRvcC1sZWZ0IG9mIHRoZSBzY3JlZW4uPC9saT5cblx0XHRcdDxsaT5TdGVwIDI6IFNlbGVjdCBTZXR0aW5ncyA+IEFsZXhhIFByaXZhY3kgPiBNYW5hZ2UgSG93IFlvdXIgRGF0YSBJbXByb3ZlcyBBbGV4YS48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgMzogU3dpdGNoIG9mZiB0aGUgdG9nZ2xlIG5leHQgdG8gSGVscCBJbXByb3ZlIEFtYXpvbiBTZXJ2aWNlcyBhbmQgRGV2ZWxvcCBOZXcgRmVhdHVyZXMuPC9saT5cblx0XHRcdDxsaT5TdGVwIDQ6IFRoZW4gc3dpdGNoIG9mZiB0aGUgdG9nZ2xlIG5leHQgdG8geW91ciBuYW1lIHVuZGVyIFVzZSBNZXNzYWdlcyB0byBJbXByb3ZlIFRyYW5zY3JpcHRpb25zLjwvbGk+XG5cdFx0PC91bD5cblx0XHR7L2lmfVxuXHQ8L2Rpdj5cblx0XG5cdDxocj5cblx0PGRpdiBjbGFzczphY3RpdmU9XCJ7Y3VycmVudCA9PT0gJ2dvb2dsZSd9XCJcblx0b246Y2xpY2s9XCJ7KCkgPT4gY3VycmVudCA9ICdnb29nbGUnfVwiPlxuXHRcdDxwPkdvb2dsZSBBc3Npc3RhbnQ8L3A+XG5cdFx0eyNpZiBjdXJyZW50PT09J2dvb2dsZSd9XG5cdFx0PHVsPlxuXHRcdFx0PGxpPlN0ZXAgMTogT3BlbiB0aGUgQWxleGEgYXBwIG9uIHlvdXIgc21hcnRwaG9uZSBhbmQgdGFwIHRoZSBtZW51IGJ1dHRvbiBvbiB0aGUgdG9wLWxlZnQgb2YgdGhlIHNjcmVlbi48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgMjogU2VsZWN0IFNldHRpbmdzID4gQWxleGEgUHJpdmFjeSA+IE1hbmFnZSBIb3cgWW91ciBEYXRhIEltcHJvdmVzIEFsZXhhLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCAzOiBTd2l0Y2ggb2ZmIHRoZSB0b2dnbGUgbmV4dCB0byBIZWxwIEltcHJvdmUgQW1hem9uIFNlcnZpY2VzIGFuZCBEZXZlbG9wIE5ldyBGZWF0dXJlcy48L2xpPlxuXHRcdFx0PGxpPlN0ZXAgNDogVGhlbiBzd2l0Y2ggb2ZmIHRoZSB0b2dnbGUgbmV4dCB0byB5b3VyIG5hbWUgdW5kZXIgVXNlIE1lc3NhZ2VzIHRvIEltcHJvdmUgVHJhbnNjcmlwdGlvbnMuPC9saT5cblx0XHQ8L3VsPlxuXHRcdHsvaWZ9XG5cdDwvZGl2PlxuXHRcblx0PGhyPlxuXHQ8ZGl2IGNsYXNzOmFjdGl2ZT1cIntjdXJyZW50ID09PSAnYXBwbGUnfVwiXG5cdG9uOmNsaWNrPVwieygpID0+IGN1cnJlbnQgPSAnYXBwbGUnfVwiPlxuXHRcdDxwPkFwcGxlIFNpcmk8L3A+XG5cdFx0eyNpZiBjdXJyZW50PT09J2FwcGxlJ31cblx0XHQ8dWw+XG5cdFx0XHQ8bGk+U3RlcCAxOiBPcGVuIHRoZSBBbGV4YSBhcHAgb24geW91ciBzbWFydHBob25lIGFuZCB0YXAgdGhlIG1lbnUgYnV0dG9uIG9uIHRoZSB0b3AtbGVmdCBvZiB0aGUgc2NyZWVuLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCAyOiBTZWxlY3QgU2V0dGluZ3MgPiBBbGV4YSBQcml2YWN5ID4gTWFuYWdlIEhvdyBZb3VyIERhdGEgSW1wcm92ZXMgQWxleGEuPC9saT5cblx0XHRcdDxsaT5TdGVwIDM6IFN3aXRjaCBvZmYgdGhlIHRvZ2dsZSBuZXh0IHRvIEhlbHAgSW1wcm92ZSBBbWF6b24gU2VydmljZXMgYW5kIERldmVsb3AgTmV3IEZlYXR1cmVzLjwvbGk+XG5cdFx0XHQ8bGk+U3RlcCA0OiBUaGVuIHN3aXRjaCBvZmYgdGhlIHRvZ2dsZSBuZXh0IHRvIHlvdXIgbmFtZSB1bmRlciBVc2UgTWVzc2FnZXMgdG8gSW1wcm92ZSBUcmFuc2NyaXB0aW9ucy48L2xpPlxuXHRcdDwvdWw+XG5cdFx0ey9pZn1cblx0PC9kaXY+XG5cdFxuXHQ8aHI+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG5cdFx0PGgzPkRpZCB5b3Ugc2V0dXAgcHJpdmFjeSBtb2RlPC9oMz5cblx0XHQ8Q29tcGxldGU+WWVzLCBJIERpZDwvQ29tcGxldGU+XG5cdFx0PENvbXBsZXRlIHN1Y2Nlc3M9e2ZhbHNlfT5ObyBJIGRvbid0IHdhbnQgdG88L0NvbXBsZXRlPlxuXHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbns6ZWxzZX1cblx0PHNlY3Rpb24+XG5cdFx0PGgyPkhvb29yYXkhPC9oMj5cblx0XHQ8cD5PbmUgbGVzcyB3YXkgcGVvcGxlIGNhbiBzbm9vcCBvbiB5b3VyIHByaXZhY3kuPC9wPlxuXHRcdDxDb21wbGV0ZT5OZXh0IENoYWxsZW5nZTwvQ29tcGxldGU+XG5cdDwvc2VjdGlvbj5cbnsvaWZ9XG48QmFjay8+XG48L1RyYW5zPlxuPHN0eWxlPlxuICAgLmJ1dHRvbi1ob2xkZXIge1xuXHR3aWR0aDogMjd2dztcblx0ZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG5cdGltcG9ydCB7IG9uTW91bnQsIGNyZWF0ZUV2ZW50RGlzcGF0Y2hlciB9IGZyb20gJ3N2ZWx0ZSc7XG5cdGNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XG5cdGltcG9ydCBUcmFucyBmcm9tICcuLi8uLi9jb21wb25lbnRzL1RyYW5zSGVscC5zdmVsdGUnO1xuXHRpbXBvcnQgQ29tcGxldGUgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jb21wbGV0ZS5zdmVsdGUnIC8vc2V0IHN1Y2Nlc3M9e2ZhbHNlfSBmb3IgZmFpbHVyZVxuXHRpbXBvcnQgQnRuIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQnRuLnN2ZWx0ZScgLy9zZXQgPE5leHQgcT17Mn0+IHRvIHNraXAgbXVsdGlwbGUgc3RlcHNcblx0aW1wb3J0IHsgY291bnQsIHN0ZXAsIHF1aXpTdGVwcyB9IGZyb20gJy4uLy4uL3N0b3JlLmpzJ1xuXHRpbXBvcnQgQmFjayBmcm9tICcuLi8uLi9jb21wb25lbnRzL0JhY2suc3ZlbHRlJ1xuXG5cdC8vc2V0cyBhc2lkZSBpY29uIHRvIGluIHByb2dyZXNzIHZpYSBzdG9yZVxuXHRvbk1vdW50KGFzeW5jKCkgPT4geyRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgPSAxO1xuXHRcdH0pO1xuXG48L3NjcmlwdD5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPkxvY2F0aW9uIFRyYWNraW5nPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48VHJhbnM+XG57I2lmICRzdGVwPT0wfVxuPHNlY3Rpb24+XG5cdDxoMT5JcyB5b3VyIHBob25lIHRyYWNraW5nIHlvdXIgZXZlcnkgbW92ZT8gUHJvYmFibHkuPC9oMT4gXG5cdFx0PHA+UGVydmFzaXZlIHRyYWNraW5nIG9mIGxvY2F0aW9uIGF0IHRoZSB2ZXJ5IGxlYXN0IHJpc2tzIHB1dHRpbmcgeW91IGF0IGEgZGlzYWR2YW50YWdlIGFzIGEgY29uc3VtZXIuIENlcnRhaW5seSBpZiB5b3UgbGl2ZSBzb21ld2hlcmUgd2l0aG91dCBhIHByb3BlciByZWd1bGF0b3J5IGZyYW1ld29yayBmb3IgcHJpdmFjeS4gSXTigJlzIGFsc28gd29ydGggYmVhcmluZyBpbiBtaW5kIGhvdyBsYXggdGVjaCBnaWFudHMgY2FuIGJlIHdoZXJlIGxvY2F0aW9uIHByaXZhY3kgaXMgY29uY2VybmVkIOKAlCB3aGV0aGVyIGl04oCZcyBVYmVy4oCZcyBpbmZhbW91cyDigJhnb2Qgdmlld+KAmSB0b29sIG9yIFNuYXBjaGF0IGxlYWtpbmcgc2Nob29sa2lkc+KAmSBsb2NhdGlvbiBvciBTdHJhdmEgYWNjaWRlbnRhbGx5IHJldmVhbGluZyB0aGUgbG9jYXRpb25zIG9mIG1pbGl0YXJ5IGJhc2VzLiBUaGVpciByZWNvcmQgaXMgcHJldHR5IHRlcnJpYmxlLiA8L3A+XHRcblx0PGgzPldoYXQgbW9iaWxlIGRldmljZSBkbyB5b3UgdXNlPzwvaDM+XG5cdFx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHRcdDxCdG4+aU9TPC9CdG4+XG5cdFx0XHQ8QnRuPkFuZHJvaWQ8L0J0bj5cblx0XHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbns6ZWxzZSBpZiAkc3RlcD09MX1cbjxzZWN0aW9uPlxuXHQ8aDI+VHVybiBsb2NhaXRvbiBvZmYgb24gSU9TIGRldmljZTwvaDI+XG5cdDxwPlN0ZXAgMS4gR28gdG8gU2V0dGluZ3MgPiBQcml2YWN5ID4gTG9jYXRpb24gU2VydmljZXMuPC9wPlxuXHQ8cD5TdGVwIDIuIE1ha2Ugc3VyZSB0aGF0IExvY2F0aW9uIFNlcnZpY2VzIGlzIG9uLjwvcD5cblx0PHA+U3RlcCAzLiBTY3JvbGwgZG93biB0byBmaW5kIHRoZSBhcHAuPC9wPlxuXHQ8cD5TdGVwIDQuIFRhcCB0aGUgYXBwIGFuZCBzZWxlY3QgYW4gb3B0aW9uOjwvcD5cblx0PHVsPlxuXHRcdDxsaT5OZXZlcjogUHJldmVudHMgYWNjZXNzIHRvIExvY2F0aW9uIFNlcnZpY2VzIGluZm9ybWF0aW9uLjwvbGk+XG5cdFx0PGxpPkFzayBOZXh0IFRpbWU6IFRoaXMgYWxsb3dzIHlvdSB0byBjaG9vc2UgQWx3YXlzIFdoaWxlIFVzaW5nIEFwcCwgQWxsb3cgT25jZSwgb3IgRG9uJ3QgQWxsb3cuPC9saT5cblx0XHQ8bGk+V2hpbGUgVXNpbmcgdGhlIEFwcDogQWxsb3dzIGFjY2VzcyB0byBMb2NhdGlvbiBTZXJ2aWNlcyBvbmx5IHdoZW4gdGhlIGFwcCBvciBvbmUgb2YgaXRzIGZlYXR1cmVzIGlzIHZpc2libGUgb24gc2NyZWVuLiBJZiBhbiBhcHAgaXMgc2V0IHRvIFdoaWxlIFVzaW5nIHRoZSBBcHAsIHlvdSBtaWdodCBzZWUgeW91ciBzdGF0dXMgYmFyIHR1cm4gYmx1ZSB3aXRoIGEgbWVzc2FnZSB0aGF0IGFuIGFwcCBpcyBhY3RpdmVseSB1c2luZyB5b3VyIGxvY2F0aW9uLjwvbGk+XG5cdFx0PGxpPkFsd2F5czogQWxsb3dzIGFjY2VzcyB0byB5b3VyIGxvY2F0aW9uIGV2ZW4gd2hlbiB0aGUgYXBwIGlzIGluIHRoZSBiYWNrZ3JvdW5kLjwvbGk+XG5cdDwvdWw+XG5cdDxoMz5EaWQgeW91IHR1cm4gb2ZmIGxvY2F0aW9uIG9uIHlvdXIgZGV2aWNlPC9oMz5cblx0PGRpdiBjbGFzcz1cImJ1dHRvbi1ob2xkZXJcIj5cblx0XHQ8Q29tcGxldGU+WWVzLCBJIGRpZDwvQ29tcGxldGU+XG5cdFx0PENvbXBsZXRlIHN1Y2Nlc3M9e2ZhbHNlfT5ObywgSSBkaWRuJ3Q8L0NvbXBsZXRlPlxuXHQ8L2Rpdj5cbjwvc2VjdGlvbj5cbns6ZWxzZX1cbjxzZWN0aW9uPlxuXHQ8aDI+VHVybiBsb2NhaXRvbiBvZmYgb24gYW5kIEFuZHJvaWQgRGV2aWNlPC9oMj5cblx0PHA+U3RlcCAxLiBHbyB0byBTZXR0aW5ncyA+IFByaXZhY3kgPiBMb2NhdGlvbiBTZXJ2aWNlcy48L3A+XG5cdDxwPlN0ZXAgMi4gTWFrZSBzdXJlIHRoYXQgTG9jYXRpb24gU2VydmljZXMgaXMgb24uPC9wPlxuXHQ8cD5TdGVwIDMuIFNjcm9sbCBkb3duIHRvIGZpbmQgdGhlIGFwcC48L3A+XG5cdDxwPlN0ZXAgNC4gVGFwIHRoZSBhcHAgYW5kIHNlbGVjdCBhbiBvcHRpb246PC9wPlxuXHQ8dWw+XG5cdFx0PGxpPk5ldmVyOiBQcmV2ZW50cyBhY2Nlc3MgdG8gTG9jYXRpb24gU2VydmljZXMgaW5mb3JtYXRpb24uPC9saT5cblx0XHQ8bGk+QXNrIE5leHQgVGltZTogVGhpcyBhbGxvd3MgeW91IHRvIGNob29zZSBBbHdheXMgV2hpbGUgVXNpbmcgQXBwLCBBbGxvdyBPbmNlLCBvciBEb24ndCBBbGxvdy48L2xpPlxuXHRcdDxsaT5XaGlsZSBVc2luZyB0aGUgQXBwOiBBbGxvd3MgYWNjZXNzIHRvIExvY2F0aW9uIFNlcnZpY2VzIG9ubHkgd2hlbiB0aGUgYXBwIG9yIG9uZSBvZiBpdHMgZmVhdHVyZXMgaXMgdmlzaWJsZSBvbiBzY3JlZW4uIElmIGFuIGFwcCBpcyBzZXQgdG8gV2hpbGUgVXNpbmcgdGhlIEFwcCwgeW91IG1pZ2h0IHNlZSB5b3VyIHN0YXR1cyBiYXIgdHVybiBibHVlIHdpdGggYSBtZXNzYWdlIHRoYXQgYW4gYXBwIGlzIGFjdGl2ZWx5IHVzaW5nIHlvdXIgbG9jYXRpb24uPC9saT5cblx0XHQ8bGk+QWx3YXlzOiBBbGxvd3MgYWNjZXNzIHRvIHlvdXIgbG9jYXRpb24gZXZlbiB3aGVuIHRoZSBhcHAgaXMgaW4gdGhlIGJhY2tncm91bmQuPC9saT5cblx0PC91bD5cblx0PGgzPkRpZCB5b3UgdHVybiBvZmYgbG9jYXRpb24gb24geW91ciBkZXZpY2U8L2gzPlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxDb21wbGV0ZT5ZZXMsIEkgZGlkPC9Db21wbGV0ZT5cblx0XHQ8Q29tcGxldGUgc3VjY2Vzcz17ZmFsc2V9Pk5vLCBJIGRpZG4ndDwvQ29tcGxldGU+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuey9pZn1cbjxCYWNrLz5cbjwvVHJhbnM+XG48c3R5bGU+XG5cdHNlY3Rpb24ge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG4gICAuYnV0dG9uLWhvbGRlciB7XG5cdHdpZHRoOiAyN3Z3O1xuXHRkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgIH1cbjwvc3R5bGU+IiwiPHNjcmlwdD5cblx0aW1wb3J0IHsgb25Nb3VudCwgY3JlYXRlRXZlbnREaXNwYXRjaGVyIH0gZnJvbSAnc3ZlbHRlJztcblx0Y29uc3QgZGlzcGF0Y2ggPSBjcmVhdGVFdmVudERpc3BhdGNoZXIoKTtcblx0aW1wb3J0IFRyYW5zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVHJhbnNIZWxwLnN2ZWx0ZSc7XG5cdGltcG9ydCBDb21wbGV0ZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbXBsZXRlLnN2ZWx0ZScgLy9zZXQgc3VjY2Vzcz17ZmFsc2V9IGZvciBmYWlsdXJlXG5cdGltcG9ydCBCdG4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdG4uc3ZlbHRlJyAvL3NldCA8TmV4dCBxPXsyfT4gdG8gc2tpcCBtdWx0aXBsZSBzdGVwc1xuXHRpbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzIH0gZnJvbSAnLi4vLi4vc3RvcmUuanMnXG5cdGltcG9ydCBCYWNrIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQmFjay5zdmVsdGUnXG5cdGltcG9ydCB7IGZseSwgZmFkZSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJ1xuXHRpbXBvcnQgeyBzaW5lSW5PdXQgfSBmcm9tICdzdmVsdGUvZWFzaW5nJztcblx0Ly9zZXRzIGFzaWRlIGljb24gdG8gaW4gcHJvZ3Jlc3MgdmlhIHN0b3JlXG4gICAgb25Nb3VudChhc3luYygpID0+IHskcXVpelN0ZXBzWyRjb3VudF0uc3RhdHVzID0gMX0pO1xuXHRsZXQgbWFjID0gZmFsc2U7XG5cdGxldCBwYyA9IGZhbHNlO1xuPC9zY3JpcHQ+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5Eb21haW4gTmFtZSBTZXJ2aWNlPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG48ZGl2IGluOmZseT1cInt7ZGVsYXk6IDE1MCwgZHVyYXRpb246IDgwMCwgeTogMTAwMCwgb3BhY2l0eTogMC4wLCBlYXNpbmc6IHNpbmVJbk91dH19XCIgb3V0OmZhZGU9XCJ7e2RlbGF5OiAxMDAsIGR1cmF0aW9uOiA4MDB9fVwiPlxueyNpZiAkc3RlcD09MH1cbjxzZWN0aW9uPlxuXHQ8aDI+RG9tYWluIE5hbWUgU2VydmVyIChETlMpOiBRdWFkOVxuXHQ8L2gyPiBcblx0PHA+RXZlcnl0aGluZyBvbiB0aGUgSW50ZXJuZXQsIGluY2x1ZGluZyB3ZWJzaXRlcywgbGl2ZSBhdCBhIG51bWVyaWNhbCBJUCBhZGRyZXNzLiBUaGUgRG9tYWluIE5hbWUgU3lzdGVtLCBvciBETlMsIHRyYW5zbGF0ZXMgdGhlc2UgbnVtZXJpY2FsIElQIGFkZHJlc3NlcyBpbnRvIGh1bWFuLXJlYWRhYmxlIGRvbWFpbiBuYW1lcyB0aGF0IHdlIGFsbCBrbm93IGFuZCByZW1lbWJlciAobGlrZSBtaW5keW91cmRhdGEub3JnKS4gSWYgeW91ciBETlMgc2V0dGluZ3MgYXJlIG5vdCB3b3JraW5nIGNvcnJlY3RseSwgb3IgeW914oCZcmUgc3RpbGwgdXNpbmcgZGVmYXVsdHMsIHlvdSBtYXkgYmUgYXQgcmlzayBmb3IgY3liZXJjcmltZSBhbmQgcGVyZm9ybWFuY2UgaXNzdWVzLiBBbmQsIHRoZSB3ZWJzaXRlcyB5b3UgdmlzaXQgbWF5IGJlIGNvbGxlY3RlZCBhbmQgc2hhcmVkIGJ5IHdoYXRldmVyIGVudGl0eSBvd25zIHRoZSBETlMgc2VydmljZS48L3A+XG5cdDxkaXYgY2xhc3M9XCJidXR0b24taG9sZGVyXCI+XG5cdFx0PEJ0biBncmVlbj17dHJ1ZX0+Q29udGludWU8L0J0bj5cblx0PC9kaXY+XG48L3NlY3Rpb24+XG57OmVsc2V9XG48c2VjdGlvbj5cblx0PGgyPlNldHVwIFF1YWQ5PC9oMj5cblx0PHA+UXVhZDkgaXMgYSBmcmVlLCBub3QtZm9yLXByb2ZpdCBzZWN1cml0eSBzb2x1dGlvbiB0aGF0IHVzZXMgdGhlIEROUyB0byBwcm90ZWN0IHlvdXIgc3lzdGVtIGFnYWluc3QgdGhlIG1vc3QgY29tbW9uIGN5YmVyIHRocmVhdHMuIE5vdCBvbmx5IGRvZXMgaXQgIHByZXNlcnZlIGFuZCBwcm90ZWN0IHlvdXIgcHJpdmFjeSwgaXQgd2lsbCBhbHNvIGltcHJvdmUgeW91ciBzeXN0ZW3igJlzIHBlcmZvcm1hbmNlISBJdOKAmXMgbGlrZSBhIHBhaW5sZXNzIGltbXVuaXphdGlvbiBmb3IgeW91ciBjb21wdXRlciBhbmQgZGV2aWNlcy48L3A+XG5cdDxkaXYgY2xhc3M6bWFjIG9uOmNsaWNrPVwieygpID0+IG1hYyA9ICFtYWN9XCI+XG5cdFx0PGRpdiBjbGFzcz1cImNhcmV0XCI+XG5cdFx0XHQ8cD5TZXR1cCBRdWFkOSBmb3IgTWFjOjwvcD5cblx0XHRcdDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuXHRcdFx0PHBhdGggZD1cIk0xOC44ODUgN0wxMiAxMy43OTg5TDUuMTE1IDdMMyA5LjA5MzEyTDEyIDE4TDIxIDkuMDkzMTJMMTguODg1IDdaXCIgZmlsbD1cIndoaXRlXCIvPlxuXHRcdFx0PC9zdmc+XG5cdFx0PC9kaXY+XG5cdFx0eyNpZiBtYWN9XG5cdFx0PGlmcmFtZSB0aXRsZT1cIlNldHVwIFF1YWQ5IGZvciBtYWNcIiB3aWR0aD1cIjU2MFwiIGhlaWdodD1cIjMxNVwiIHNyYz1cImh0dHBzOi8vd3d3LnlvdXR1YmUtbm9jb29raWUuY29tL2VtYmVkL05NNEFkZkVuQW1ZXCIgZnJhbWVib3JkZXI9XCIwXCIgYWxsb3c9XCJhY2NlbGVyb21ldGVyOyBhdXRvcGxheTsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZVwiIGFsbG93ZnVsbHNjcmVlbj48L2lmcmFtZT5cblx0XHR7L2lmfVxuXHQ8L2Rpdj5cblx0XHQ8aHI+XG4gXHQ8ZGl2IGNsYXNzOnBjIG9uOmNsaWNrPVwieygpID0+IHBjID0gIXBjfVwiPlxuXHRcdDxkaXYgY2xhc3M9XCJjYXJldFwiPlxuXHRcdFx0PHA+U2V0dXAgUXVhZDkgZm9yIFBDOjwvcD5cblx0XHRcdDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuXHRcdFx0PHBhdGggZD1cIk0xOC44ODUgN0wxMiAxMy43OTg5TDUuMTE1IDdMMyA5LjA5MzEyTDEyIDE4TDIxIDkuMDkzMTJMMTguODg1IDdaXCIgZmlsbD1cIndoaXRlXCIvPlxuXHRcdFx0PC9zdmc+XG5cdFx0PC9kaXY+XG5cdFx0IHsjaWYgcGN9XG5cdFx0IDxpZnJhbWUgdGl0bGU9XCJTZXR1cCBRdWFkOSBmb3IgV2luZG93c1wiIHdpZHRoPVwiNTYwXCIgaGVpZ2h0PVwiMzE1XCIgc3JjPVwiaHR0cHM6Ly93d3cueW91dHViZS1ub2Nvb2tpZS5jb20vZW1iZWQvYXVqVWwzeXQ2bk1cIiBmcmFtZWJvcmRlcj1cIjBcIiBhbGxvdz1cImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlXCIgYWxsb3dmdWxsc2NyZWVuPjwvaWZyYW1lPlxuICAgICAgICB7L2lmfVxuICAgIDwvZGl2PlxuXHQ8ZGl2IGNsYXNzPVwiYnV0dG9uLWhvbGRlclwiPlxuXHRcdDxDb21wbGV0ZT5TZXR1cCBDb21wbGV0ZTwvQ29tcGxldGU+XG5cdFx0PENvbXBsZXRlIHN1Y2Nlc3M9e2ZhbHNlfT5Eb24ndCBjYXJlLCBsZXQgdGhlbiBzbm9vcDwvQ29tcGxldGU+XG5cdDwvZGl2PlxuPC9zZWN0aW9uPlxuey9pZn1cbjxCYWNrLz5cbjwvZGl2PlxuPHN0eWxlPlxuICAgLmJ1dHRvbi1ob2xkZXIge1xuXHR3aWR0aDogMjd2dztcblx0ZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICB9XG4gICBidXR0b24ge1xuXHQgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdCAgIG1hcmdpbjogMTBweDtcblx0ICAgYm9yZGVyOiBibGFjayBzb2xpZCAwcHg7XG5cdCAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgIH1cbiAgIC5jYXJldHtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdGZsZXgtZmxvdzogcm93IG5vd3JhcDtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcblx0fVxuPC9zdHlsZT4iLCI8c2NyaXB0PlxuXHRleHBvcnQgbGV0IHNlZ21lbnQ7XG48L3NjcmlwdD5cblxuXG48c3R5bGU+XG5cdG5hdiB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG5cdFx0aGVpZ2h0OiA1MHB4O1xuXHRcdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICMzMDM1Mzg7XG5cdFx0Lypib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsNjIsMCwwLjEpOyovXG5cdFx0Zm9udC13ZWlnaHQ6IDMwMDtcblx0XHRwYWRkaW5nOiAwIDFlbTtcblx0XHRwb3NpdGlvbjogc3RpY2t5O1xuICAgIFx0dG9wOiAwcHg7XG5cdFx0bGVmdDogMHB4O1xuXHRcdHotaW5kZXg6IDE7XG5cdH1cblx0dWwge1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0bGlzdC1zdHlsZTogbm9uZTtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuXHRcdG1hcmdpbjogMDtcblx0XHRwYWRkaW5nOiAwO1xuXHRcdGNvbG9yOiAjYzdjN2M3O1xuXHR9XG5cdGltZyB7XG5cdFx0LypkaXNwbGF5OiBibG9jaztcblx0XHRmbG9hdDogbGVmdDsqL1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0anVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXHRcdGhlaWdodDogMzBweDtcblx0XHRtYXJnaW4tbGVmdDogMjVweDtcblx0fVxuXHRsaXtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdG1hcmdpbjogMHB4IDIwcHggMHB4IDIwcHg7XG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0fVxuXG5cdFthcmlhLWN1cnJlbnRdIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHR9XG5cblx0W2FyaWEtY3VycmVudF06OmFmdGVyIHtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0Y29udGVudDogJyc7XG5cdFx0d2lkdGg6IGNhbGMoMTAwJSAtIDFlbSk7XG5cdFx0aGVpZ2h0OiAycHg7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjojZTc0ZTQ1O1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdC8qYm90dG9tOiAtMXB4OyovXG5cdH1cblx0YSB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRwYWRkaW5nOiAxZW0gMC41ZW07XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdG1hcmdpbjogMmVtLCAwZW07XG5cblx0fVxuXHQuaG9tZSB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG5cdH1cbjwvc3R5bGU+XG5cbjxuYXYgY2xhc3M6aG9tZT17c2VnbWVudCA9PSAnaG9tZSd9PlxuXHQ8YSBocmVmPScuJz48aW1nICBzcmM9Jy4vTVlEbG9nb19uYXYucG5nJyBhbHQ9XCJNaW5kIHlvdXIgRGF0YSBsb2dvXCI+PC9hPlxuXHQ8dWwgaWQ9XCJuYXZpZ2F0aW9uXCI+XG5cdFx0PGxpPjxhIGFyaWEtY3VycmVudD1cIntzZWdtZW50ID09PSAnaG9tZScgPyAncGFnZScgOiB1bmRlZmluZWR9XCIgaHJlZj1cIi5cIj5ob21lPC9hPjwvbGk+XG5cdFx0PGxpPjxhIGFyaWEtY3VycmVudD1cIntzZWdtZW50ID09PSAncXVpeicgPyAncGFnZScgOiB1bmRlZmluZWR9XCIgaHJlZj1cInF1aXpcIj5xdWl6PC9hPjwvbGk+XG5cdFx0PGxpPjxhIGFyaWEtY3VycmVudD1cIntzZWdtZW50ID09PSAnYWJvdXQnID8gJ3BhZ2UnIDogdW5kZWZpbmVkfVwiIGhyZWY9XCJhYm91dFwiPmFib3V0PC9hPjwvbGk+XG5cblx0XHQ8IS0tIGZvciB0aGUgYmxvZyBsaW5rLCB3ZSdyZSB1c2luZyByZWw9cHJlZmV0Y2ggc28gdGhhdCBTYXBwZXIgcHJlZmV0Y2hlc1xuXHRcdCAgICAgdGhlIGJsb2cgZGF0YSB3aGVuIHdlIGhvdmVyIG92ZXIgdGhlIGxpbmsgb3IgdGFwIGl0IG9uIGEgdG91Y2hzY3JlZW4gLS0+XG5cdDwhLS1cdDxsaT48YSByZWw9cHJlZmV0Y2ggYXJpYS1jdXJyZW50PVwie3NlZ21lbnQgPT09ICdibG9nJyA/ICdwYWdlJyA6IHVuZGVmaW5lZH1cIiBocmVmPVwiYmxvZ1wiPmJsb2c8L2E+PC9saT4gLS0+XG5cdDwvdWw+XG48L25hdj5cbiIsIjxzY3JpcHQ+XG4gICAgLy90b3RhbCB0aW1lIGZvciBjb3VudGRvd25cbmltcG9ydCB7IHR3ZWVuZWQgfSBmcm9tICdzdmVsdGUvbW90aW9uJztcbmltcG9ydCB7IGN1YmljT3V0LCBzaW5lSW5PdXQgIH0gZnJvbSAnc3ZlbHRlL2Vhc2luZyc7XG5pbXBvcnQgQ2hlY2sgZnJvbSAnLi9DaGVjay5zdmVsdGUnO1xuaW1wb3J0IHsgcXVpelN0ZXBzLCB0aW1lckFjdGl2ZSwgcHJvZ3Jlc3MsIGNvdW50IH0gZnJvbSAnLi4vc3RvcmUuanMnO1xuaW1wb3J0IHsgYWZ0ZXJVcGRhdGUgfSBmcm9tICdzdmVsdGUnO1xuaW1wb3J0IHsgc2xpZGUsIGZseSwgZmFkZSB9IGZyb20gJ3N2ZWx0ZS90cmFuc2l0aW9uJztcbi8vY29uc29sZS5sb2coJHF1aXpTdGVwcyk7XG5sZXQgc3RhcnQ9IDMwICogNjA7XG5sZXQgdGltZXIgPSB0d2VlbmVkKHN0YXJ0KTtcbiAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgIGlmICgkdGltZXIgPiAwICYmICR0aW1lckFjdGl2ZSkgJHRpbWVyLS07XG4gIH0sIDEwMDApO1xuXG4gICQ6IG1pbnV0ZXMgPSBNYXRoLmZsb29yKCR0aW1lciAvIDYwKTtcbiAgJDogbWlubmFtZSA9IG1pbnV0ZXMgPiAxID8gXCJtaW5zXCIgOiBcIm1pblwiO1xuICAkOiBzZWNvbmRzID0gTWF0aC5mbG9vcigkdGltZXIgLSBtaW51dGVzICogNjApLnRvTG9jYWxlU3RyaW5nKCdlbicsIHttaW5pbXVtSW50ZWdlckRpZ2l0czoyLHVzZUdyb3VwaW5nOmZhbHNlfSlcblxubGV0IGJnMSA9IHRydWU7XG5sZXQgYmcyID0gZmFsc2U7XG5sZXQgYmczID0gZmFsc2U7XG5cbmxldCBjb2xvcjtcbmFmdGVyVXBkYXRlKCgpID0+e1xuICAgIGlmKCRjb3VudCA+IDMpe2JnMSA9IGZhbHNlOyBiZzIgPSB0cnVlO31cbiAgICBpZigkY291bnQgID4gNyl7YmcyPSBmYWxzZTsgYmczPSB0cnVlO31cbiAgICBpZihiZzEpe2NvbG9yID0gXCIjNzRlZjdiXCJ9XG4gICAgaWYoYmcyKXtjb2xvciA9IFwiI0YxQzMzMFwifVxuICAgIGlmKGJnMyl7Y29sb3IgPSBcIiNFOTQwNDBcIn1cbn0pXG48L3NjcmlwdD5cbjxhc2lkZSBjbGFzczpiZzEgY2xhc3M6YmcyIGNsYXNzOmJnMyBpbjpmbHk9XCJ7e2RlbGF5OiAxNTAsIGR1cmF0aW9uOiA4MDAsIHk6IDEwMDAsIG9wYWNpdHk6IDAuMCwgZWFzaW5nOiBzaW5lSW5PdXR9fVwiIG91dDpmYWRlPVwie3tkZWxheTogMTAwLCBkdXJhdGlvbjogODAwfX1cIj5cbiAgICA8c2VjdGlvbiBpZD1cInRpbWVyXCI+XG4gICAgICAgPGRpdj5UaW1lIFJlbWFpbmluZzo8L2Rpdj4gPGRpdiBpZD0nbWludXRlcycgc3R5bGU9J3doaXRlLXNwYWNlOm5vd3JhcDsnPnttaW51dGVzfTp7c2Vjb25kc308L2Rpdj4gXG4gICAgICAgPGRpdiBpZD0nY2hhbGxlbmdlLW5hbWUnPlxuICAgICAgICA8c2xvdD5cblxuICAgICAgICA8L3Nsb3Q+XG4gICAgPC9kaXY+XG4gICAgPC9zZWN0aW9uPlxuICAgIDxkaXYgaWQ9XCJwcm9ncmVzcy1ob2xkZXJcIj5cbiAgICA8c2VjdGlvbiBjbGFzcz0nZG9uZSc+XG4gICAgICAgIHsjZWFjaCAkcXVpelN0ZXBzIGFzIGNoYWxsZW5nZX1cbiAgICAgICAgICAgIHsjaWYgY2hhbGxlbmdlLnR5cGUgIT0gJ2NoZWNrcG9pbnQnfVxuICAgICAgICA8Q2hlY2sgYWN0aXZlPXtjaGFsbGVuZ2Uuc3RhdHVzfSBjb2xvcj17Y29sb3J9Lz4gXG4gICAgICAgICAgICB7L2lmfVxuICAgICAgICB7L2VhY2h9ICAgIFxuICAgIDwvc2VjdGlvbj5cbiAgICA8cHJvZ3Jlc3MgdmFsdWU9eyRwcm9ncmVzc30gbWF4PVwiMTAwXCIgY2xhc3M6YmcxIGNsYXNzOmJnMiBjbGFzczpiZzM+PC9wcm9ncmVzcz5cbiAgICA8L2Rpdj5cbjwvYXNpZGU+XG48c3R5bGU+XG4gICAgYXNpZGUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIHdpZHRoOiAzMy43NXZ3OyBcbiAgICAgICAgaGVpZ2h0OiA4NnZoOyBcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM4NDI0RDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICAgICAgYm9yZGVyOiAwcHg7XG4gICAgICAgIG1hcmdpbjogMTJweCAwcHggNDBweCAyMHB4O1xuICAgICAgICBtaW4td2lkdGg6IDMzdnc7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIHRvcDogNTBweDtcbiAgICB9XG4gICAgI3RpbWVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1mbG93OiByb3cgd3JhcDsgXG4gICAgICAgIG1hcmdpbi1ibG9jay1zdGFydDogMzBweDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuICAgIFxuICAgICNtaW51dGVzIHtcbiAgICAgICAgY29sb3I6d2hpdGU7XG4gICAgICAgIGJhY2tncm91bmQ6ICMwRjIwMzM7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICAgbWF4LXdpZHRoOiAxNTBweDtcbiAgICAgICAgaGVpZ2h0OiA2MHB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgbWFyZ2luOiA4cHggMjBweDsgXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgcGFkZGluZzogMnB4IDMwcHg7IFxuXG4gICAgfVxuICAgIC5kb25lIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICB3aWR0aDogOTUlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4XG4gICAgfVxuICAgIHByb2dyZXNze1xuICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG5cdCAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogODYlO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGJvdHRvbTogNC43dmg7XG4gICAgICAgIGhlaWdodDogNnB4O1xuICAgICAgICB6LWluZGV4OiAtMTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDMxcHg7XG4gICAgfVxuICAgIHByb2dyZXNzOjotd2Via2l0LXByb2dyZXNzLWJhciB7XG5cdCAgICBiYWNrZ3JvdW5kOiAjMzAzNTM4O1xuXHR9XG4gICAgcHJvZ3Jlc3MuYmcxOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICAgICAgYmFja2dyb3VuZDogIzc0ZWY3YjtcbiAgICB9XG4gICAgcHJvZ3Jlc3MuYmcyOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICAgICAgYmFja2dyb3VuZDogI0YxQzMzMDtcbiAgICB9XG4gICAgcHJvZ3Jlc3MuYmczOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHtcbiAgICAgICAgYmFja2dyb3VuZDogI0U5NDA0MDtcbiAgICB9XG4gICAgLmJnMSB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vYmctZ3JvdXAxLnBuZycpO1xuICAgICAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xuICAgICAgICBjb2xvcjogIzc0ZWY3YjtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgIH1cbiAgICAuYmcyIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9iZy1ncm91cDIucG5nJyk7XG4gICAgICAgIGJhY2tncm91bmQtYmxlbmQtbW9kZTogbm9ybWFsO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XG4gICAgICAgIGNvbG9yOiAjRjFDMzMwO1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuICAgIC5iZzMge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2JnLWdyb3VwMy5wbmcnKTtcbiAgICAgICAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcbiAgICAgICAgY29sb3I6ICNFOTQwNDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICB9XG4gICAgI3Byb2dyZXNzLWhvbGRlciB7XG4gICAgICAgIHdpZHRoOiA4MCU7XG4gICAgfVxuICAgICNjaGFsbGVuZ2UtbmFtZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgIH1cbiAgICBcbjwvc3R5bGU+XG48IS0tXG5cbiAgICAgICAgXG48ZGl2IGNsYXNzPSdkb25lJz5cbiAgICB7aWYgYWN0aXZlfVxuICAgIDxpbWcgc3JjPScuL2xvY2stYWN0aXZlLnN2ZycgYWx0PVwiY29tcGxldGVkXCIgY2xhc3M9J2FjdGl2ZSBsb2NrJyAvPlxuICAgIFxuICAgICAgICA8aW1nIHNyYz0nLi9FbGxpcHNlLWFjdGl2ZS5wbmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdlbGxpcHNlIGFjdGl2ZScgLz5cbiAgICAgICAgPGltZyBzcmM9Jy4vRWxsaXBzZS1pbmFjdGl2ZS5wbmcnIGFsdD1cImNvbXBsZXRlZFwiIGNsYXNzPSdlbGxpcHNlIGluYWN0aXZlJyAvPlxuPC9kaXY+XG48L2Rpdj4tLT4iLCI8c2NyaXB0PlxuaW1wb3J0IHsgY291bnQsIHN0ZXAsIHF1aXpTdGVwcywgcHJvZ3Jlc3MgfSBmcm9tICcuLi9zdG9yZS5qcydcbmV4cG9ydCBsZXQgc3VjY2VzcyA9IHRydWU7XG5leHBvcnQgbGV0IHAgPSA3LjY7XG5leHBvcnQgbGV0IGdyZWVuID0gZmFsc2U7XG5leHBvcnQgbGV0IHllbGxvdyA9IGZhbHNlO1xuZXhwb3J0IGxldCByZWQgPSBmYWxzZTtcbi8vc2V0cyBjdXJyZW50IGljb24gZm9yIHNpZGViYXJcbmZ1bmN0aW9uIGluY3JlbWVudCgpIHtcbiAgICAgICAgJHF1aXpTdGVwc1skY291bnRdLmNvbXBsZXRlID0gdHJ1ZTtcbiAgICAgICAgJHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDI7XG4gICAgICAgIGNvdW50LnVwZGF0ZShuID0+IG4gKyAxKVxuICAgICAgICBwcm9ncmVzcy51cGRhdGUobiA9PiBuKz1wKVxuICAgICAgICBzdGVwLnNldCgwKTtcbn1cbmZ1bmN0aW9uIGluY29tcGxldGUoKSB7XG4gICAgICAgICRxdWl6U3RlcHNbJGNvdW50XS5jb21wbGV0ZSA9IGZhbHNlO1xuICAgICAgICAkcXVpelN0ZXBzWyRjb3VudF0uc3RhdHVzID0gMDtcbiAgICAgICAgY291bnQudXBkYXRlKG4gPT4gbiArIDEpXG4gICAgICAgIHByb2dyZXNzLnVwZGF0ZShuID0+IG4rPXApXG4gICAgICAgIHN0ZXAuc2V0KDApO1xufVxuPC9zY3JpcHQ+XG57I2lmIHN1Y2Nlc3N9XG4gICAgPGJ1dHRvbiBvbjpjbGljaz17aW5jcmVtZW50fSBjbGFzczpncmVlbiBjbGFzczp5ZWxsb3cgY2xhc3M6cmVkPlxuICAgICAgICA8c2xvdD5cblxuICAgICAgICA8L3Nsb3Q+XG4gICAgPC9idXR0b24+XG57OmVsc2V9XG4gICAgPGJ1dHRvbiBvbjpjbGljaz17aW5jb21wbGV0ZX0gY2xhc3M6Z3JlZW4gY2xhc3M6eWVsbG93IGNsYXNzOnJlZD5cbiAgICAgICAgPHNsb3Q+XG5cbiAgICAgICAgPC9zbG90PlxuICAgIDwvYnV0dG9uPlxuey9pZn1cbiAgICAgICBcbjxzdHlsZT5cbiAgICBidXR0b24ge1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG5cdFx0XHRtYXJnaW46IDEwcHg7XG5cdFx0XHRib3JkZXI6IGJsYWNrIHNvbGlkIDBweDtcblx0XHRcdGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICB9XG4gICAgLmdyZWVuIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzczZWY3YjtcbiAgICAgICAgY29sb3I6ICMyQzNDNEU7XG4gICAgfVxuICAgIC55ZWxsb3cge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjFDMzMwO1xuICAgICAgICBjb2xvcjogIzJDM0M0RTtcbiAgICB9XG4gICAgLnJlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFNzRFNDU7XG4gICAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgIH1cbjwvc3R5bGU+XG5cbiIsIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgc3RlcCwgcHJvZ3Jlc3MgfSBmcm9tICcuLi9zdG9yZS5qcydcbiAgICBleHBvcnQgbGV0IHEgPTE7XG4gICAgZXhwb3J0IGxldCBwID0gNy42O1xuICAgIGV4cG9ydCBsZXQgZ3JlZW4gPSBmYWxzZTtcbiAgICBleHBvcnQgbGV0IHllbGxvdyA9IGZhbHNlO1xuICAgIGV4cG9ydCBsZXQgcmVkID0gZmFsc2U7XG4gICBjb25zdCBpbmNyZWFzZSA9ICgpID0+IHtcbiAgICAgICBzdGVwLnVwZGF0ZShuID0+IG4rPSBxKTtcbiAgICAgIHByb2dyZXNzLnVwZGF0ZShuID0+IG4gKz0gcCl9O1xuPC9zY3JpcHQ+XG48YnV0dG9uIG9uOmNsaWNrPXtpbmNyZWFzZX0gY2xhc3M6Z3JlZW4gY2xhc3M6eWVsbG93IGNsYXNzOnJlZD5cbiAgICA8c2xvdD5cblxuICAgIDwvc2xvdD5cbjwvYnV0dG9uPlxuXG48c3R5bGU+XG4gICAgYnV0dG9uIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMjBweDtcblx0XHRcdG1hcmdpbjogMTBweDtcblx0XHRcdGJvcmRlcjogYmxhY2sgc29saWQgMHB4O1xuXHRcdFx0Ym9yZGVyLXJhZGl1czogOHB4O1xuICAgIH1cbiAgICAuZ3JlZW4ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzNlZjdiO1xuICAgICAgICBjb2xvcjogIzJDM0M0RTtcbiAgICB9XG4gICAgLnllbGxvdyB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGMUMzMzA7XG4gICAgICAgIGNvbG9yOiAjMkMzQzRFO1xuICAgIH1cbiAgICAucmVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0U3NEU0NTtcbiAgICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgfVxuPC9zdHlsZT5cbiIsIjxzY3JpcHQ+XG5pbXBvcnQgeyBjb3VudCwgc3RlcCwgcXVpelN0ZXBzLCBwcm9ncmVzcyB9IGZyb20gJy4uL3N0b3JlLmpzJ1xubGV0IHAgPSA3LjY7XG5mdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgaWYoJGNvdW50ID49IDEgJiYgJHN0ZXAgPT0gMCkge1xuICAgICAgICBhbGVydCgnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGdvIGJhY2s/JylcbiAgICAgICAgLy8kcXVpelN0ZXBzWyRjb3VudF0uY29tcGxldGUgPSB0cnVlO1xuICAgICAgICBjb3VudC51cGRhdGUobiA9PiBuIC0gMSlcbiAgICAgICAgJHF1aXpTdGVwc1skY291bnQrMV0uc3RhdHVzID0gMDtcbiAgICAgICAgaWYgKCRxdWl6U3RlcHNbJGNvdW50XS5zdGF0dXMgIT0gMikge1xuICAgICAgICAgICAgJHF1aXpTdGVwc1skY291bnRdLnN0YXR1cyA9IDE7XG4gICAgICAgIH1cbiAgICAgICAgc3RlcC5zZXQoJHF1aXpTdGVwc1skY291bnRdLnN0ZXBzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBzdGVwLnVwZGF0ZShuID0+IG4gLSAxKVxuICAgIH1cbn1cbjwvc2NyaXB0PlxueyNpZiAkY291bnQgPj0gMX1cbjxkaXYgaWQ9XCJiYWNrXCIgb246Y2xpY2s9eygpID0+IHtnb0JhY2soKVxuICAgIHByb2dyZXNzLnVwZGF0ZShuID0+IG4tPXApXG59fT5cbjxzdmcgd2lkdGg9XCIxMVwiIGhlaWdodD1cIjE4XCIgdmlld0JveD1cIjAgMCAxMSAxOFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgIDxwYXRoIGQ9XCJNMTEgMTUuODg1TDQuMjAxMDggOUwxMSAyLjExNUw4LjkwNjg4IDBMMCA5TDguOTA2ODggMThMMTEgMTUuODg1WlwiIGZpbGw9XCIjNzU3NTc1XCIvPlxuICAgIDwvc3ZnPiBCYWNrXG48L2Rpdj5cbnsvaWZ9XG48c3R5bGU+XG4gICAgI2JhY2sge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBwb3NpdGlvbjogaW5oZXJpdDtcbiAgICAgICAgYm90dG9tOiA3MnB4O1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGNvbG9yOiAjNzU3NTc1O1xuICAgICAgICBtYXJnaW46IDIwcHggMHB4O1xuXG4gICAgfVxuICAgIHN2ZyB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcbiAgICAgICAgZmlsbDogIzc1NzU3NTtcbiAgICB9XG48L3N0eWxlPiIsIjxzY3JpcHQ+XG4vLyBPcGVyYSA4LjArXG52YXIgaXNPcGVyYSA9ICghIXdpbmRvdy5vcHIgJiYgISFvcHIuYWRkb25zKSB8fCAhIXdpbmRvdy5vcGVyYSB8fCBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJyBPUFIvJykgPj0gMCA/IHRydWUgOiBmYWxzZTtcblxuLy8gRmlyZWZveCAxLjArXG52YXIgaXNGaXJlZm94ID0gdHlwZW9mIEluc3RhbGxUcmlnZ2VyICE9PSAndW5kZWZpbmVkJyA/IHRydWUgOiBmYWxzZTtcblxuLy8gU2FmYXJpIDMuMCsgXCJbb2JqZWN0IEhUTUxFbGVtZW50Q29uc3RydWN0b3JdXCIgXG52YXIgaXNTYWZhcmkgPSAvY29uc3RydWN0b3IvaS50ZXN0KHdpbmRvdy5IVE1MRWxlbWVudCkgfHwgKGZ1bmN0aW9uIChwKSB7IHJldHVybiBwLnRvU3RyaW5nKCkgPT09IFwiW29iamVjdCBTYWZhcmlSZW1vdGVOb3RpZmljYXRpb25dXCI7IH0pKCF3aW5kb3dbJ3NhZmFyaSddIHx8ICh0eXBlb2Ygc2FmYXJpICE9PSAndW5kZWZpbmVkJyAmJiBzYWZhcmkucHVzaE5vdGlmaWNhdGlvbikpID8gdHJ1ZSA6IGZhbHNlO1xuXG4vLyBJbnRlcm5ldCBFeHBsb3JlciA2LTExXG52YXIgaXNJRSA9IC8qQGNjX29uIUAqL2ZhbHNlIHx8ICEhZG9jdW1lbnQuZG9jdW1lbnRNb2RlID8gdHJ1ZSA6IGZhbHNlO1xuXG4vLyBFZGdlIDIwK1xudmFyIGlzRWRnZSA9ICFpc0lFICYmICEhd2luZG93LlN0eWxlTWVkaWEgPyB0cnVlIDogZmFsc2U7XG5cbi8vIENocm9tZSAxIC0gNzlcbnZhciBpc0Nocm9tZSA9ICEhd2luZG93LmNocm9tZSAmJiAoISF3aW5kb3cuY2hyb21lLndlYnN0b3JlIHx8ICEhd2luZG93LmNocm9tZS5ydW50aW1lKSA/IHRydWUgOiBmYWxzZTtcblxuLy8gRWRnZSAoYmFzZWQgb24gY2hyb21pdW0pIGRldGVjdGlvblxudmFyIGlzRWRnZUNocm9taXVtID0gaXNDaHJvbWUgJiYgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIkVkZ1wiKSAhPSAtMSkgPyB0cnVlIDogZmFsc2U7XG5cbi8vIEJsaW5rIGVuZ2luZSBkZXRlY3Rpb25cbnZhciBpc0JsaW5rID0gKGlzQ2hyb21lIHx8IGlzT3BlcmEpICYmICEhd2luZG93LkNTUyA/IHRydWUgOiBmYWxzZTtcblxuXG5sZXQgYnJvd3NlciA9ICdZb3VyIGJyb3dzZXIgaXM6JztcbmlmIChpc09wZXJhKXtcbiAgICBicm93c2VyKz0gXCIgT3BlcmFcIlxufSBlbHNlIGlmIChpc0ZpcmVmb3gpIHtcbiAgICBicm93c2VyKz0gXCIgRmlyZWZveFwiXG59ZWxzZSBpZiAoaXNTYWZhcmkpIHtcbiAgICBicm93c2VyKz0gXCIgU2FmYXJpXCJcbn1lbHNlIGlmIChpc0lFKSB7XG4gICAgYnJvd3Nlcis9IFwiIEludGVybmV0IEV4cGxvcmVyXCJcbn1lbHNlIGlmIChpc0VkZ2UpIHtcbiAgICBicm93c2VyKz0gXCIgRWRnZVwiXG59ZWxzZSBpZiAoaXNDaHJvbWUpIHtcbiAgICBicm93c2VyKz0gXCIgQ2hyb21lXCJcbn1lbHNlIGlmIChpc0VkZ2VDaHJvbWl1bSkge1xuICAgIGJyb3dzZXIrPSBcIiBFZGdlIENocm9taXVtXCJcbn0gZWxzZSB7XG4gICAgLy9icm93c2VyKz0gXCIgQmxpbmtcIlxufVxuPC9zY3JpcHQ+XG48cD48c3Ryb25nPnticm93c2VyfTwvc3Ryb25nPjwvcD5cbjxwPjwvcD5cbnsjaWYgaXNPcGVyYX0gXG5cdE9wZXJhIGluc3RydWN0aW9uc1xuezplbHNlIGlmIGlzRmlyZWZveH0gXG5cdDxvbD5cbiAgICAgICAgPGxpPkluIEZpcmVmb3gsIGNsaWNrIFRvb2xzID4gT3B0aW9ucyA+IFByaXZhY3k8L2xpPlxuICAgICAgICA8bGk+U2VsZWN0IFwiVXNlIGN1c3RvbSBzZXR0aW5ncyBmb3IgaGlzdG9yeVwiIGluIHRoZSBkcm9wLWRvd24gbWVudSBhdCB0aGUgdG9wIG9mIHRoZSBkaWFsb2cgYm94PC9saT4gXG4gICAgICAgIDxsaT5DaGVjayBcIkNsZWFyIGhpc3Rvcnkgd2hlbiBGaXJlZm94IGNsb3Nlc1wiIDwvbGk+XG4gICAgICAgIDxsaT5DbGljayB0aGUgU2V0dGluZ3MgYnV0dG9uIDwvbGk+XG4gICAgICAgIDxsaT5JbiB0aGUgU2V0dGluZ3MgZm9yIENsZWFyaW5nIEhpc3RvcnkgZGlhbG9nLCBjaGVjayB0aGUgb3B0aW9ucyB5b3Ugd2FudCB0byBlcmFzZSBvbiBleGl0IGFuZCBjbGljayBPSzwvbGk+XG4gICAgPC9vbD5cbns6ZWxzZSBpZiBpc1NhZmFyaSB9XG4gICAgPG9sPlxuICAgICAgICA8bGk+Q2xpY2sgdGhlIHdyZW5jaCBpY29uIGluIHRoZSB0b3AtcmlnaHQgY29ybmVyIG9mIHRoZSBicm93c2VyIHdpbmRvdyBhbmQgXG4gICAgICAgIDxsaT5DaG9vc2UgT3B0aW9ucyA+IFVuZGVyIHRoZSBIb29kID4gQ29udGVudCBTZXR0aW5ncyA+IENvb2tpZXMuPC9saT4gXG4gICAgICAgIDxsaT5CbG9jayBhbGwgdGhpcmQtcGFydHkgY29va2llcyBvciBhbGwgdHJhY2tpbmcgY29va2llczwvbGk+XG4gICAgICAgIDxsaT5Bbm90aGVyIG9wdGlvbiBpbiB0aGlzIGRpYWxvZyBsZXRzIHlvdSBkZWxldGUgYWxsIGNvb2tpZXMgYW5kIG90aGVyIHNpdGUgZGF0YSBhdXRvbWF0aWNhbGx5IHdoZW4geW91IGNsb3NlIHRoZSBicm93c2VyLjwvbGk+XG4gICAgPC9vbD5cbns6ZWxzZSBpZiBpc0lFfSBcblx0SUUgaW5zdHJ1Y3Rpb25zXG57OmVsc2UgaWYgaXNFZGdlIH1cblx0RWRnZSBpbnNydWN0aW9uc1xuezplbHNlIGlmIGlzQ2hyb21lIH1cblx0PG9sPlxuICAgICAgICA8bGk+Q2xpY2sgdGhlIHdyZW5jaCBpY29uIGluIHRoZSB0b3AtcmlnaHQgY29ybmVyIG9mIHRoZSBicm93c2VyIHdpbmRvdyBhbmQgXG4gICAgICAgIDxsaT5DaG9vc2UgT3B0aW9ucyA+IFVuZGVyIHRoZSBIb29kID4gQ29udGVudCBTZXR0aW5ncyA+IENvb2tpZXMuPC9saT4gXG4gICAgICAgIDxsaT5CbG9jayBhbGwgdGhpcmQtcGFydHkgY29va2llcyBvciBhbGwgdHJhY2tpbmcgY29va2llczwvbGk+XG4gICAgICAgIDxsaT5Bbm90aGVyIG9wdGlvbiBpbiB0aGlzIGRpYWxvZyBsZXRzIHlvdSBkZWxldGUgYWxsIGNvb2tpZXMgYW5kIG90aGVyIHNpdGUgZGF0YSBhdXRvbWF0aWNhbGx5IHdoZW4geW91IGNsb3NlIHRoZSBicm93c2VyLjwvbGk+XG4gICAgPC9vbD5cbns6ZWxzZSBpZiBpc0VkZ2VDaHJvbWl1bX1cblx0RWRnZSBDaHJvbWl1bSBpbnN0cnVjdGlvbnNcbns6ZWxzZX0gXG5cdFNvbWUgb3RoZXIgaW5zdHJ1Y3Rpb25zXG57L2lmfVxuPHA+PC9wPlxuPHN0eWxlPlxuICAgIHN0cm9uZ3tcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gICAgXG48L3N0eWxlPiIsIjxzY3JpcHQ+XG4gICAgZXhwb3J0IGxldCBjb2xvcjtcbiAgICBleHBvcnQgbGV0IGFjdGl2ZTtcbiAgICBhY3RpdmUgPTA7XG5cbjwvc2NyaXB0PlxueyNpZiBhY3RpdmUgPCAxIH1cbiAgICA8c3ZnIGNsYXNzPVwibG9ja1wiIHdpZHRoPVwiMjBcIiBoZWlnaHQ9XCIyMFwiIHZpZXdCb3g9XCIwIDAgMjAgMjBcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICA8Y2lyY2xlIGN4PVwiOS44MzMwMVwiIGN5PVwiOS45OTgwNVwiIHI9XCI2LjYyMzA1XCIgZmlsbD1cIiMzMDM1MzhcIi8+XG4gICAgPC9zdmc+XG5cbiAgICBcbns6ZWxzZSBpZiBhY3RpdmUgPiAxIH1cbiAgICA8c3ZnIGNsYXNzPVwibG9ja1wiIHdpZHRoPVwiMjFcIiBoZWlnaHQ9XCIyMVwiIHZpZXdCb3g9XCIwIDAgMjEgMjFcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICA8Y2lyY2xlIGN4PVwiMTAuNTk4NlwiIGN5PVwiMTAuMTIxMVwiIHI9XCIxMFwiIGZpbGw9XCJ7Y29sb3J9XCIvPlxuICAgIDxwYXRoIGQ9XCJNOC40MjEyNSAxNC45ODE1TDQuMDA3NDcgMTAuNTcxOUMzLjc0MjMgMTAuMzA3IDMuNzQyMyA5Ljg3NzQ5IDQuMDA3NDcgOS42MTI1NUw0Ljk2Nzc2IDguNjUzMTVDNS4yMzI5MyA4LjM4ODIxIDUuNjYyOSA4LjM4ODIxIDUuOTI4MDggOC42NTMxNUw4LjkwMTQxIDExLjYyMzZMMTUuMjcgNS4yNjExOUMxNS41MzUxIDQuOTk2MjcgMTUuOTY1MSA0Ljk5NjI3IDE2LjIzMDMgNS4yNjExOUwxNy4xOTA2IDYuMjIwNThDMTcuNDU1NyA2LjQ4NTUgMTcuNDU1NyA2LjkxNTA0IDE3LjE5MDYgNy4xNzk5OEw5LjM4MTU2IDE0Ljk4MTVDOS4xMTYzNyAxNS4yNDY0IDguNjg2NDIgMTUuMjQ2NCA4LjQyMTI1IDE0Ljk4MTVaXCIgZmlsbD1cIiMzMDM1MzhcIi8+XG4gICAgPC9zdmc+XG4gICAgXG4gIFxuezplbHNlfVxuPHN2ZyBjbGFzcz1cImxvY2tcIiB3aWR0aD1cIjIwXCIgaGVpZ2h0PVwiMjBcIiB2aWV3Qm94PVwiMCAwIDIwIDIwXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgPGNpcmNsZSBjeD1cIjEwXCIgY3k9XCIxMFwiIHI9XCIxMFwiIGZpbGw9XCJ7Y29sb3J9XCIvPlxuICAgIDxjaXJjbGUgY3g9XCI5LjgzMzAxXCIgY3k9XCI5Ljk5ODA1XCIgcj1cIjYuNjIzMDVcIiBmaWxsPVwiIzMwMzUzOFwiLz5cbiAgICA8L3N2Zz5cbiAgICBcbnsvaWZ9XG4gPHN0eWxlPlxuICAgICAubG9jayB7XG4gICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgIH1cbiA8L3N0eWxlPiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQyxJQUFJLGVBQUMsQ0FBQyxBQUNMLGdCQUFnQixDQUFFLEtBQUssQ0FDdkIsVUFBVSxDQUFFLFVBQVUsQUFDdkIsQ0FBQztBQ0RELGdCQUFFLENBQUUsQ0FBQyxjQUFDLENBQUMsQUFDTixNQUFNLENBQUUsQ0FBQyxDQUFDLElBQUksQUFDZixDQUFDLEFBRUQsRUFBRSxjQUFDLENBQUMsQUFDSCxTQUFTLENBQUUsS0FBSyxDQUNoQixXQUFXLENBQUUsR0FBRyxDQUNoQixNQUFNLENBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxBQUNwQixDQUFDLEFBRUQsQ0FBQyxjQUFDLENBQUMsQUFDRixNQUFNLENBQUUsR0FBRyxDQUFDLElBQUksQUFDakIsQ0FBQyxBQUVELE1BQU0sQUFBQyxZQUFZLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFDMUIsRUFBRSxjQUFDLENBQUMsQUFDSCxTQUFTLENBQUUsR0FBRyxBQUNmLENBQUMsQUFDRixDQUFDO0FDUEUsMkJBQVksQ0FBQyxBQUNiLGdCQUFnQixDQUFFLEtBQUssQ0FDdkIsT0FBTyxDQUFFLElBQUksQ0FDYixTQUFTLENBQUUsTUFBTSxDQUFDLE1BQU0sQ0FDeEIsV0FBVyxDQUFFLE1BQU0sQUFDbkIsQ0FBQyxBQUNELEdBQUcsZUFBQyxDQUFDLEFBQ0QsS0FBSyxDQUFFLEtBQUssQUFDaEIsQ0FBQztBQ3ZCSixnQ0FBRSxDQUFVLENBQUMsOEJBQUMsQ0FBQyxBQUNkLFVBQVUsQ0FBRSxNQUFNLENBQ2xCLE1BQU0sQ0FBRSxDQUFDLENBQUMsSUFBSSxBQUNmLENBQUMsQUFFRCxLQUFLLDhCQUFDLENBQUMsQUFDTixnQkFBZ0IsQ0FB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 */